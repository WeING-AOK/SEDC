/*
               File: B402_PC19_STUDY_DEL
        Description: 試験関連データ全物理削除
             Author: GeneXus Java Generator version 10_1_8-58720
       Generated on: July 3, 2017 14:54:29.99
       Program type: Callable routine
          Main DBMS: mysql
*/
import java.sql.*;
import com.genexus.db.*;
import com.genexus.*;
import com.genexus.distributed.*;
import com.genexus.search.*;

public final  class b402_pc19_study_del extends GXProcedure
{
   public b402_pc19_study_del( int remoteHandle )
   {
      super( remoteHandle , new ModelContext( b402_pc19_study_del.class ), "" );
   }

   public b402_pc19_study_del( int remoteHandle ,
                               ModelContext context )
   {
      super( remoteHandle , context, "" );
   }

   public String executeUdp( SdtTBM21_STUDY aP0 ,
                             short[] aP1 )
   {
      b402_pc19_study_del.this.AV9P_BC_STUDY = aP0;
      b402_pc19_study_del.this.aP2 = new String[] {""};
      initialize();
      privateExecute();
      return aP2[0];
   }

   public void execute( SdtTBM21_STUDY aP0 ,
                        short[] aP1 ,
                        String[] aP2 )
   {
      execute_int(aP0, aP1, aP2);
   }

   private void execute_int( SdtTBM21_STUDY aP0 ,
                             short[] aP1 ,
                             String[] aP2 )
   {
      b402_pc19_study_del.this.AV9P_BC_STUDY = aP0;
      b402_pc19_study_del.this.aP1 = aP1;
      b402_pc19_study_del.this.aP2 = aP2;
      initialize();
      /* GeneXus formulas */
      /* Output device settings */
      privateExecute();
   }

   private void privateExecute( )
   {
      AV8C_APP_ID = "B402" ;
      /* Execute user subroutine: S11475 */
      S11475 ();
      if ( returnInSub )
      {
         returnInSub = true;
         cleanup();
         if (true) return;
      }
      AV13W_RTN_CD = (short)(0) ;
      AV14W_RTN_MSG = "" ;
      /* Optimized DELETE. */
      /* Using cursor P00572 */
      pr_default.execute(0, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00573 */
      pr_default.execute(1, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00574 */
      pr_default.execute(2, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00575 */
      pr_default.execute(3, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00576 */
      pr_default.execute(4, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00577 */
      pr_default.execute(5, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      /* End optimized DELETE. */
      /* Optimized DELETE. */
      /* Using cursor P00578 */
      pr_default.execute(6, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      /* End optimized DELETE. */
      /* Using cursor P00579 */
      pr_default.execute(7, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(7) != 101) )
      {
         A471TBM35_STUDY_ID = P00579_A471TBM35_STUDY_ID[0] ;
         A472TBM35_CRF_ID = P00579_A472TBM35_CRF_ID[0] ;
         A473TBM35_CRF_ITEM_CD = P00579_A473TBM35_CRF_ITEM_CD[0] ;
         A474TBM35_STUDY_AUTH_CD = P00579_A474TBM35_STUDY_AUTH_CD[0] ;
         A475TBM35_DISPLAY_FLG = P00579_A475TBM35_DISPLAY_FLG[0] ;
         n475TBM35_DISPLAY_FLG = P00579_n475TBM35_DISPLAY_FLG[0] ;
         A476TBM35_DEL_FLG = P00579_A476TBM35_DEL_FLG[0] ;
         n476TBM35_DEL_FLG = P00579_n476TBM35_DEL_FLG[0] ;
         A483TBM35_UPD_CNT = P00579_A483TBM35_UPD_CNT[0] ;
         n483TBM35_UPD_CNT = P00579_n483TBM35_UPD_CNT[0] ;
         A482TBM35_UPD_PROG_NM = P00579_A482TBM35_UPD_PROG_NM[0] ;
         n482TBM35_UPD_PROG_NM = P00579_n482TBM35_UPD_PROG_NM[0] ;
         A481TBM35_UPD_USER_ID = P00579_A481TBM35_UPD_USER_ID[0] ;
         n481TBM35_UPD_USER_ID = P00579_n481TBM35_UPD_USER_ID[0] ;
         A480TBM35_UPD_DATETIME = P00579_A480TBM35_UPD_DATETIME[0] ;
         n480TBM35_UPD_DATETIME = P00579_n480TBM35_UPD_DATETIME[0] ;
         A479TBM35_CRT_PROG_NM = P00579_A479TBM35_CRT_PROG_NM[0] ;
         n479TBM35_CRT_PROG_NM = P00579_n479TBM35_CRT_PROG_NM[0] ;
         A478TBM35_CRT_USER_ID = P00579_A478TBM35_CRT_USER_ID[0] ;
         n478TBM35_CRT_USER_ID = P00579_n478TBM35_CRT_USER_ID[0] ;
         A477TBM35_CRT_DATETIME = P00579_A477TBM35_CRT_DATETIME[0] ;
         n477TBM35_CRT_DATETIME = P00579_n477TBM35_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A471TBM35_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A472TBM35_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A473TBM35_CRF_ITEM_CD, 0);
         AV12W_ITEMS.add(A474TBM35_STUDY_AUTH_CD, 0);
         AV12W_ITEMS.add(A475TBM35_DISPLAY_FLG, 0);
         AV12W_ITEMS.add(A476TBM35_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM35_CRF_ITEM_AUTH", AV12W_ITEMS, A477TBM35_CRT_DATETIME, A478TBM35_CRT_USER_ID, A479TBM35_CRT_PROG_NM, A480TBM35_UPD_DATETIME, A481TBM35_UPD_USER_ID, A482TBM35_UPD_PROG_NM, A483TBM35_UPD_CNT) ;
         /* Using cursor P005710 */
         pr_default.execute(8, new Object[] {new Long(A471TBM35_STUDY_ID), new Short(A472TBM35_CRF_ID), A473TBM35_CRF_ITEM_CD, A474TBM35_STUDY_AUTH_CD});
         pr_default.readNext(7);
      }
      pr_default.close(7);
      /* Using cursor P005711 */
      pr_default.execute(9, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(9) != 101) )
      {
         A259TBM41_STUDY_ID = P005711_A259TBM41_STUDY_ID[0] ;
         A260TBM41_CRF_ID = P005711_A260TBM41_CRF_ID[0] ;
         A378TBM41_CRF_ITEM_GRP_DIV = P005711_A378TBM41_CRF_ITEM_GRP_DIV[0] ;
         A261TBM41_CRF_ITEM_GRP_CD = P005711_A261TBM41_CRF_ITEM_GRP_CD[0] ;
         A262TBM41_NCM_METADATA_ID = P005711_A262TBM41_NCM_METADATA_ID[0] ;
         n262TBM41_NCM_METADATA_ID = P005711_n262TBM41_NCM_METADATA_ID[0] ;
         A263TBM41_DEL_FLG = P005711_A263TBM41_DEL_FLG[0] ;
         n263TBM41_DEL_FLG = P005711_n263TBM41_DEL_FLG[0] ;
         A270TBM41_UPD_CNT = P005711_A270TBM41_UPD_CNT[0] ;
         n270TBM41_UPD_CNT = P005711_n270TBM41_UPD_CNT[0] ;
         A269TBM41_UPD_PROG_NM = P005711_A269TBM41_UPD_PROG_NM[0] ;
         n269TBM41_UPD_PROG_NM = P005711_n269TBM41_UPD_PROG_NM[0] ;
         A268TBM41_UPD_USER_ID = P005711_A268TBM41_UPD_USER_ID[0] ;
         n268TBM41_UPD_USER_ID = P005711_n268TBM41_UPD_USER_ID[0] ;
         A267TBM41_UPD_DATETIME = P005711_A267TBM41_UPD_DATETIME[0] ;
         n267TBM41_UPD_DATETIME = P005711_n267TBM41_UPD_DATETIME[0] ;
         A266TBM41_CRT_PROG_NM = P005711_A266TBM41_CRT_PROG_NM[0] ;
         n266TBM41_CRT_PROG_NM = P005711_n266TBM41_CRT_PROG_NM[0] ;
         A265TBM41_CRT_USER_ID = P005711_A265TBM41_CRT_USER_ID[0] ;
         n265TBM41_CRT_USER_ID = P005711_n265TBM41_CRT_USER_ID[0] ;
         A264TBM41_CRT_DATETIME = P005711_A264TBM41_CRT_DATETIME[0] ;
         n264TBM41_CRT_DATETIME = P005711_n264TBM41_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A259TBM41_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A260TBM41_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A378TBM41_CRF_ITEM_GRP_DIV, 0);
         AV12W_ITEMS.add(A261TBM41_CRF_ITEM_GRP_CD, 0);
         AV12W_ITEMS.add(A262TBM41_NCM_METADATA_ID, 0);
         AV12W_ITEMS.add(A263TBM41_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM41_CRF_NCM_MAP", AV12W_ITEMS, A264TBM41_CRT_DATETIME, A265TBM41_CRT_USER_ID, A266TBM41_CRT_PROG_NM, A267TBM41_UPD_DATETIME, A268TBM41_UPD_USER_ID, A269TBM41_UPD_PROG_NM, A270TBM41_UPD_CNT) ;
         /* Using cursor P005712 */
         pr_default.execute(10, new Object[] {new Long(A259TBM41_STUDY_ID), new Short(A260TBM41_CRF_ID), A378TBM41_CRF_ITEM_GRP_DIV, A261TBM41_CRF_ITEM_GRP_CD});
         pr_default.readNext(9);
      }
      pr_default.close(9);
      /* Using cursor P005713 */
      pr_default.execute(11, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(11) != 101) )
      {
         A894TBM43_STUDY_ID = P005713_A894TBM43_STUDY_ID[0] ;
         A895TBM43_DOM_CD = P005713_A895TBM43_DOM_CD[0] ;
         A896TBM43_DOM_VAR_NM = P005713_A896TBM43_DOM_VAR_NM[0] ;
         A897TBM43_VAR_DESC = P005713_A897TBM43_VAR_DESC[0] ;
         n897TBM43_VAR_DESC = P005713_n897TBM43_VAR_DESC[0] ;
         A898TBM43_SDTM_FLG = P005713_A898TBM43_SDTM_FLG[0] ;
         n898TBM43_SDTM_FLG = P005713_n898TBM43_SDTM_FLG[0] ;
         A899TBM43_CDASH_FLG = P005713_A899TBM43_CDASH_FLG[0] ;
         n899TBM43_CDASH_FLG = P005713_n899TBM43_CDASH_FLG[0] ;
         A900TBM43_INPUT_TYPE_DIV = P005713_A900TBM43_INPUT_TYPE_DIV[0] ;
         n900TBM43_INPUT_TYPE_DIV = P005713_n900TBM43_INPUT_TYPE_DIV[0] ;
         A901TBM43_REQUIRED_FLG = P005713_A901TBM43_REQUIRED_FLG[0] ;
         n901TBM43_REQUIRED_FLG = P005713_n901TBM43_REQUIRED_FLG[0] ;
         A902TBM43_SAS_FIELD_NM = P005713_A902TBM43_SAS_FIELD_NM[0] ;
         n902TBM43_SAS_FIELD_NM = P005713_n902TBM43_SAS_FIELD_NM[0] ;
         A903TBM43_ODM_DATA_TYPE = P005713_A903TBM43_ODM_DATA_TYPE[0] ;
         n903TBM43_ODM_DATA_TYPE = P005713_n903TBM43_ODM_DATA_TYPE[0] ;
         A904TBM43_NOTE = P005713_A904TBM43_NOTE[0] ;
         n904TBM43_NOTE = P005713_n904TBM43_NOTE[0] ;
         A905TBM43_ORDER = P005713_A905TBM43_ORDER[0] ;
         n905TBM43_ORDER = P005713_n905TBM43_ORDER[0] ;
         A906TBM43_DEL_FLG = P005713_A906TBM43_DEL_FLG[0] ;
         n906TBM43_DEL_FLG = P005713_n906TBM43_DEL_FLG[0] ;
         A921TBM43_UPD_CNT = P005713_A921TBM43_UPD_CNT[0] ;
         n921TBM43_UPD_CNT = P005713_n921TBM43_UPD_CNT[0] ;
         A915TBM43_UPD_PROG_NM = P005713_A915TBM43_UPD_PROG_NM[0] ;
         n915TBM43_UPD_PROG_NM = P005713_n915TBM43_UPD_PROG_NM[0] ;
         A914TBM43_UPD_USER_ID = P005713_A914TBM43_UPD_USER_ID[0] ;
         n914TBM43_UPD_USER_ID = P005713_n914TBM43_UPD_USER_ID[0] ;
         A920TBM43_UPD_DATETIME = P005713_A920TBM43_UPD_DATETIME[0] ;
         n920TBM43_UPD_DATETIME = P005713_n920TBM43_UPD_DATETIME[0] ;
         A913TBM43_CRT_PROG_NM = P005713_A913TBM43_CRT_PROG_NM[0] ;
         n913TBM43_CRT_PROG_NM = P005713_n913TBM43_CRT_PROG_NM[0] ;
         A912TBM43_CRT_USER_ID = P005713_A912TBM43_CRT_USER_ID[0] ;
         n912TBM43_CRT_USER_ID = P005713_n912TBM43_CRT_USER_ID[0] ;
         A919TBM43_CRT_DATETIME = P005713_A919TBM43_CRT_DATETIME[0] ;
         n919TBM43_CRT_DATETIME = P005713_n919TBM43_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A894TBM43_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A895TBM43_DOM_CD, 0);
         AV12W_ITEMS.add(A896TBM43_DOM_VAR_NM, 0);
         AV12W_ITEMS.add(A897TBM43_VAR_DESC, 0);
         AV12W_ITEMS.add(A898TBM43_SDTM_FLG, 0);
         AV12W_ITEMS.add(A899TBM43_CDASH_FLG, 0);
         AV12W_ITEMS.add(A900TBM43_INPUT_TYPE_DIV, 0);
         AV12W_ITEMS.add(A901TBM43_REQUIRED_FLG, 0);
         AV12W_ITEMS.add(A902TBM43_SAS_FIELD_NM, 0);
         AV12W_ITEMS.add(A903TBM43_ODM_DATA_TYPE, 0);
         AV12W_ITEMS.add(A904TBM43_NOTE, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A905TBM43_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(A906TBM43_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM43_STUDY_CDISC_ITEM", AV12W_ITEMS, A919TBM43_CRT_DATETIME, A912TBM43_CRT_USER_ID, A913TBM43_CRT_PROG_NM, A920TBM43_UPD_DATETIME, A914TBM43_UPD_USER_ID, A915TBM43_UPD_PROG_NM, A921TBM43_UPD_CNT) ;
         /* Using cursor P005714 */
         pr_default.execute(12, new Object[] {new Long(A894TBM43_STUDY_ID), A895TBM43_DOM_CD, A896TBM43_DOM_VAR_NM});
         pr_default.readNext(11);
      }
      pr_default.close(11);
      /* Using cursor P005715 */
      pr_default.execute(13, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(13) != 101) )
      {
         A886TBM42_STUDY_ID = P005715_A886TBM42_STUDY_ID[0] ;
         A893TBM42_DOM_CD = P005715_A893TBM42_DOM_CD[0] ;
         A888TBM42_DOM_ENM = P005715_A888TBM42_DOM_ENM[0] ;
         n888TBM42_DOM_ENM = P005715_n888TBM42_DOM_ENM[0] ;
         A889TBM42_DOM_JNM = P005715_A889TBM42_DOM_JNM[0] ;
         n889TBM42_DOM_JNM = P005715_n889TBM42_DOM_JNM[0] ;
         A890TBM42_DOM_GRP_NM = P005715_A890TBM42_DOM_GRP_NM[0] ;
         n890TBM42_DOM_GRP_NM = P005715_n890TBM42_DOM_GRP_NM[0] ;
         A891TBM42_NOTE = P005715_A891TBM42_NOTE[0] ;
         n891TBM42_NOTE = P005715_n891TBM42_NOTE[0] ;
         A892TBM42_ORDER = P005715_A892TBM42_ORDER[0] ;
         n892TBM42_ORDER = P005715_n892TBM42_ORDER[0] ;
         A887TBM42_DEL_FLG = P005715_A887TBM42_DEL_FLG[0] ;
         n887TBM42_DEL_FLG = P005715_n887TBM42_DEL_FLG[0] ;
         A918TBM42_UPD_CNT = P005715_A918TBM42_UPD_CNT[0] ;
         n918TBM42_UPD_CNT = P005715_n918TBM42_UPD_CNT[0] ;
         A911TBM42_UPD_PROG_NM = P005715_A911TBM42_UPD_PROG_NM[0] ;
         n911TBM42_UPD_PROG_NM = P005715_n911TBM42_UPD_PROG_NM[0] ;
         A910TBM42_UPD_USER_ID = P005715_A910TBM42_UPD_USER_ID[0] ;
         n910TBM42_UPD_USER_ID = P005715_n910TBM42_UPD_USER_ID[0] ;
         A917TBM42_UPD_DATETIME = P005715_A917TBM42_UPD_DATETIME[0] ;
         n917TBM42_UPD_DATETIME = P005715_n917TBM42_UPD_DATETIME[0] ;
         A909TBM42_CRT_PROG_NM = P005715_A909TBM42_CRT_PROG_NM[0] ;
         n909TBM42_CRT_PROG_NM = P005715_n909TBM42_CRT_PROG_NM[0] ;
         A908TBM42_CRT_USER_ID = P005715_A908TBM42_CRT_USER_ID[0] ;
         n908TBM42_CRT_USER_ID = P005715_n908TBM42_CRT_USER_ID[0] ;
         A916TBM42_CRT_DATETIME = P005715_A916TBM42_CRT_DATETIME[0] ;
         n916TBM42_CRT_DATETIME = P005715_n916TBM42_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A886TBM42_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A893TBM42_DOM_CD, 0);
         AV12W_ITEMS.add(A888TBM42_DOM_ENM, 0);
         AV12W_ITEMS.add(A889TBM42_DOM_JNM, 0);
         AV12W_ITEMS.add(A890TBM42_DOM_GRP_NM, 0);
         AV12W_ITEMS.add(A891TBM42_NOTE, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A892TBM42_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(A887TBM42_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM42_STUDY_CDISC_DOMAIN", AV12W_ITEMS, A916TBM42_CRT_DATETIME, A908TBM42_CRT_USER_ID, A909TBM42_CRT_PROG_NM, A917TBM42_UPD_DATETIME, A910TBM42_UPD_USER_ID, A911TBM42_UPD_PROG_NM, A918TBM42_UPD_CNT) ;
         /* Using cursor P005716 */
         pr_default.execute(14, new Object[] {new Long(A886TBM42_STUDY_ID), A893TBM42_DOM_CD});
         pr_default.readNext(13);
      }
      pr_default.close(13);
      /* Using cursor P005717 */
      pr_default.execute(15, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(15) != 101) )
      {
         A271TBM37_STUDY_ID = P005717_A271TBM37_STUDY_ID[0] ;
         A272TBM37_CRF_ID = P005717_A272TBM37_CRF_ID[0] ;
         A372TBM37_CRF_ITEM_GRP_DIV = P005717_A372TBM37_CRF_ITEM_GRP_DIV[0] ;
         A273TBM37_CRF_ITEM_GRP_CD = P005717_A273TBM37_CRF_ITEM_GRP_CD[0] ;
         A373TBM37_VISIT_NO = P005717_A373TBM37_VISIT_NO[0] ;
         n373TBM37_VISIT_NO = P005717_n373TBM37_VISIT_NO[0] ;
         A374TBM37_DOM_CD = P005717_A374TBM37_DOM_CD[0] ;
         n374TBM37_DOM_CD = P005717_n374TBM37_DOM_CD[0] ;
         A375TBM37_DOM_VAR_NM = P005717_A375TBM37_DOM_VAR_NM[0] ;
         n375TBM37_DOM_VAR_NM = P005717_n375TBM37_DOM_VAR_NM[0] ;
         A376TBM37_DOM_ITM_GRP_OID = P005717_A376TBM37_DOM_ITM_GRP_OID[0] ;
         n376TBM37_DOM_ITM_GRP_OID = P005717_n376TBM37_DOM_ITM_GRP_OID[0] ;
         A377TBM37_DOM_ITM_GRP_ATTR_SEQ = P005717_A377TBM37_DOM_ITM_GRP_ATTR_SEQ[0] ;
         n377TBM37_DOM_ITM_GRP_ATTR_SEQ = P005717_n377TBM37_DOM_ITM_GRP_ATTR_SEQ[0] ;
         A612TBM37_DOM_ITM_GRP_ROWNO = P005717_A612TBM37_DOM_ITM_GRP_ROWNO[0] ;
         n612TBM37_DOM_ITM_GRP_ROWNO = P005717_n612TBM37_DOM_ITM_GRP_ROWNO[0] ;
         A274TBM37_DEL_FLG = P005717_A274TBM37_DEL_FLG[0] ;
         n274TBM37_DEL_FLG = P005717_n274TBM37_DEL_FLG[0] ;
         A281TBM37_UPD_CNT = P005717_A281TBM37_UPD_CNT[0] ;
         n281TBM37_UPD_CNT = P005717_n281TBM37_UPD_CNT[0] ;
         A280TBM37_UPD_PROG_NM = P005717_A280TBM37_UPD_PROG_NM[0] ;
         n280TBM37_UPD_PROG_NM = P005717_n280TBM37_UPD_PROG_NM[0] ;
         A279TBM37_UPD_USER_ID = P005717_A279TBM37_UPD_USER_ID[0] ;
         n279TBM37_UPD_USER_ID = P005717_n279TBM37_UPD_USER_ID[0] ;
         A278TBM37_UPD_DATETIME = P005717_A278TBM37_UPD_DATETIME[0] ;
         n278TBM37_UPD_DATETIME = P005717_n278TBM37_UPD_DATETIME[0] ;
         A277TBM37_CRT_PROG_NM = P005717_A277TBM37_CRT_PROG_NM[0] ;
         n277TBM37_CRT_PROG_NM = P005717_n277TBM37_CRT_PROG_NM[0] ;
         A276TBM37_CRT_USER_ID = P005717_A276TBM37_CRT_USER_ID[0] ;
         n276TBM37_CRT_USER_ID = P005717_n276TBM37_CRT_USER_ID[0] ;
         A275TBM37_CRT_DATETIME = P005717_A275TBM37_CRT_DATETIME[0] ;
         n275TBM37_CRT_DATETIME = P005717_n275TBM37_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A271TBM37_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A272TBM37_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A372TBM37_CRF_ITEM_GRP_DIV, 0);
         AV12W_ITEMS.add(A273TBM37_CRF_ITEM_GRP_CD, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A373TBM37_VISIT_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A374TBM37_DOM_CD, 0);
         AV12W_ITEMS.add(A375TBM37_DOM_VAR_NM, 0);
         AV12W_ITEMS.add(A376TBM37_DOM_ITM_GRP_OID, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A377TBM37_DOM_ITM_GRP_ATTR_SEQ, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A612TBM37_DOM_ITM_GRP_ROWNO, 10, 0)), 0);
         AV12W_ITEMS.add(A274TBM37_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM37_CRF_DOM_MAP", AV12W_ITEMS, A275TBM37_CRT_DATETIME, A276TBM37_CRT_USER_ID, A277TBM37_CRT_PROG_NM, A278TBM37_UPD_DATETIME, A279TBM37_UPD_USER_ID, A280TBM37_UPD_PROG_NM, A281TBM37_UPD_CNT) ;
         /* Using cursor P005718 */
         pr_default.execute(16, new Object[] {new Long(A271TBM37_STUDY_ID), new Short(A272TBM37_CRF_ID), A372TBM37_CRF_ITEM_GRP_DIV, A273TBM37_CRF_ITEM_GRP_CD});
         pr_default.readNext(15);
      }
      pr_default.close(15);
      /* Using cursor P005719 */
      pr_default.execute(17, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(17) != 101) )
      {
         A512TBM11_STUDY_ID = P005719_A512TBM11_STUDY_ID[0] ;
         n512TBM11_STUDY_ID = P005719_n512TBM11_STUDY_ID[0] ;
         A411TBM11_IMAGE_CD = P005719_A411TBM11_IMAGE_CD[0] ;
         A542TBM11_IMAGE_NM = P005719_A542TBM11_IMAGE_NM[0] ;
         n542TBM11_IMAGE_NM = P005719_n542TBM11_IMAGE_NM[0] ;
         A413TBM11_FILE_NAME = P005719_A413TBM11_FILE_NAME[0] ;
         n413TBM11_FILE_NAME = P005719_n413TBM11_FILE_NAME[0] ;
         A414TBM11_DEL_FLG = P005719_A414TBM11_DEL_FLG[0] ;
         n414TBM11_DEL_FLG = P005719_n414TBM11_DEL_FLG[0] ;
         A421TBM11_UPD_CNT = P005719_A421TBM11_UPD_CNT[0] ;
         n421TBM11_UPD_CNT = P005719_n421TBM11_UPD_CNT[0] ;
         A420TBM11_UPD_PROG_NM = P005719_A420TBM11_UPD_PROG_NM[0] ;
         n420TBM11_UPD_PROG_NM = P005719_n420TBM11_UPD_PROG_NM[0] ;
         A419TBM11_UPD_USER_ID = P005719_A419TBM11_UPD_USER_ID[0] ;
         n419TBM11_UPD_USER_ID = P005719_n419TBM11_UPD_USER_ID[0] ;
         A418TBM11_UPD_DATETIME = P005719_A418TBM11_UPD_DATETIME[0] ;
         n418TBM11_UPD_DATETIME = P005719_n418TBM11_UPD_DATETIME[0] ;
         A417TBM11_CRT_PROG_NM = P005719_A417TBM11_CRT_PROG_NM[0] ;
         n417TBM11_CRT_PROG_NM = P005719_n417TBM11_CRT_PROG_NM[0] ;
         A416TBM11_CRT_USER_ID = P005719_A416TBM11_CRT_USER_ID[0] ;
         n416TBM11_CRT_USER_ID = P005719_n416TBM11_CRT_USER_ID[0] ;
         A415TBM11_CRT_DATETIME = P005719_A415TBM11_CRT_DATETIME[0] ;
         n415TBM11_CRT_DATETIME = P005719_n415TBM11_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(A411TBM11_IMAGE_CD, 0);
         AV12W_ITEMS.add(A542TBM11_IMAGE_NM, 0);
         AV12W_ITEMS.add(A413TBM11_FILE_NAME, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A512TBM11_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A414TBM11_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM11_IMAGE", AV12W_ITEMS, A415TBM11_CRT_DATETIME, A416TBM11_CRT_USER_ID, A417TBM11_CRT_PROG_NM, A418TBM11_UPD_DATETIME, A419TBM11_UPD_USER_ID, A420TBM11_UPD_PROG_NM, A421TBM11_UPD_CNT) ;
         /* Using cursor P005720 */
         pr_default.execute(18, new Object[] {A411TBM11_IMAGE_CD});
         pr_default.readNext(17);
      }
      pr_default.close(17);
      /* Using cursor P005721 */
      pr_default.execute(19, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(19) != 101) )
      {
         A422TBM24_STUDY_ID = P005721_A422TBM24_STUDY_ID[0] ;
         A423TBM24_DOM_CD = P005721_A423TBM24_DOM_CD[0] ;
         A424TBM24_DOM_VAR_NM = P005721_A424TBM24_DOM_VAR_NM[0] ;
         A617TBM24_DOM_ITM_GRP_OID = P005721_A617TBM24_DOM_ITM_GRP_OID[0] ;
         n617TBM24_DOM_ITM_GRP_OID = P005721_n617TBM24_DOM_ITM_GRP_OID[0] ;
         A618TBM24_DOM_ITM_GRP_ATTR_SEQ = P005721_A618TBM24_DOM_ITM_GRP_ATTR_SEQ[0] ;
         n618TBM24_DOM_ITM_GRP_ATTR_SEQ = P005721_n618TBM24_DOM_ITM_GRP_ATTR_SEQ[0] ;
         A619TBM24_DOM_ITM_GRP_ROWNO = P005721_A619TBM24_DOM_ITM_GRP_ROWNO[0] ;
         n619TBM24_DOM_ITM_GRP_ROWNO = P005721_n619TBM24_DOM_ITM_GRP_ROWNO[0] ;
         A620TBM24_CRF_ITEM_NM = P005721_A620TBM24_CRF_ITEM_NM[0] ;
         n620TBM24_CRF_ITEM_NM = P005721_n620TBM24_CRF_ITEM_NM[0] ;
         A425TBM24_CRF_ITEM_DIV = P005721_A425TBM24_CRF_ITEM_DIV[0] ;
         A543TBM24_IDENTIFICATION_CD = P005721_A543TBM24_IDENTIFICATION_CD[0] ;
         n543TBM24_IDENTIFICATION_CD = P005721_n543TBM24_IDENTIFICATION_CD[0] ;
         A544TBM24_TEXT_MAXLENGTH = P005721_A544TBM24_TEXT_MAXLENGTH[0] ;
         n544TBM24_TEXT_MAXLENGTH = P005721_n544TBM24_TEXT_MAXLENGTH[0] ;
         A545TBM24_TEXT_MAXROWS = P005721_A545TBM24_TEXT_MAXROWS[0] ;
         n545TBM24_TEXT_MAXROWS = P005721_n545TBM24_TEXT_MAXROWS[0] ;
         A546TBM24_DECIMAL_DIGITS = P005721_A546TBM24_DECIMAL_DIGITS[0] ;
         n546TBM24_DECIMAL_DIGITS = P005721_n546TBM24_DECIMAL_DIGITS[0] ;
         A547TBM24_TEXT = P005721_A547TBM24_TEXT[0] ;
         n547TBM24_TEXT = P005721_n547TBM24_TEXT[0] ;
         A548TBM24_FIXED_VALUE = P005721_A548TBM24_FIXED_VALUE[0] ;
         n548TBM24_FIXED_VALUE = P005721_n548TBM24_FIXED_VALUE[0] ;
         A549TBM24_CHK_FALSE_INNER_VALUE = P005721_A549TBM24_CHK_FALSE_INNER_VALUE[0] ;
         n549TBM24_CHK_FALSE_INNER_VALUE = P005721_n549TBM24_CHK_FALSE_INNER_VALUE[0] ;
         A621TBM24_REQUIRED_INPUT_FLG = P005721_A621TBM24_REQUIRED_INPUT_FLG[0] ;
         n621TBM24_REQUIRED_INPUT_FLG = P005721_n621TBM24_REQUIRED_INPUT_FLG[0] ;
         A622TBM24_MIN_VALUE = P005721_A622TBM24_MIN_VALUE[0] ;
         n622TBM24_MIN_VALUE = P005721_n622TBM24_MIN_VALUE[0] ;
         A623TBM24_MAX_VALUE = P005721_A623TBM24_MAX_VALUE[0] ;
         n623TBM24_MAX_VALUE = P005721_n623TBM24_MAX_VALUE[0] ;
         A426TBM24_ORDER = P005721_A426TBM24_ORDER[0] ;
         n426TBM24_ORDER = P005721_n426TBM24_ORDER[0] ;
         A427TBM24_DEL_FLG = P005721_A427TBM24_DEL_FLG[0] ;
         n427TBM24_DEL_FLG = P005721_n427TBM24_DEL_FLG[0] ;
         A434TBM24_UPD_CNT = P005721_A434TBM24_UPD_CNT[0] ;
         n434TBM24_UPD_CNT = P005721_n434TBM24_UPD_CNT[0] ;
         A433TBM24_UPD_PROG_NM = P005721_A433TBM24_UPD_PROG_NM[0] ;
         n433TBM24_UPD_PROG_NM = P005721_n433TBM24_UPD_PROG_NM[0] ;
         A432TBM24_UPD_USER_ID = P005721_A432TBM24_UPD_USER_ID[0] ;
         n432TBM24_UPD_USER_ID = P005721_n432TBM24_UPD_USER_ID[0] ;
         A431TBM24_UPD_DATETIME = P005721_A431TBM24_UPD_DATETIME[0] ;
         n431TBM24_UPD_DATETIME = P005721_n431TBM24_UPD_DATETIME[0] ;
         A430TBM24_CRT_PROG_NM = P005721_A430TBM24_CRT_PROG_NM[0] ;
         n430TBM24_CRT_PROG_NM = P005721_n430TBM24_CRT_PROG_NM[0] ;
         A429TBM24_CRT_USER_ID = P005721_A429TBM24_CRT_USER_ID[0] ;
         n429TBM24_CRT_USER_ID = P005721_n429TBM24_CRT_USER_ID[0] ;
         A428TBM24_CRT_DATETIME = P005721_A428TBM24_CRT_DATETIME[0] ;
         n428TBM24_CRT_DATETIME = P005721_n428TBM24_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A422TBM24_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A423TBM24_DOM_CD, 0);
         AV12W_ITEMS.add(A424TBM24_DOM_VAR_NM, 0);
         AV12W_ITEMS.add(A617TBM24_DOM_ITM_GRP_OID, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A618TBM24_DOM_ITM_GRP_ATTR_SEQ, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A619TBM24_DOM_ITM_GRP_ROWNO, 10, 0)), 0);
         AV12W_ITEMS.add(A620TBM24_CRF_ITEM_NM, 0);
         AV12W_ITEMS.add(A425TBM24_CRF_ITEM_DIV, 0);
         AV12W_ITEMS.add(A543TBM24_IDENTIFICATION_CD, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A544TBM24_TEXT_MAXLENGTH, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A545TBM24_TEXT_MAXROWS, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A546TBM24_DECIMAL_DIGITS, 10, 0)), 0);
         AV12W_ITEMS.add(A547TBM24_TEXT, 0);
         AV12W_ITEMS.add(A548TBM24_FIXED_VALUE, 0);
         AV12W_ITEMS.add(A549TBM24_CHK_FALSE_INNER_VALUE, 0);
         AV12W_ITEMS.add(A621TBM24_REQUIRED_INPUT_FLG, 0);
         AV12W_ITEMS.add(A622TBM24_MIN_VALUE, 0);
         AV12W_ITEMS.add(A623TBM24_MAX_VALUE, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A426TBM24_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(A427TBM24_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM24_MAP_ITEM", AV12W_ITEMS, A428TBM24_CRT_DATETIME, A429TBM24_CRT_USER_ID, A430TBM24_CRT_PROG_NM, A431TBM24_UPD_DATETIME, A432TBM24_UPD_USER_ID, A433TBM24_UPD_PROG_NM, A434TBM24_UPD_CNT) ;
         /* Using cursor P005722 */
         pr_default.execute(20, new Object[] {new Long(A422TBM24_STUDY_ID), A423TBM24_DOM_CD, A424TBM24_DOM_VAR_NM, A425TBM24_CRF_ITEM_DIV});
         pr_default.readNext(19);
      }
      pr_default.close(19);
      /* Using cursor P005723 */
      pr_default.execute(21, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(21) != 101) )
      {
         A207TBM23_STUDY_ID = P005723_A207TBM23_STUDY_ID[0] ;
         A208TBM23_USER_ID = P005723_A208TBM23_USER_ID[0] ;
         A407TBM23_STYDY_AUTH_CD = P005723_A407TBM23_STYDY_AUTH_CD[0] ;
         A209TBM23_DEL_FLG = P005723_A209TBM23_DEL_FLG[0] ;
         n209TBM23_DEL_FLG = P005723_n209TBM23_DEL_FLG[0] ;
         A216TBM23_UPD_CNT = P005723_A216TBM23_UPD_CNT[0] ;
         n216TBM23_UPD_CNT = P005723_n216TBM23_UPD_CNT[0] ;
         A215TBM23_UPD_PROG_NM = P005723_A215TBM23_UPD_PROG_NM[0] ;
         n215TBM23_UPD_PROG_NM = P005723_n215TBM23_UPD_PROG_NM[0] ;
         A214TBM23_UPD_USER_ID = P005723_A214TBM23_UPD_USER_ID[0] ;
         n214TBM23_UPD_USER_ID = P005723_n214TBM23_UPD_USER_ID[0] ;
         A213TBM23_UPD_DATETIME = P005723_A213TBM23_UPD_DATETIME[0] ;
         n213TBM23_UPD_DATETIME = P005723_n213TBM23_UPD_DATETIME[0] ;
         A212TBM23_CRT_PROG_NM = P005723_A212TBM23_CRT_PROG_NM[0] ;
         n212TBM23_CRT_PROG_NM = P005723_n212TBM23_CRT_PROG_NM[0] ;
         A211TBM23_CRT_USER_ID = P005723_A211TBM23_CRT_USER_ID[0] ;
         n211TBM23_CRT_USER_ID = P005723_n211TBM23_CRT_USER_ID[0] ;
         A210TBM23_CRT_DATETIME = P005723_A210TBM23_CRT_DATETIME[0] ;
         n210TBM23_CRT_DATETIME = P005723_n210TBM23_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A207TBM23_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A208TBM23_USER_ID, 0);
         AV12W_ITEMS.add(A407TBM23_STYDY_AUTH_CD, 0);
         AV12W_ITEMS.add(A209TBM23_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM23_STUDY_STAFF", AV12W_ITEMS, A210TBM23_CRT_DATETIME, A211TBM23_CRT_USER_ID, A212TBM23_CRT_PROG_NM, A213TBM23_UPD_DATETIME, A214TBM23_UPD_USER_ID, A215TBM23_UPD_PROG_NM, A216TBM23_UPD_CNT) ;
         /* Using cursor P005724 */
         pr_default.execute(22, new Object[] {new Long(A207TBM23_STUDY_ID), A208TBM23_USER_ID, A407TBM23_STYDY_AUTH_CD});
         pr_default.readNext(21);
      }
      pr_default.close(21);
      /* Using cursor P005725 */
      pr_default.execute(23, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(23) != 101) )
      {
         A197TBM22_STUDY_ID = P005725_A197TBM22_STUDY_ID[0] ;
         A198TBM22_SITE_ID = P005725_A198TBM22_SITE_ID[0] ;
         A199TBM22_DEL_FLG = P005725_A199TBM22_DEL_FLG[0] ;
         n199TBM22_DEL_FLG = P005725_n199TBM22_DEL_FLG[0] ;
         A206TBM22_UPD_CNT = P005725_A206TBM22_UPD_CNT[0] ;
         n206TBM22_UPD_CNT = P005725_n206TBM22_UPD_CNT[0] ;
         A205TBM22_UPD_PROG_NM = P005725_A205TBM22_UPD_PROG_NM[0] ;
         n205TBM22_UPD_PROG_NM = P005725_n205TBM22_UPD_PROG_NM[0] ;
         A204TBM22_UPD_USER_ID = P005725_A204TBM22_UPD_USER_ID[0] ;
         n204TBM22_UPD_USER_ID = P005725_n204TBM22_UPD_USER_ID[0] ;
         A203TBM22_UPD_DATETIME = P005725_A203TBM22_UPD_DATETIME[0] ;
         n203TBM22_UPD_DATETIME = P005725_n203TBM22_UPD_DATETIME[0] ;
         A202TBM22_CRT_PROG_NM = P005725_A202TBM22_CRT_PROG_NM[0] ;
         n202TBM22_CRT_PROG_NM = P005725_n202TBM22_CRT_PROG_NM[0] ;
         A201TBM22_CRT_USER_ID = P005725_A201TBM22_CRT_USER_ID[0] ;
         n201TBM22_CRT_USER_ID = P005725_n201TBM22_CRT_USER_ID[0] ;
         A200TBM22_CRT_DATETIME = P005725_A200TBM22_CRT_DATETIME[0] ;
         n200TBM22_CRT_DATETIME = P005725_n200TBM22_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A197TBM22_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A198TBM22_SITE_ID, 0);
         AV12W_ITEMS.add(A199TBM22_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM22_STUDY_SITE", AV12W_ITEMS, A200TBM22_CRT_DATETIME, A201TBM22_CRT_USER_ID, A202TBM22_CRT_PROG_NM, A203TBM22_UPD_DATETIME, A204TBM22_UPD_USER_ID, A205TBM22_UPD_PROG_NM, A206TBM22_UPD_CNT) ;
         /* Using cursor P005726 */
         pr_default.execute(24, new Object[] {new Long(A197TBM22_STUDY_ID), A198TBM22_SITE_ID});
         pr_default.readNext(23);
      }
      pr_default.close(23);
      /* Using cursor P005727 */
      pr_default.execute(25, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(25) != 101) )
      {
         A446TBM26_STUDY_ID = P005727_A446TBM26_STUDY_ID[0] ;
         A447TBM26_LIST_CD = P005727_A447TBM26_LIST_CD[0] ;
         A448TBM26_LIST_ITEM_NO = P005727_A448TBM26_LIST_ITEM_NO[0] ;
         A449TBM26_LIST_ITEM_NAME = P005727_A449TBM26_LIST_ITEM_NAME[0] ;
         n449TBM26_LIST_ITEM_NAME = P005727_n449TBM26_LIST_ITEM_NAME[0] ;
         A450TBM26_INNER_VALUE = P005727_A450TBM26_INNER_VALUE[0] ;
         n450TBM26_INNER_VALUE = P005727_n450TBM26_INNER_VALUE[0] ;
         A451TBM26_DEL_FLG = P005727_A451TBM26_DEL_FLG[0] ;
         n451TBM26_DEL_FLG = P005727_n451TBM26_DEL_FLG[0] ;
         A458TBM26_UPD_CNT = P005727_A458TBM26_UPD_CNT[0] ;
         n458TBM26_UPD_CNT = P005727_n458TBM26_UPD_CNT[0] ;
         A457TBM26_UPD_PROG_NM = P005727_A457TBM26_UPD_PROG_NM[0] ;
         n457TBM26_UPD_PROG_NM = P005727_n457TBM26_UPD_PROG_NM[0] ;
         A456TBM26_UPD_USER_ID = P005727_A456TBM26_UPD_USER_ID[0] ;
         n456TBM26_UPD_USER_ID = P005727_n456TBM26_UPD_USER_ID[0] ;
         A455TBM26_UPD_DATETIME = P005727_A455TBM26_UPD_DATETIME[0] ;
         n455TBM26_UPD_DATETIME = P005727_n455TBM26_UPD_DATETIME[0] ;
         A454TBM26_CRT_PROG_NM = P005727_A454TBM26_CRT_PROG_NM[0] ;
         n454TBM26_CRT_PROG_NM = P005727_n454TBM26_CRT_PROG_NM[0] ;
         A453TBM26_CRT_USER_ID = P005727_A453TBM26_CRT_USER_ID[0] ;
         n453TBM26_CRT_USER_ID = P005727_n453TBM26_CRT_USER_ID[0] ;
         A452TBM26_CRT_DATETIME = P005727_A452TBM26_CRT_DATETIME[0] ;
         n452TBM26_CRT_DATETIME = P005727_n452TBM26_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A446TBM26_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A447TBM26_LIST_CD, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A448TBM26_LIST_ITEM_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A449TBM26_LIST_ITEM_NAME, 0);
         AV12W_ITEMS.add(A450TBM26_INNER_VALUE, 0);
         AV12W_ITEMS.add(A451TBM26_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM26_SEL_LIST_ITEM", AV12W_ITEMS, A452TBM26_CRT_DATETIME, A453TBM26_CRT_USER_ID, A454TBM26_CRT_PROG_NM, A455TBM26_UPD_DATETIME, A456TBM26_UPD_USER_ID, A457TBM26_UPD_PROG_NM, A458TBM26_UPD_CNT) ;
         /* Using cursor P005728 */
         pr_default.execute(26, new Object[] {new Long(A446TBM26_STUDY_ID), A447TBM26_LIST_CD, new Short(A448TBM26_LIST_ITEM_NO)});
         pr_default.readNext(25);
      }
      pr_default.close(25);
      /* Using cursor P005729 */
      pr_default.execute(27, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(27) != 101) )
      {
         A435TBM25_STUDY_ID = P005729_A435TBM25_STUDY_ID[0] ;
         A436TBM25_LIST_CD = P005729_A436TBM25_LIST_CD[0] ;
         A437TBM25_LIST_NM = P005729_A437TBM25_LIST_NM[0] ;
         n437TBM25_LIST_NM = P005729_n437TBM25_LIST_NM[0] ;
         A438TBM25_DEL_FLG = P005729_A438TBM25_DEL_FLG[0] ;
         n438TBM25_DEL_FLG = P005729_n438TBM25_DEL_FLG[0] ;
         A445TBM25_UPD_CNT = P005729_A445TBM25_UPD_CNT[0] ;
         n445TBM25_UPD_CNT = P005729_n445TBM25_UPD_CNT[0] ;
         A444TBM25_UPD_PROG_NM = P005729_A444TBM25_UPD_PROG_NM[0] ;
         n444TBM25_UPD_PROG_NM = P005729_n444TBM25_UPD_PROG_NM[0] ;
         A443TBM25_UPD_USER_ID = P005729_A443TBM25_UPD_USER_ID[0] ;
         n443TBM25_UPD_USER_ID = P005729_n443TBM25_UPD_USER_ID[0] ;
         A442TBM25_UPD_DATETIME = P005729_A442TBM25_UPD_DATETIME[0] ;
         n442TBM25_UPD_DATETIME = P005729_n442TBM25_UPD_DATETIME[0] ;
         A441TBM25_CRT_PROG_NM = P005729_A441TBM25_CRT_PROG_NM[0] ;
         n441TBM25_CRT_PROG_NM = P005729_n441TBM25_CRT_PROG_NM[0] ;
         A440TBM25_CRT_USER_ID = P005729_A440TBM25_CRT_USER_ID[0] ;
         n440TBM25_CRT_USER_ID = P005729_n440TBM25_CRT_USER_ID[0] ;
         A439TBM25_CRT_DATETIME = P005729_A439TBM25_CRT_DATETIME[0] ;
         n439TBM25_CRT_DATETIME = P005729_n439TBM25_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A435TBM25_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A436TBM25_LIST_CD, 0);
         AV12W_ITEMS.add(A437TBM25_LIST_NM, 0);
         AV12W_ITEMS.add(A438TBM25_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM25_SEL_LIST", AV12W_ITEMS, A439TBM25_CRT_DATETIME, A440TBM25_CRT_USER_ID, A441TBM25_CRT_PROG_NM, A442TBM25_UPD_DATETIME, A443TBM25_UPD_USER_ID, A444TBM25_UPD_PROG_NM, A445TBM25_UPD_CNT) ;
         /* Using cursor P005730 */
         pr_default.execute(28, new Object[] {new Long(A435TBM25_STUDY_ID), A436TBM25_LIST_CD});
         pr_default.readNext(27);
      }
      pr_default.close(27);
      /* Using cursor P005731 */
      pr_default.execute(29, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(29) != 101) )
      {
         A484TBM36_STUDY_ID = P005731_A484TBM36_STUDY_ID[0] ;
         A485TBM36_CRF_ID = P005731_A485TBM36_CRF_ID[0] ;
         A486TBM36_COND_NO = P005731_A486TBM36_COND_NO[0] ;
         A487TBM36_SELECT_CRF_ID = P005731_A487TBM36_SELECT_CRF_ID[0] ;
         A488TBM36_DEL_FLG = P005731_A488TBM36_DEL_FLG[0] ;
         n488TBM36_DEL_FLG = P005731_n488TBM36_DEL_FLG[0] ;
         A495TBM36_UPD_CNT = P005731_A495TBM36_UPD_CNT[0] ;
         n495TBM36_UPD_CNT = P005731_n495TBM36_UPD_CNT[0] ;
         A494TBM36_UPD_PROG_NM = P005731_A494TBM36_UPD_PROG_NM[0] ;
         n494TBM36_UPD_PROG_NM = P005731_n494TBM36_UPD_PROG_NM[0] ;
         A493TBM36_UPD_USER_ID = P005731_A493TBM36_UPD_USER_ID[0] ;
         n493TBM36_UPD_USER_ID = P005731_n493TBM36_UPD_USER_ID[0] ;
         A492TBM36_UPD_DATETIME = P005731_A492TBM36_UPD_DATETIME[0] ;
         n492TBM36_UPD_DATETIME = P005731_n492TBM36_UPD_DATETIME[0] ;
         A491TBM36_CRT_PROG_NM = P005731_A491TBM36_CRT_PROG_NM[0] ;
         n491TBM36_CRT_PROG_NM = P005731_n491TBM36_CRT_PROG_NM[0] ;
         A490TBM36_CRT_USER_ID = P005731_A490TBM36_CRT_USER_ID[0] ;
         n490TBM36_CRT_USER_ID = P005731_n490TBM36_CRT_USER_ID[0] ;
         A489TBM36_CRT_DATETIME = P005731_A489TBM36_CRT_DATETIME[0] ;
         n489TBM36_CRT_DATETIME = P005731_n489TBM36_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A484TBM36_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A485TBM36_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A486TBM36_COND_NO, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A487TBM36_SELECT_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A488TBM36_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM36_CRF_SELECT", AV12W_ITEMS, A489TBM36_CRT_DATETIME, A490TBM36_CRT_USER_ID, A491TBM36_CRT_PROG_NM, A492TBM36_UPD_DATETIME, A493TBM36_UPD_USER_ID, A494TBM36_UPD_PROG_NM, A495TBM36_UPD_CNT) ;
         /* Using cursor P005732 */
         pr_default.execute(30, new Object[] {new Long(A484TBM36_STUDY_ID), new Short(A485TBM36_CRF_ID), new Short(A486TBM36_COND_NO), new Short(A487TBM36_SELECT_CRF_ID)});
         pr_default.readNext(29);
      }
      pr_default.close(29);
      /* Using cursor P005733 */
      pr_default.execute(31, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(31) != 101) )
      {
         A246TBM33_STUDY_ID = P005733_A246TBM33_STUDY_ID[0] ;
         A247TBM33_CRF_ID = P005733_A247TBM33_CRF_ID[0] ;
         A248TBM33_COND_NO = P005733_A248TBM33_COND_NO[0] ;
         A379TBM33_COND_NM = P005733_A379TBM33_COND_NM[0] ;
         n379TBM33_COND_NM = P005733_n379TBM33_COND_NM[0] ;
         A249TBM33_EXPRESSION = P005733_A249TBM33_EXPRESSION[0] ;
         n249TBM33_EXPRESSION = P005733_n249TBM33_EXPRESSION[0] ;
         A380TBM33_COND_DIV = P005733_A380TBM33_COND_DIV[0] ;
         n380TBM33_COND_DIV = P005733_n380TBM33_COND_DIV[0] ;
         A381TBM33_CRF_ITEM_CD = P005733_A381TBM33_CRF_ITEM_CD[0] ;
         n381TBM33_CRF_ITEM_CD = P005733_n381TBM33_CRF_ITEM_CD[0] ;
         A250TBM33_PRIOR_NO = P005733_A250TBM33_PRIOR_NO[0] ;
         n250TBM33_PRIOR_NO = P005733_n250TBM33_PRIOR_NO[0] ;
         A382TBM33_ERR_DIV = P005733_A382TBM33_ERR_DIV[0] ;
         n382TBM33_ERR_DIV = P005733_n382TBM33_ERR_DIV[0] ;
         A383TBM33_ERR_MSG = P005733_A383TBM33_ERR_MSG[0] ;
         n383TBM33_ERR_MSG = P005733_n383TBM33_ERR_MSG[0] ;
         A554TBM33_ENABLED_FLG = P005733_A554TBM33_ENABLED_FLG[0] ;
         n554TBM33_ENABLED_FLG = P005733_n554TBM33_ENABLED_FLG[0] ;
         A610TBM33_REQUIRED_INPUT_FLG = P005733_A610TBM33_REQUIRED_INPUT_FLG[0] ;
         n610TBM33_REQUIRED_INPUT_FLG = P005733_n610TBM33_REQUIRED_INPUT_FLG[0] ;
         A611TBM33_NUMERIC_RANGE_FLG = P005733_A611TBM33_NUMERIC_RANGE_FLG[0] ;
         n611TBM33_NUMERIC_RANGE_FLG = P005733_n611TBM33_NUMERIC_RANGE_FLG[0] ;
         A251TBM33_DEL_FLG = P005733_A251TBM33_DEL_FLG[0] ;
         n251TBM33_DEL_FLG = P005733_n251TBM33_DEL_FLG[0] ;
         A258TBM33_UPD_CNT = P005733_A258TBM33_UPD_CNT[0] ;
         n258TBM33_UPD_CNT = P005733_n258TBM33_UPD_CNT[0] ;
         A257TBM33_UPD_PROG_NM = P005733_A257TBM33_UPD_PROG_NM[0] ;
         n257TBM33_UPD_PROG_NM = P005733_n257TBM33_UPD_PROG_NM[0] ;
         A256TBM33_UPD_USER_ID = P005733_A256TBM33_UPD_USER_ID[0] ;
         n256TBM33_UPD_USER_ID = P005733_n256TBM33_UPD_USER_ID[0] ;
         A255TBM33_UPD_DATETIME = P005733_A255TBM33_UPD_DATETIME[0] ;
         n255TBM33_UPD_DATETIME = P005733_n255TBM33_UPD_DATETIME[0] ;
         A254TBM33_CRT_PROG_NM = P005733_A254TBM33_CRT_PROG_NM[0] ;
         n254TBM33_CRT_PROG_NM = P005733_n254TBM33_CRT_PROG_NM[0] ;
         A253TBM33_CRT_USER_ID = P005733_A253TBM33_CRT_USER_ID[0] ;
         n253TBM33_CRT_USER_ID = P005733_n253TBM33_CRT_USER_ID[0] ;
         A252TBM33_CRT_DATETIME = P005733_A252TBM33_CRT_DATETIME[0] ;
         n252TBM33_CRT_DATETIME = P005733_n252TBM33_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A246TBM33_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A247TBM33_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A248TBM33_COND_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A379TBM33_COND_NM, 0);
         AV12W_ITEMS.add(A249TBM33_EXPRESSION, 0);
         AV12W_ITEMS.add(A380TBM33_COND_DIV, 0);
         AV12W_ITEMS.add(A381TBM33_CRF_ITEM_CD, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A250TBM33_PRIOR_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A382TBM33_ERR_DIV, 0);
         AV12W_ITEMS.add(A383TBM33_ERR_MSG, 0);
         AV12W_ITEMS.add(A554TBM33_ENABLED_FLG, 0);
         AV12W_ITEMS.add(A610TBM33_REQUIRED_INPUT_FLG, 0);
         AV12W_ITEMS.add(A611TBM33_NUMERIC_RANGE_FLG, 0);
         AV12W_ITEMS.add(A251TBM33_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM33_CRF_COND", AV12W_ITEMS, A252TBM33_CRT_DATETIME, A253TBM33_CRT_USER_ID, A254TBM33_CRT_PROG_NM, A255TBM33_UPD_DATETIME, A256TBM33_UPD_USER_ID, A257TBM33_UPD_PROG_NM, A258TBM33_UPD_CNT) ;
         /* Using cursor P005734 */
         pr_default.execute(32, new Object[] {new Long(A246TBM33_STUDY_ID), new Short(A247TBM33_CRF_ID), new Short(A248TBM33_COND_NO)});
         pr_default.readNext(31);
      }
      pr_default.close(31);
      /* Using cursor P005735 */
      pr_default.execute(33, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(33) != 101) )
      {
         A231TBM32_STUDY_ID = P005735_A231TBM32_STUDY_ID[0] ;
         A232TBM32_CRF_ID = P005735_A232TBM32_CRF_ID[0] ;
         A233TBM32_CRF_ITEM_CD = P005735_A233TBM32_CRF_ITEM_CD[0] ;
         A234TBM32_CRF_ITEM_NM = P005735_A234TBM32_CRF_ITEM_NM[0] ;
         n234TBM32_CRF_ITEM_NM = P005735_n234TBM32_CRF_ITEM_NM[0] ;
         A235TBM32_CRF_ITEM_DIV = P005735_A235TBM32_CRF_ITEM_DIV[0] ;
         n235TBM32_CRF_ITEM_DIV = P005735_n235TBM32_CRF_ITEM_DIV[0] ;
         A236TBM32_CRF_ITEM_GRP_CD = P005735_A236TBM32_CRF_ITEM_GRP_CD[0] ;
         n236TBM32_CRF_ITEM_GRP_CD = P005735_n236TBM32_CRF_ITEM_GRP_CD[0] ;
         A384TBM32_CRF_ITEM_GRP_ORDER = P005735_A384TBM32_CRF_ITEM_GRP_ORDER[0] ;
         n384TBM32_CRF_ITEM_GRP_ORDER = P005735_n384TBM32_CRF_ITEM_GRP_ORDER[0] ;
         A385TBM32_LOCATION_X = P005735_A385TBM32_LOCATION_X[0] ;
         n385TBM32_LOCATION_X = P005735_n385TBM32_LOCATION_X[0] ;
         A386TBM32_LOCATION_Y = P005735_A386TBM32_LOCATION_Y[0] ;
         n386TBM32_LOCATION_Y = P005735_n386TBM32_LOCATION_Y[0] ;
         A387TBM32_LOCATION_X2 = P005735_A387TBM32_LOCATION_X2[0] ;
         n387TBM32_LOCATION_X2 = P005735_n387TBM32_LOCATION_X2[0] ;
         A388TBM32_LOCATION_Y2 = P005735_A388TBM32_LOCATION_Y2[0] ;
         n388TBM32_LOCATION_Y2 = P005735_n388TBM32_LOCATION_Y2[0] ;
         A389TBM32_TEXT_ALIGN_DIV = P005735_A389TBM32_TEXT_ALIGN_DIV[0] ;
         n389TBM32_TEXT_ALIGN_DIV = P005735_n389TBM32_TEXT_ALIGN_DIV[0] ;
         A393TBM32_TEXT_MAXROWS = P005735_A393TBM32_TEXT_MAXROWS[0] ;
         n393TBM32_TEXT_MAXROWS = P005735_n393TBM32_TEXT_MAXROWS[0] ;
         A394TBM32_TEXT_MAXLENGTH = P005735_A394TBM32_TEXT_MAXLENGTH[0] ;
         n394TBM32_TEXT_MAXLENGTH = P005735_n394TBM32_TEXT_MAXLENGTH[0] ;
         A395TBM32_DECIMAL_DIGITS = P005735_A395TBM32_DECIMAL_DIGITS[0] ;
         n395TBM32_DECIMAL_DIGITS = P005735_n395TBM32_DECIMAL_DIGITS[0] ;
         A399TBM32_CHK_TRUE_INNER_VALUE = P005735_A399TBM32_CHK_TRUE_INNER_VALUE[0] ;
         n399TBM32_CHK_TRUE_INNER_VALUE = P005735_n399TBM32_CHK_TRUE_INNER_VALUE[0] ;
         A400TBM32_CHK_FALSE_INNER_VALUE = P005735_A400TBM32_CHK_FALSE_INNER_VALUE[0] ;
         n400TBM32_CHK_FALSE_INNER_VALUE = P005735_n400TBM32_CHK_FALSE_INNER_VALUE[0] ;
         A404TBM32_FIXED_VALUE = P005735_A404TBM32_FIXED_VALUE[0] ;
         n404TBM32_FIXED_VALUE = P005735_n404TBM32_FIXED_VALUE[0] ;
         A402TBM32_LIST_CD = P005735_A402TBM32_LIST_CD[0] ;
         n402TBM32_LIST_CD = P005735_n402TBM32_LIST_CD[0] ;
         A403TBM32_IMAGE_CD = P005735_A403TBM32_IMAGE_CD[0] ;
         n403TBM32_IMAGE_CD = P005735_n403TBM32_IMAGE_CD[0] ;
         A401TBM32_TEXT = P005735_A401TBM32_TEXT[0] ;
         n401TBM32_TEXT = P005735_n401TBM32_TEXT[0] ;
         A390TBM32_FONT_SIZE = P005735_A390TBM32_FONT_SIZE[0] ;
         n390TBM32_FONT_SIZE = P005735_n390TBM32_FONT_SIZE[0] ;
         A391TBM32_FONT_UL_FLG = P005735_A391TBM32_FONT_UL_FLG[0] ;
         n391TBM32_FONT_UL_FLG = P005735_n391TBM32_FONT_UL_FLG[0] ;
         A392TBM32_FONT_COLOR_DIV = P005735_A392TBM32_FONT_COLOR_DIV[0] ;
         n392TBM32_FONT_COLOR_DIV = P005735_n392TBM32_FONT_COLOR_DIV[0] ;
         A398TBM32_LINE_SIZE_DIV = P005735_A398TBM32_LINE_SIZE_DIV[0] ;
         n398TBM32_LINE_SIZE_DIV = P005735_n398TBM32_LINE_SIZE_DIV[0] ;
         A603TBM32_LINE_COLOR_DIV = P005735_A603TBM32_LINE_COLOR_DIV[0] ;
         n603TBM32_LINE_COLOR_DIV = P005735_n603TBM32_LINE_COLOR_DIV[0] ;
         A396TBM32_LINE_START_POINT_DIV = P005735_A396TBM32_LINE_START_POINT_DIV[0] ;
         n396TBM32_LINE_START_POINT_DIV = P005735_n396TBM32_LINE_START_POINT_DIV[0] ;
         A397TBM32_LINE_END_POINT_DIV = P005735_A397TBM32_LINE_END_POINT_DIV[0] ;
         n397TBM32_LINE_END_POINT_DIV = P005735_n397TBM32_LINE_END_POINT_DIV[0] ;
         A604TBM32_LINE_ANGLE = P005735_A604TBM32_LINE_ANGLE[0] ;
         n604TBM32_LINE_ANGLE = P005735_n604TBM32_LINE_ANGLE[0] ;
         A552TBM32_AUTH_LVL_MIN = P005735_A552TBM32_AUTH_LVL_MIN[0] ;
         n552TBM32_AUTH_LVL_MIN = P005735_n552TBM32_AUTH_LVL_MIN[0] ;
         A553TBM32_ZORDER = P005735_A553TBM32_ZORDER[0] ;
         n553TBM32_ZORDER = P005735_n553TBM32_ZORDER[0] ;
         A605TBM32_TAB_ORDER = P005735_A605TBM32_TAB_ORDER[0] ;
         n605TBM32_TAB_ORDER = P005735_n605TBM32_TAB_ORDER[0] ;
         A606TBM32_TABSTOP_FLG = P005735_A606TBM32_TABSTOP_FLG[0] ;
         n606TBM32_TABSTOP_FLG = P005735_n606TBM32_TABSTOP_FLG[0] ;
         A607TBM32_REQUIRED_INPUT_FLG = P005735_A607TBM32_REQUIRED_INPUT_FLG[0] ;
         n607TBM32_REQUIRED_INPUT_FLG = P005735_n607TBM32_REQUIRED_INPUT_FLG[0] ;
         A608TBM32_MIN_VALUE = P005735_A608TBM32_MIN_VALUE[0] ;
         n608TBM32_MIN_VALUE = P005735_n608TBM32_MIN_VALUE[0] ;
         A609TBM32_MAX_VALUE = P005735_A609TBM32_MAX_VALUE[0] ;
         n609TBM32_MAX_VALUE = P005735_n609TBM32_MAX_VALUE[0] ;
         A237TBM32_CRF_ITEM_NOTE = P005735_A237TBM32_CRF_ITEM_NOTE[0] ;
         n237TBM32_CRF_ITEM_NOTE = P005735_n237TBM32_CRF_ITEM_NOTE[0] ;
         A746TBM32_REF_CRF_ID = P005735_A746TBM32_REF_CRF_ID[0] ;
         n746TBM32_REF_CRF_ID = P005735_n746TBM32_REF_CRF_ID[0] ;
         A747TBM32_REF_CRF_ITEM_CD = P005735_A747TBM32_REF_CRF_ITEM_CD[0] ;
         n747TBM32_REF_CRF_ITEM_CD = P005735_n747TBM32_REF_CRF_ITEM_CD[0] ;
         A238TBM32_DEL_FLG = P005735_A238TBM32_DEL_FLG[0] ;
         n238TBM32_DEL_FLG = P005735_n238TBM32_DEL_FLG[0] ;
         A245TBM32_UPD_CNT = P005735_A245TBM32_UPD_CNT[0] ;
         n245TBM32_UPD_CNT = P005735_n245TBM32_UPD_CNT[0] ;
         A244TBM32_UPD_PROG_NM = P005735_A244TBM32_UPD_PROG_NM[0] ;
         n244TBM32_UPD_PROG_NM = P005735_n244TBM32_UPD_PROG_NM[0] ;
         A243TBM32_UPD_USER_ID = P005735_A243TBM32_UPD_USER_ID[0] ;
         n243TBM32_UPD_USER_ID = P005735_n243TBM32_UPD_USER_ID[0] ;
         A242TBM32_UPD_DATETIME = P005735_A242TBM32_UPD_DATETIME[0] ;
         n242TBM32_UPD_DATETIME = P005735_n242TBM32_UPD_DATETIME[0] ;
         A241TBM32_CRT_PROG_NM = P005735_A241TBM32_CRT_PROG_NM[0] ;
         n241TBM32_CRT_PROG_NM = P005735_n241TBM32_CRT_PROG_NM[0] ;
         A240TBM32_CRT_USER_ID = P005735_A240TBM32_CRT_USER_ID[0] ;
         n240TBM32_CRT_USER_ID = P005735_n240TBM32_CRT_USER_ID[0] ;
         A239TBM32_CRT_DATETIME = P005735_A239TBM32_CRT_DATETIME[0] ;
         n239TBM32_CRT_DATETIME = P005735_n239TBM32_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A231TBM32_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A232TBM32_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A233TBM32_CRF_ITEM_CD, 0);
         AV12W_ITEMS.add(A234TBM32_CRF_ITEM_NM, 0);
         AV12W_ITEMS.add(A235TBM32_CRF_ITEM_DIV, 0);
         AV12W_ITEMS.add(A236TBM32_CRF_ITEM_GRP_CD, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A384TBM32_CRF_ITEM_GRP_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A385TBM32_LOCATION_X, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A386TBM32_LOCATION_Y, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A387TBM32_LOCATION_X2, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A388TBM32_LOCATION_Y2, 10, 0)), 0);
         AV12W_ITEMS.add(A389TBM32_TEXT_ALIGN_DIV, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A393TBM32_TEXT_MAXROWS, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A394TBM32_TEXT_MAXLENGTH, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A395TBM32_DECIMAL_DIGITS, 10, 0)), 0);
         AV12W_ITEMS.add(A399TBM32_CHK_TRUE_INNER_VALUE, 0);
         AV12W_ITEMS.add(A400TBM32_CHK_FALSE_INNER_VALUE, 0);
         AV12W_ITEMS.add(A404TBM32_FIXED_VALUE, 0);
         AV12W_ITEMS.add(A402TBM32_LIST_CD, 0);
         AV12W_ITEMS.add(A403TBM32_IMAGE_CD, 0);
         AV12W_ITEMS.add(A401TBM32_TEXT, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A390TBM32_FONT_SIZE, 10, 0)), 0);
         AV12W_ITEMS.add(A391TBM32_FONT_UL_FLG, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A392TBM32_FONT_COLOR_DIV, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A398TBM32_LINE_SIZE_DIV, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A603TBM32_LINE_COLOR_DIV, 10, 0)), 0);
         AV12W_ITEMS.add(A396TBM32_LINE_START_POINT_DIV, 0);
         AV12W_ITEMS.add(A397TBM32_LINE_END_POINT_DIV, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A604TBM32_LINE_ANGLE, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A552TBM32_AUTH_LVL_MIN, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A553TBM32_ZORDER, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A605TBM32_TAB_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(A606TBM32_TABSTOP_FLG, 0);
         AV12W_ITEMS.add(A607TBM32_REQUIRED_INPUT_FLG, 0);
         AV12W_ITEMS.add(A608TBM32_MIN_VALUE, 0);
         AV12W_ITEMS.add(A609TBM32_MAX_VALUE, 0);
         AV12W_ITEMS.add(A237TBM32_CRF_ITEM_NOTE, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A746TBM32_REF_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A747TBM32_REF_CRF_ITEM_CD, 0);
         AV12W_ITEMS.add(A238TBM32_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM32_CRF_ITEM", AV12W_ITEMS, A239TBM32_CRT_DATETIME, A240TBM32_CRT_USER_ID, A241TBM32_CRT_PROG_NM, A242TBM32_UPD_DATETIME, A243TBM32_UPD_USER_ID, A244TBM32_UPD_PROG_NM, A245TBM32_UPD_CNT) ;
         /* Using cursor P005736 */
         pr_default.execute(34, new Object[] {new Long(A231TBM32_STUDY_ID), new Short(A232TBM32_CRF_ID), A233TBM32_CRF_ITEM_CD});
         pr_default.readNext(33);
      }
      pr_default.close(33);
      /* Using cursor P005737 */
      pr_default.execute(35, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(35) != 101) )
      {
         A459TBM34_STUDY_ID = P005737_A459TBM34_STUDY_ID[0] ;
         A460TBM34_CRF_ID = P005737_A460TBM34_CRF_ID[0] ;
         A461TBM34_STYDY_AUTH_CD = P005737_A461TBM34_STYDY_AUTH_CD[0] ;
         A462TBM34_DISPLAY_FLG = P005737_A462TBM34_DISPLAY_FLG[0] ;
         n462TBM34_DISPLAY_FLG = P005737_n462TBM34_DISPLAY_FLG[0] ;
         A463TBM34_DEL_FLG = P005737_A463TBM34_DEL_FLG[0] ;
         n463TBM34_DEL_FLG = P005737_n463TBM34_DEL_FLG[0] ;
         A470TBM34_UPD_CNT = P005737_A470TBM34_UPD_CNT[0] ;
         n470TBM34_UPD_CNT = P005737_n470TBM34_UPD_CNT[0] ;
         A469TBM34_UPD_PROG_NM = P005737_A469TBM34_UPD_PROG_NM[0] ;
         n469TBM34_UPD_PROG_NM = P005737_n469TBM34_UPD_PROG_NM[0] ;
         A468TBM34_UPD_USER_ID = P005737_A468TBM34_UPD_USER_ID[0] ;
         n468TBM34_UPD_USER_ID = P005737_n468TBM34_UPD_USER_ID[0] ;
         A467TBM34_UPD_DATETIME = P005737_A467TBM34_UPD_DATETIME[0] ;
         n467TBM34_UPD_DATETIME = P005737_n467TBM34_UPD_DATETIME[0] ;
         A466TBM34_CRT_PROG_NM = P005737_A466TBM34_CRT_PROG_NM[0] ;
         n466TBM34_CRT_PROG_NM = P005737_n466TBM34_CRT_PROG_NM[0] ;
         A465TBM34_CRT_USER_ID = P005737_A465TBM34_CRT_USER_ID[0] ;
         n465TBM34_CRT_USER_ID = P005737_n465TBM34_CRT_USER_ID[0] ;
         A464TBM34_CRT_DATETIME = P005737_A464TBM34_CRT_DATETIME[0] ;
         n464TBM34_CRT_DATETIME = P005737_n464TBM34_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A459TBM34_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A460TBM34_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A461TBM34_STYDY_AUTH_CD, 0);
         AV12W_ITEMS.add(A462TBM34_DISPLAY_FLG, 0);
         AV12W_ITEMS.add(A463TBM34_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM34_CRF_AUTH", AV12W_ITEMS, A464TBM34_CRT_DATETIME, A465TBM34_CRT_USER_ID, A466TBM34_CRT_PROG_NM, A467TBM34_UPD_DATETIME, A468TBM34_UPD_USER_ID, A469TBM34_UPD_PROG_NM, A470TBM34_UPD_CNT) ;
         /* Using cursor P005738 */
         pr_default.execute(36, new Object[] {new Long(A459TBM34_STUDY_ID), new Short(A460TBM34_CRF_ID), A461TBM34_STYDY_AUTH_CD});
         pr_default.readNext(35);
      }
      pr_default.close(35);
      /* Using cursor P005739 */
      pr_default.execute(37, new Object[] {new Long(AV9P_BC_STUDY.getgxTv_SdtTBM21_STUDY_Tbm21_study_id())});
      while ( (pr_default.getStatus(37) != 101) )
      {
         A217TBM31_STUDY_ID = P005739_A217TBM31_STUDY_ID[0] ;
         A218TBM31_CRF_ID = P005739_A218TBM31_CRF_ID[0] ;
         A219TBM31_CRF_NM = P005739_A219TBM31_CRF_NM[0] ;
         n219TBM31_CRF_NM = P005739_n219TBM31_CRF_NM[0] ;
         A550TBM31_CRF_SNM = P005739_A550TBM31_CRF_SNM[0] ;
         n550TBM31_CRF_SNM = P005739_n550TBM31_CRF_SNM[0] ;
         A220TBM31_GRID_SIZE = P005739_A220TBM31_GRID_SIZE[0] ;
         n220TBM31_GRID_SIZE = P005739_n220TBM31_GRID_SIZE[0] ;
         A221TBM31_ORDER = P005739_A221TBM31_ORDER[0] ;
         n221TBM31_ORDER = P005739_n221TBM31_ORDER[0] ;
         A405TBM31_DEF_VISIT_NO = P005739_A405TBM31_DEF_VISIT_NO[0] ;
         n405TBM31_DEF_VISIT_NO = P005739_n405TBM31_DEF_VISIT_NO[0] ;
         A406TBM31_DEF_DOMAIN_CD = P005739_A406TBM31_DEF_DOMAIN_CD[0] ;
         n406TBM31_DEF_DOMAIN_CD = P005739_n406TBM31_DEF_DOMAIN_CD[0] ;
         A551TBM31_STATUS = P005739_A551TBM31_STATUS[0] ;
         n551TBM31_STATUS = P005739_n551TBM31_STATUS[0] ;
         A222TBM31_NOTE = P005739_A222TBM31_NOTE[0] ;
         n222TBM31_NOTE = P005739_n222TBM31_NOTE[0] ;
         A223TBM31_DEL_FLG = P005739_A223TBM31_DEL_FLG[0] ;
         n223TBM31_DEL_FLG = P005739_n223TBM31_DEL_FLG[0] ;
         A230TBM31_UPD_CNT = P005739_A230TBM31_UPD_CNT[0] ;
         n230TBM31_UPD_CNT = P005739_n230TBM31_UPD_CNT[0] ;
         A229TBM31_UPD_PROG_NM = P005739_A229TBM31_UPD_PROG_NM[0] ;
         n229TBM31_UPD_PROG_NM = P005739_n229TBM31_UPD_PROG_NM[0] ;
         A228TBM31_UPD_USER_ID = P005739_A228TBM31_UPD_USER_ID[0] ;
         n228TBM31_UPD_USER_ID = P005739_n228TBM31_UPD_USER_ID[0] ;
         A227TBM31_UPD_DATETIME = P005739_A227TBM31_UPD_DATETIME[0] ;
         n227TBM31_UPD_DATETIME = P005739_n227TBM31_UPD_DATETIME[0] ;
         A226TBM31_CRT_PROG_NM = P005739_A226TBM31_CRT_PROG_NM[0] ;
         n226TBM31_CRT_PROG_NM = P005739_n226TBM31_CRT_PROG_NM[0] ;
         A225TBM31_CRT_USER_ID = P005739_A225TBM31_CRT_USER_ID[0] ;
         n225TBM31_CRT_USER_ID = P005739_n225TBM31_CRT_USER_ID[0] ;
         A224TBM31_CRT_DATETIME = P005739_A224TBM31_CRT_DATETIME[0] ;
         n224TBM31_CRT_DATETIME = P005739_n224TBM31_CRT_DATETIME[0] ;
         AV12W_ITEMS.clear();
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A217TBM31_STUDY_ID, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A218TBM31_CRF_ID, 10, 0)), 0);
         AV12W_ITEMS.add(A219TBM31_CRF_NM, 0);
         AV12W_ITEMS.add(A550TBM31_CRF_SNM, 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A220TBM31_GRID_SIZE, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A221TBM31_ORDER, 10, 0)), 0);
         AV12W_ITEMS.add(GXutil.trim( GXutil.str( A405TBM31_DEF_VISIT_NO, 10, 0)), 0);
         AV12W_ITEMS.add(A406TBM31_DEF_DOMAIN_CD, 0);
         AV12W_ITEMS.add(A551TBM31_STATUS, 0);
         AV12W_ITEMS.add(A222TBM31_NOTE, 0);
         AV12W_ITEMS.add(A223TBM31_DEL_FLG, 0);
         new b808_pc02_data_log(remoteHandle, context).execute( AV25Pgmname, "DLT", "TBM31_CRF", AV12W_ITEMS, A224TBM31_CRT_DATETIME, A225TBM31_CRT_USER_ID, A226TBM31_CRT_PROG_NM, A227TBM31_UPD_DATETIME, A228TBM31_UPD_USER_ID, A229TBM31_UPD_PROG_NM, A230TBM31_UPD_CNT) ;
         /* Using cursor P005740 */
         pr_default.execute(38, new Object[] {new Long(A217TBM31_STUDY_ID), new Short(A218TBM31_CRF_ID)});
         pr_default.readNext(37);
      }
      pr_default.close(37);
      AV9P_BC_STUDY.Delete();
      if ( AV9P_BC_STUDY.Fail() )
      {
         AV13W_RTN_CD = (short)(1) ;
         GXt_char1 = AV14W_RTN_MSG ;
         GXv_char2[0] = GXt_char1 ;
         new b803_pc01_get_bcmsg(remoteHandle, context).execute( AV9P_BC_STUDY.GetMessages(), (byte)(0), GXv_char2) ;
         b402_pc19_study_del.this.GXt_char1 = GXv_char2[0] ;
         AV14W_RTN_MSG = GXt_char1 ;
      }
      cleanup();
   }

   public void S11475( )
   {
      /* 'SUB_INIT' Routine */
      GXActiveErrHndl = 1 ;
      GXv_SdtA_LOGIN_SDT3[0] = AV10W_A_LOGIN_SDT;
      GXv_char2[0] = AV11W_ERRCD ;
      new a401_pc01_login_check(remoteHandle, context).execute( GXv_SdtA_LOGIN_SDT3, GXv_char2) ;
      AV10W_A_LOGIN_SDT = GXv_SdtA_LOGIN_SDT3[0] ;
      b402_pc19_study_del.this.AV11W_ERRCD = GXv_char2[0] ;
      if ( GXutil.strcmp(AV11W_ERRCD, "0") != 0 )
      {
         GXKey = context.getSiteKey( ) ;
         GXEncryptionTmp = GXutil.URLEncode(GXutil.rtrim("1")) ;
         httpContext.wjLoc = formatLink("a105_wp01_error") + "?" + com.genexus.util.Encryption.uriencrypt64( GXEncryptionTmp+com.genexus.util.Encryption.checksum( GXEncryptionTmp, 6), GXKey) ;
      }
   }

   public void S12493( )
   {
      /* 'SUB_ERROR' Routine */
      Application.rollback(context, remoteHandle, "DEFAULT", "b402_pc19_study_del");
      new a804_pc01_syslog(remoteHandle, context).execute( AV25Pgmname, "ERR", GXutil.trim( GXutil.str( context.globals.Gx_dbe, 10, 0))+":"+context.globals.Gx_dbt) ;
      GXKey = context.getSiteKey( ) ;
      GXEncryptionTmp = GXutil.URLEncode(GXutil.rtrim("9")) ;
      httpContext.wjLoc = formatLink("a105_wp01_error") + "?" + com.genexus.util.Encryption.uriencrypt64( GXEncryptionTmp+com.genexus.util.Encryption.checksum( GXEncryptionTmp, 6), GXKey) ;
   }

   protected void cleanup( )
   {
      this.aP1[0] = b402_pc19_study_del.this.AV13W_RTN_CD;
      this.aP2[0] = b402_pc19_study_del.this.AV14W_RTN_MSG;
      CloseOpenCursors();
      exitApplication();
   }

   protected void CloseOpenCursors( )
   {
   }

   /* Aggregate/select formulas */
   /* Error handler code */
   public void handleError( )
   {
      if ( context.globals.getErr( ) != 0 )
      {
         Gx_err = context.globals.getErr( ) ;
         Gx_emsg = context.globals.getErrMsg( ) ;
         switch ( GXActiveErrHndl )
         {
               case 1 :
                  /* Execute user subroutine: S12493 */
                  S12493 ();
                  if ( returnInSub )
                  {
                     returnInSub = true;
                     cleanup();
                     if (true) return;
                  }
                  break;
         }
      }
   }

   public void initialize( )
   {
      AV14W_RTN_MSG = "" ;
      AV8C_APP_ID = "" ;
      scmdbuf = "" ;
      P00579_A471TBM35_STUDY_ID = new long[1] ;
      P00579_A472TBM35_CRF_ID = new short[1] ;
      P00579_A473TBM35_CRF_ITEM_CD = new String[] {""} ;
      P00579_A474TBM35_STUDY_AUTH_CD = new String[] {""} ;
      P00579_A475TBM35_DISPLAY_FLG = new String[] {""} ;
      P00579_n475TBM35_DISPLAY_FLG = new boolean[] {false} ;
      P00579_A476TBM35_DEL_FLG = new String[] {""} ;
      P00579_n476TBM35_DEL_FLG = new boolean[] {false} ;
      P00579_A483TBM35_UPD_CNT = new long[1] ;
      P00579_n483TBM35_UPD_CNT = new boolean[] {false} ;
      P00579_A482TBM35_UPD_PROG_NM = new String[] {""} ;
      P00579_n482TBM35_UPD_PROG_NM = new boolean[] {false} ;
      P00579_A481TBM35_UPD_USER_ID = new String[] {""} ;
      P00579_n481TBM35_UPD_USER_ID = new boolean[] {false} ;
      P00579_A480TBM35_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P00579_n480TBM35_UPD_DATETIME = new boolean[] {false} ;
      P00579_A479TBM35_CRT_PROG_NM = new String[] {""} ;
      P00579_n479TBM35_CRT_PROG_NM = new boolean[] {false} ;
      P00579_A478TBM35_CRT_USER_ID = new String[] {""} ;
      P00579_n478TBM35_CRT_USER_ID = new boolean[] {false} ;
      P00579_A477TBM35_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P00579_n477TBM35_CRT_DATETIME = new boolean[] {false} ;
      A473TBM35_CRF_ITEM_CD = "" ;
      A474TBM35_STUDY_AUTH_CD = "" ;
      A475TBM35_DISPLAY_FLG = "" ;
      A476TBM35_DEL_FLG = "" ;
      A482TBM35_UPD_PROG_NM = "" ;
      A481TBM35_UPD_USER_ID = "" ;
      A480TBM35_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A479TBM35_CRT_PROG_NM = "" ;
      A478TBM35_CRT_USER_ID = "" ;
      A477TBM35_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      AV12W_ITEMS = new GxObjectCollection(String.class, "internal", "");
      AV25Pgmname = "" ;
      P005711_A259TBM41_STUDY_ID = new long[1] ;
      P005711_A260TBM41_CRF_ID = new short[1] ;
      P005711_A378TBM41_CRF_ITEM_GRP_DIV = new String[] {""} ;
      P005711_A261TBM41_CRF_ITEM_GRP_CD = new String[] {""} ;
      P005711_A262TBM41_NCM_METADATA_ID = new String[] {""} ;
      P005711_n262TBM41_NCM_METADATA_ID = new boolean[] {false} ;
      P005711_A263TBM41_DEL_FLG = new String[] {""} ;
      P005711_n263TBM41_DEL_FLG = new boolean[] {false} ;
      P005711_A270TBM41_UPD_CNT = new long[1] ;
      P005711_n270TBM41_UPD_CNT = new boolean[] {false} ;
      P005711_A269TBM41_UPD_PROG_NM = new String[] {""} ;
      P005711_n269TBM41_UPD_PROG_NM = new boolean[] {false} ;
      P005711_A268TBM41_UPD_USER_ID = new String[] {""} ;
      P005711_n268TBM41_UPD_USER_ID = new boolean[] {false} ;
      P005711_A267TBM41_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005711_n267TBM41_UPD_DATETIME = new boolean[] {false} ;
      P005711_A266TBM41_CRT_PROG_NM = new String[] {""} ;
      P005711_n266TBM41_CRT_PROG_NM = new boolean[] {false} ;
      P005711_A265TBM41_CRT_USER_ID = new String[] {""} ;
      P005711_n265TBM41_CRT_USER_ID = new boolean[] {false} ;
      P005711_A264TBM41_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005711_n264TBM41_CRT_DATETIME = new boolean[] {false} ;
      A378TBM41_CRF_ITEM_GRP_DIV = "" ;
      A261TBM41_CRF_ITEM_GRP_CD = "" ;
      A262TBM41_NCM_METADATA_ID = "" ;
      A263TBM41_DEL_FLG = "" ;
      A269TBM41_UPD_PROG_NM = "" ;
      A268TBM41_UPD_USER_ID = "" ;
      A267TBM41_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A266TBM41_CRT_PROG_NM = "" ;
      A265TBM41_CRT_USER_ID = "" ;
      A264TBM41_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005713_A894TBM43_STUDY_ID = new long[1] ;
      P005713_A895TBM43_DOM_CD = new String[] {""} ;
      P005713_A896TBM43_DOM_VAR_NM = new String[] {""} ;
      P005713_A897TBM43_VAR_DESC = new String[] {""} ;
      P005713_n897TBM43_VAR_DESC = new boolean[] {false} ;
      P005713_A898TBM43_SDTM_FLG = new String[] {""} ;
      P005713_n898TBM43_SDTM_FLG = new boolean[] {false} ;
      P005713_A899TBM43_CDASH_FLG = new String[] {""} ;
      P005713_n899TBM43_CDASH_FLG = new boolean[] {false} ;
      P005713_A900TBM43_INPUT_TYPE_DIV = new String[] {""} ;
      P005713_n900TBM43_INPUT_TYPE_DIV = new boolean[] {false} ;
      P005713_A901TBM43_REQUIRED_FLG = new String[] {""} ;
      P005713_n901TBM43_REQUIRED_FLG = new boolean[] {false} ;
      P005713_A902TBM43_SAS_FIELD_NM = new String[] {""} ;
      P005713_n902TBM43_SAS_FIELD_NM = new boolean[] {false} ;
      P005713_A903TBM43_ODM_DATA_TYPE = new String[] {""} ;
      P005713_n903TBM43_ODM_DATA_TYPE = new boolean[] {false} ;
      P005713_A904TBM43_NOTE = new String[] {""} ;
      P005713_n904TBM43_NOTE = new boolean[] {false} ;
      P005713_A905TBM43_ORDER = new int[1] ;
      P005713_n905TBM43_ORDER = new boolean[] {false} ;
      P005713_A906TBM43_DEL_FLG = new String[] {""} ;
      P005713_n906TBM43_DEL_FLG = new boolean[] {false} ;
      P005713_A921TBM43_UPD_CNT = new long[1] ;
      P005713_n921TBM43_UPD_CNT = new boolean[] {false} ;
      P005713_A915TBM43_UPD_PROG_NM = new String[] {""} ;
      P005713_n915TBM43_UPD_PROG_NM = new boolean[] {false} ;
      P005713_A914TBM43_UPD_USER_ID = new String[] {""} ;
      P005713_n914TBM43_UPD_USER_ID = new boolean[] {false} ;
      P005713_A920TBM43_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005713_n920TBM43_UPD_DATETIME = new boolean[] {false} ;
      P005713_A913TBM43_CRT_PROG_NM = new String[] {""} ;
      P005713_n913TBM43_CRT_PROG_NM = new boolean[] {false} ;
      P005713_A912TBM43_CRT_USER_ID = new String[] {""} ;
      P005713_n912TBM43_CRT_USER_ID = new boolean[] {false} ;
      P005713_A919TBM43_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005713_n919TBM43_CRT_DATETIME = new boolean[] {false} ;
      A895TBM43_DOM_CD = "" ;
      A896TBM43_DOM_VAR_NM = "" ;
      A897TBM43_VAR_DESC = "" ;
      A898TBM43_SDTM_FLG = "" ;
      A899TBM43_CDASH_FLG = "" ;
      A900TBM43_INPUT_TYPE_DIV = "" ;
      A901TBM43_REQUIRED_FLG = "" ;
      A902TBM43_SAS_FIELD_NM = "" ;
      A903TBM43_ODM_DATA_TYPE = "" ;
      A904TBM43_NOTE = "" ;
      A906TBM43_DEL_FLG = "" ;
      A915TBM43_UPD_PROG_NM = "" ;
      A914TBM43_UPD_USER_ID = "" ;
      A920TBM43_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A913TBM43_CRT_PROG_NM = "" ;
      A912TBM43_CRT_USER_ID = "" ;
      A919TBM43_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005715_A886TBM42_STUDY_ID = new long[1] ;
      P005715_A893TBM42_DOM_CD = new String[] {""} ;
      P005715_A888TBM42_DOM_ENM = new String[] {""} ;
      P005715_n888TBM42_DOM_ENM = new boolean[] {false} ;
      P005715_A889TBM42_DOM_JNM = new String[] {""} ;
      P005715_n889TBM42_DOM_JNM = new boolean[] {false} ;
      P005715_A890TBM42_DOM_GRP_NM = new String[] {""} ;
      P005715_n890TBM42_DOM_GRP_NM = new boolean[] {false} ;
      P005715_A891TBM42_NOTE = new String[] {""} ;
      P005715_n891TBM42_NOTE = new boolean[] {false} ;
      P005715_A892TBM42_ORDER = new int[1] ;
      P005715_n892TBM42_ORDER = new boolean[] {false} ;
      P005715_A887TBM42_DEL_FLG = new String[] {""} ;
      P005715_n887TBM42_DEL_FLG = new boolean[] {false} ;
      P005715_A918TBM42_UPD_CNT = new long[1] ;
      P005715_n918TBM42_UPD_CNT = new boolean[] {false} ;
      P005715_A911TBM42_UPD_PROG_NM = new String[] {""} ;
      P005715_n911TBM42_UPD_PROG_NM = new boolean[] {false} ;
      P005715_A910TBM42_UPD_USER_ID = new String[] {""} ;
      P005715_n910TBM42_UPD_USER_ID = new boolean[] {false} ;
      P005715_A917TBM42_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005715_n917TBM42_UPD_DATETIME = new boolean[] {false} ;
      P005715_A909TBM42_CRT_PROG_NM = new String[] {""} ;
      P005715_n909TBM42_CRT_PROG_NM = new boolean[] {false} ;
      P005715_A908TBM42_CRT_USER_ID = new String[] {""} ;
      P005715_n908TBM42_CRT_USER_ID = new boolean[] {false} ;
      P005715_A916TBM42_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005715_n916TBM42_CRT_DATETIME = new boolean[] {false} ;
      A893TBM42_DOM_CD = "" ;
      A888TBM42_DOM_ENM = "" ;
      A889TBM42_DOM_JNM = "" ;
      A890TBM42_DOM_GRP_NM = "" ;
      A891TBM42_NOTE = "" ;
      A887TBM42_DEL_FLG = "" ;
      A911TBM42_UPD_PROG_NM = "" ;
      A910TBM42_UPD_USER_ID = "" ;
      A917TBM42_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A909TBM42_CRT_PROG_NM = "" ;
      A908TBM42_CRT_USER_ID = "" ;
      A916TBM42_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005717_A271TBM37_STUDY_ID = new long[1] ;
      P005717_A272TBM37_CRF_ID = new short[1] ;
      P005717_A372TBM37_CRF_ITEM_GRP_DIV = new String[] {""} ;
      P005717_A273TBM37_CRF_ITEM_GRP_CD = new String[] {""} ;
      P005717_A373TBM37_VISIT_NO = new short[1] ;
      P005717_n373TBM37_VISIT_NO = new boolean[] {false} ;
      P005717_A374TBM37_DOM_CD = new String[] {""} ;
      P005717_n374TBM37_DOM_CD = new boolean[] {false} ;
      P005717_A375TBM37_DOM_VAR_NM = new String[] {""} ;
      P005717_n375TBM37_DOM_VAR_NM = new boolean[] {false} ;
      P005717_A376TBM37_DOM_ITM_GRP_OID = new String[] {""} ;
      P005717_n376TBM37_DOM_ITM_GRP_OID = new boolean[] {false} ;
      P005717_A377TBM37_DOM_ITM_GRP_ATTR_SEQ = new short[1] ;
      P005717_n377TBM37_DOM_ITM_GRP_ATTR_SEQ = new boolean[] {false} ;
      P005717_A612TBM37_DOM_ITM_GRP_ROWNO = new short[1] ;
      P005717_n612TBM37_DOM_ITM_GRP_ROWNO = new boolean[] {false} ;
      P005717_A274TBM37_DEL_FLG = new String[] {""} ;
      P005717_n274TBM37_DEL_FLG = new boolean[] {false} ;
      P005717_A281TBM37_UPD_CNT = new long[1] ;
      P005717_n281TBM37_UPD_CNT = new boolean[] {false} ;
      P005717_A280TBM37_UPD_PROG_NM = new String[] {""} ;
      P005717_n280TBM37_UPD_PROG_NM = new boolean[] {false} ;
      P005717_A279TBM37_UPD_USER_ID = new String[] {""} ;
      P005717_n279TBM37_UPD_USER_ID = new boolean[] {false} ;
      P005717_A278TBM37_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005717_n278TBM37_UPD_DATETIME = new boolean[] {false} ;
      P005717_A277TBM37_CRT_PROG_NM = new String[] {""} ;
      P005717_n277TBM37_CRT_PROG_NM = new boolean[] {false} ;
      P005717_A276TBM37_CRT_USER_ID = new String[] {""} ;
      P005717_n276TBM37_CRT_USER_ID = new boolean[] {false} ;
      P005717_A275TBM37_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005717_n275TBM37_CRT_DATETIME = new boolean[] {false} ;
      A372TBM37_CRF_ITEM_GRP_DIV = "" ;
      A273TBM37_CRF_ITEM_GRP_CD = "" ;
      A374TBM37_DOM_CD = "" ;
      A375TBM37_DOM_VAR_NM = "" ;
      A376TBM37_DOM_ITM_GRP_OID = "" ;
      A274TBM37_DEL_FLG = "" ;
      A280TBM37_UPD_PROG_NM = "" ;
      A279TBM37_UPD_USER_ID = "" ;
      A278TBM37_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A277TBM37_CRT_PROG_NM = "" ;
      A276TBM37_CRT_USER_ID = "" ;
      A275TBM37_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005719_A512TBM11_STUDY_ID = new long[1] ;
      P005719_n512TBM11_STUDY_ID = new boolean[] {false} ;
      P005719_A411TBM11_IMAGE_CD = new String[] {""} ;
      P005719_A542TBM11_IMAGE_NM = new String[] {""} ;
      P005719_n542TBM11_IMAGE_NM = new boolean[] {false} ;
      P005719_A413TBM11_FILE_NAME = new String[] {""} ;
      P005719_n413TBM11_FILE_NAME = new boolean[] {false} ;
      P005719_A414TBM11_DEL_FLG = new String[] {""} ;
      P005719_n414TBM11_DEL_FLG = new boolean[] {false} ;
      P005719_A421TBM11_UPD_CNT = new long[1] ;
      P005719_n421TBM11_UPD_CNT = new boolean[] {false} ;
      P005719_A420TBM11_UPD_PROG_NM = new String[] {""} ;
      P005719_n420TBM11_UPD_PROG_NM = new boolean[] {false} ;
      P005719_A419TBM11_UPD_USER_ID = new String[] {""} ;
      P005719_n419TBM11_UPD_USER_ID = new boolean[] {false} ;
      P005719_A418TBM11_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005719_n418TBM11_UPD_DATETIME = new boolean[] {false} ;
      P005719_A417TBM11_CRT_PROG_NM = new String[] {""} ;
      P005719_n417TBM11_CRT_PROG_NM = new boolean[] {false} ;
      P005719_A416TBM11_CRT_USER_ID = new String[] {""} ;
      P005719_n416TBM11_CRT_USER_ID = new boolean[] {false} ;
      P005719_A415TBM11_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005719_n415TBM11_CRT_DATETIME = new boolean[] {false} ;
      A411TBM11_IMAGE_CD = "" ;
      A542TBM11_IMAGE_NM = "" ;
      A413TBM11_FILE_NAME = "" ;
      A414TBM11_DEL_FLG = "" ;
      A420TBM11_UPD_PROG_NM = "" ;
      A419TBM11_UPD_USER_ID = "" ;
      A418TBM11_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A417TBM11_CRT_PROG_NM = "" ;
      A416TBM11_CRT_USER_ID = "" ;
      A415TBM11_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005721_A422TBM24_STUDY_ID = new long[1] ;
      P005721_A423TBM24_DOM_CD = new String[] {""} ;
      P005721_A424TBM24_DOM_VAR_NM = new String[] {""} ;
      P005721_A617TBM24_DOM_ITM_GRP_OID = new String[] {""} ;
      P005721_n617TBM24_DOM_ITM_GRP_OID = new boolean[] {false} ;
      P005721_A618TBM24_DOM_ITM_GRP_ATTR_SEQ = new short[1] ;
      P005721_n618TBM24_DOM_ITM_GRP_ATTR_SEQ = new boolean[] {false} ;
      P005721_A619TBM24_DOM_ITM_GRP_ROWNO = new short[1] ;
      P005721_n619TBM24_DOM_ITM_GRP_ROWNO = new boolean[] {false} ;
      P005721_A620TBM24_CRF_ITEM_NM = new String[] {""} ;
      P005721_n620TBM24_CRF_ITEM_NM = new boolean[] {false} ;
      P005721_A425TBM24_CRF_ITEM_DIV = new String[] {""} ;
      P005721_A543TBM24_IDENTIFICATION_CD = new String[] {""} ;
      P005721_n543TBM24_IDENTIFICATION_CD = new boolean[] {false} ;
      P005721_A544TBM24_TEXT_MAXLENGTH = new short[1] ;
      P005721_n544TBM24_TEXT_MAXLENGTH = new boolean[] {false} ;
      P005721_A545TBM24_TEXT_MAXROWS = new byte[1] ;
      P005721_n545TBM24_TEXT_MAXROWS = new boolean[] {false} ;
      P005721_A546TBM24_DECIMAL_DIGITS = new byte[1] ;
      P005721_n546TBM24_DECIMAL_DIGITS = new boolean[] {false} ;
      P005721_A547TBM24_TEXT = new String[] {""} ;
      P005721_n547TBM24_TEXT = new boolean[] {false} ;
      P005721_A548TBM24_FIXED_VALUE = new String[] {""} ;
      P005721_n548TBM24_FIXED_VALUE = new boolean[] {false} ;
      P005721_A549TBM24_CHK_FALSE_INNER_VALUE = new String[] {""} ;
      P005721_n549TBM24_CHK_FALSE_INNER_VALUE = new boolean[] {false} ;
      P005721_A621TBM24_REQUIRED_INPUT_FLG = new String[] {""} ;
      P005721_n621TBM24_REQUIRED_INPUT_FLG = new boolean[] {false} ;
      P005721_A622TBM24_MIN_VALUE = new String[] {""} ;
      P005721_n622TBM24_MIN_VALUE = new boolean[] {false} ;
      P005721_A623TBM24_MAX_VALUE = new String[] {""} ;
      P005721_n623TBM24_MAX_VALUE = new boolean[] {false} ;
      P005721_A426TBM24_ORDER = new int[1] ;
      P005721_n426TBM24_ORDER = new boolean[] {false} ;
      P005721_A427TBM24_DEL_FLG = new String[] {""} ;
      P005721_n427TBM24_DEL_FLG = new boolean[] {false} ;
      P005721_A434TBM24_UPD_CNT = new long[1] ;
      P005721_n434TBM24_UPD_CNT = new boolean[] {false} ;
      P005721_A433TBM24_UPD_PROG_NM = new String[] {""} ;
      P005721_n433TBM24_UPD_PROG_NM = new boolean[] {false} ;
      P005721_A432TBM24_UPD_USER_ID = new String[] {""} ;
      P005721_n432TBM24_UPD_USER_ID = new boolean[] {false} ;
      P005721_A431TBM24_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005721_n431TBM24_UPD_DATETIME = new boolean[] {false} ;
      P005721_A430TBM24_CRT_PROG_NM = new String[] {""} ;
      P005721_n430TBM24_CRT_PROG_NM = new boolean[] {false} ;
      P005721_A429TBM24_CRT_USER_ID = new String[] {""} ;
      P005721_n429TBM24_CRT_USER_ID = new boolean[] {false} ;
      P005721_A428TBM24_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005721_n428TBM24_CRT_DATETIME = new boolean[] {false} ;
      A423TBM24_DOM_CD = "" ;
      A424TBM24_DOM_VAR_NM = "" ;
      A617TBM24_DOM_ITM_GRP_OID = "" ;
      A620TBM24_CRF_ITEM_NM = "" ;
      A425TBM24_CRF_ITEM_DIV = "" ;
      A543TBM24_IDENTIFICATION_CD = "" ;
      A547TBM24_TEXT = "" ;
      A548TBM24_FIXED_VALUE = "" ;
      A549TBM24_CHK_FALSE_INNER_VALUE = "" ;
      A621TBM24_REQUIRED_INPUT_FLG = "" ;
      A622TBM24_MIN_VALUE = "" ;
      A623TBM24_MAX_VALUE = "" ;
      A427TBM24_DEL_FLG = "" ;
      A433TBM24_UPD_PROG_NM = "" ;
      A432TBM24_UPD_USER_ID = "" ;
      A431TBM24_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A430TBM24_CRT_PROG_NM = "" ;
      A429TBM24_CRT_USER_ID = "" ;
      A428TBM24_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005723_A207TBM23_STUDY_ID = new long[1] ;
      P005723_A208TBM23_USER_ID = new String[] {""} ;
      P005723_A407TBM23_STYDY_AUTH_CD = new String[] {""} ;
      P005723_A209TBM23_DEL_FLG = new String[] {""} ;
      P005723_n209TBM23_DEL_FLG = new boolean[] {false} ;
      P005723_A216TBM23_UPD_CNT = new long[1] ;
      P005723_n216TBM23_UPD_CNT = new boolean[] {false} ;
      P005723_A215TBM23_UPD_PROG_NM = new String[] {""} ;
      P005723_n215TBM23_UPD_PROG_NM = new boolean[] {false} ;
      P005723_A214TBM23_UPD_USER_ID = new String[] {""} ;
      P005723_n214TBM23_UPD_USER_ID = new boolean[] {false} ;
      P005723_A213TBM23_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005723_n213TBM23_UPD_DATETIME = new boolean[] {false} ;
      P005723_A212TBM23_CRT_PROG_NM = new String[] {""} ;
      P005723_n212TBM23_CRT_PROG_NM = new boolean[] {false} ;
      P005723_A211TBM23_CRT_USER_ID = new String[] {""} ;
      P005723_n211TBM23_CRT_USER_ID = new boolean[] {false} ;
      P005723_A210TBM23_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005723_n210TBM23_CRT_DATETIME = new boolean[] {false} ;
      A208TBM23_USER_ID = "" ;
      A407TBM23_STYDY_AUTH_CD = "" ;
      A209TBM23_DEL_FLG = "" ;
      A215TBM23_UPD_PROG_NM = "" ;
      A214TBM23_UPD_USER_ID = "" ;
      A213TBM23_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A212TBM23_CRT_PROG_NM = "" ;
      A211TBM23_CRT_USER_ID = "" ;
      A210TBM23_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005725_A197TBM22_STUDY_ID = new long[1] ;
      P005725_A198TBM22_SITE_ID = new String[] {""} ;
      P005725_A199TBM22_DEL_FLG = new String[] {""} ;
      P005725_n199TBM22_DEL_FLG = new boolean[] {false} ;
      P005725_A206TBM22_UPD_CNT = new long[1] ;
      P005725_n206TBM22_UPD_CNT = new boolean[] {false} ;
      P005725_A205TBM22_UPD_PROG_NM = new String[] {""} ;
      P005725_n205TBM22_UPD_PROG_NM = new boolean[] {false} ;
      P005725_A204TBM22_UPD_USER_ID = new String[] {""} ;
      P005725_n204TBM22_UPD_USER_ID = new boolean[] {false} ;
      P005725_A203TBM22_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005725_n203TBM22_UPD_DATETIME = new boolean[] {false} ;
      P005725_A202TBM22_CRT_PROG_NM = new String[] {""} ;
      P005725_n202TBM22_CRT_PROG_NM = new boolean[] {false} ;
      P005725_A201TBM22_CRT_USER_ID = new String[] {""} ;
      P005725_n201TBM22_CRT_USER_ID = new boolean[] {false} ;
      P005725_A200TBM22_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005725_n200TBM22_CRT_DATETIME = new boolean[] {false} ;
      A198TBM22_SITE_ID = "" ;
      A199TBM22_DEL_FLG = "" ;
      A205TBM22_UPD_PROG_NM = "" ;
      A204TBM22_UPD_USER_ID = "" ;
      A203TBM22_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A202TBM22_CRT_PROG_NM = "" ;
      A201TBM22_CRT_USER_ID = "" ;
      A200TBM22_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005727_A446TBM26_STUDY_ID = new long[1] ;
      P005727_A447TBM26_LIST_CD = new String[] {""} ;
      P005727_A448TBM26_LIST_ITEM_NO = new short[1] ;
      P005727_A449TBM26_LIST_ITEM_NAME = new String[] {""} ;
      P005727_n449TBM26_LIST_ITEM_NAME = new boolean[] {false} ;
      P005727_A450TBM26_INNER_VALUE = new String[] {""} ;
      P005727_n450TBM26_INNER_VALUE = new boolean[] {false} ;
      P005727_A451TBM26_DEL_FLG = new String[] {""} ;
      P005727_n451TBM26_DEL_FLG = new boolean[] {false} ;
      P005727_A458TBM26_UPD_CNT = new long[1] ;
      P005727_n458TBM26_UPD_CNT = new boolean[] {false} ;
      P005727_A457TBM26_UPD_PROG_NM = new String[] {""} ;
      P005727_n457TBM26_UPD_PROG_NM = new boolean[] {false} ;
      P005727_A456TBM26_UPD_USER_ID = new String[] {""} ;
      P005727_n456TBM26_UPD_USER_ID = new boolean[] {false} ;
      P005727_A455TBM26_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005727_n455TBM26_UPD_DATETIME = new boolean[] {false} ;
      P005727_A454TBM26_CRT_PROG_NM = new String[] {""} ;
      P005727_n454TBM26_CRT_PROG_NM = new boolean[] {false} ;
      P005727_A453TBM26_CRT_USER_ID = new String[] {""} ;
      P005727_n453TBM26_CRT_USER_ID = new boolean[] {false} ;
      P005727_A452TBM26_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005727_n452TBM26_CRT_DATETIME = new boolean[] {false} ;
      A447TBM26_LIST_CD = "" ;
      A449TBM26_LIST_ITEM_NAME = "" ;
      A450TBM26_INNER_VALUE = "" ;
      A451TBM26_DEL_FLG = "" ;
      A457TBM26_UPD_PROG_NM = "" ;
      A456TBM26_UPD_USER_ID = "" ;
      A455TBM26_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A454TBM26_CRT_PROG_NM = "" ;
      A453TBM26_CRT_USER_ID = "" ;
      A452TBM26_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005729_A435TBM25_STUDY_ID = new long[1] ;
      P005729_A436TBM25_LIST_CD = new String[] {""} ;
      P005729_A437TBM25_LIST_NM = new String[] {""} ;
      P005729_n437TBM25_LIST_NM = new boolean[] {false} ;
      P005729_A438TBM25_DEL_FLG = new String[] {""} ;
      P005729_n438TBM25_DEL_FLG = new boolean[] {false} ;
      P005729_A445TBM25_UPD_CNT = new long[1] ;
      P005729_n445TBM25_UPD_CNT = new boolean[] {false} ;
      P005729_A444TBM25_UPD_PROG_NM = new String[] {""} ;
      P005729_n444TBM25_UPD_PROG_NM = new boolean[] {false} ;
      P005729_A443TBM25_UPD_USER_ID = new String[] {""} ;
      P005729_n443TBM25_UPD_USER_ID = new boolean[] {false} ;
      P005729_A442TBM25_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005729_n442TBM25_UPD_DATETIME = new boolean[] {false} ;
      P005729_A441TBM25_CRT_PROG_NM = new String[] {""} ;
      P005729_n441TBM25_CRT_PROG_NM = new boolean[] {false} ;
      P005729_A440TBM25_CRT_USER_ID = new String[] {""} ;
      P005729_n440TBM25_CRT_USER_ID = new boolean[] {false} ;
      P005729_A439TBM25_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005729_n439TBM25_CRT_DATETIME = new boolean[] {false} ;
      A436TBM25_LIST_CD = "" ;
      A437TBM25_LIST_NM = "" ;
      A438TBM25_DEL_FLG = "" ;
      A444TBM25_UPD_PROG_NM = "" ;
      A443TBM25_UPD_USER_ID = "" ;
      A442TBM25_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A441TBM25_CRT_PROG_NM = "" ;
      A440TBM25_CRT_USER_ID = "" ;
      A439TBM25_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005731_A484TBM36_STUDY_ID = new long[1] ;
      P005731_A485TBM36_CRF_ID = new short[1] ;
      P005731_A486TBM36_COND_NO = new short[1] ;
      P005731_A487TBM36_SELECT_CRF_ID = new short[1] ;
      P005731_A488TBM36_DEL_FLG = new String[] {""} ;
      P005731_n488TBM36_DEL_FLG = new boolean[] {false} ;
      P005731_A495TBM36_UPD_CNT = new long[1] ;
      P005731_n495TBM36_UPD_CNT = new boolean[] {false} ;
      P005731_A494TBM36_UPD_PROG_NM = new String[] {""} ;
      P005731_n494TBM36_UPD_PROG_NM = new boolean[] {false} ;
      P005731_A493TBM36_UPD_USER_ID = new String[] {""} ;
      P005731_n493TBM36_UPD_USER_ID = new boolean[] {false} ;
      P005731_A492TBM36_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005731_n492TBM36_UPD_DATETIME = new boolean[] {false} ;
      P005731_A491TBM36_CRT_PROG_NM = new String[] {""} ;
      P005731_n491TBM36_CRT_PROG_NM = new boolean[] {false} ;
      P005731_A490TBM36_CRT_USER_ID = new String[] {""} ;
      P005731_n490TBM36_CRT_USER_ID = new boolean[] {false} ;
      P005731_A489TBM36_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005731_n489TBM36_CRT_DATETIME = new boolean[] {false} ;
      A488TBM36_DEL_FLG = "" ;
      A494TBM36_UPD_PROG_NM = "" ;
      A493TBM36_UPD_USER_ID = "" ;
      A492TBM36_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A491TBM36_CRT_PROG_NM = "" ;
      A490TBM36_CRT_USER_ID = "" ;
      A489TBM36_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005733_A246TBM33_STUDY_ID = new long[1] ;
      P005733_A247TBM33_CRF_ID = new short[1] ;
      P005733_A248TBM33_COND_NO = new short[1] ;
      P005733_A379TBM33_COND_NM = new String[] {""} ;
      P005733_n379TBM33_COND_NM = new boolean[] {false} ;
      P005733_A249TBM33_EXPRESSION = new String[] {""} ;
      P005733_n249TBM33_EXPRESSION = new boolean[] {false} ;
      P005733_A380TBM33_COND_DIV = new String[] {""} ;
      P005733_n380TBM33_COND_DIV = new boolean[] {false} ;
      P005733_A381TBM33_CRF_ITEM_CD = new String[] {""} ;
      P005733_n381TBM33_CRF_ITEM_CD = new boolean[] {false} ;
      P005733_A250TBM33_PRIOR_NO = new byte[1] ;
      P005733_n250TBM33_PRIOR_NO = new boolean[] {false} ;
      P005733_A382TBM33_ERR_DIV = new String[] {""} ;
      P005733_n382TBM33_ERR_DIV = new boolean[] {false} ;
      P005733_A383TBM33_ERR_MSG = new String[] {""} ;
      P005733_n383TBM33_ERR_MSG = new boolean[] {false} ;
      P005733_A554TBM33_ENABLED_FLG = new String[] {""} ;
      P005733_n554TBM33_ENABLED_FLG = new boolean[] {false} ;
      P005733_A610TBM33_REQUIRED_INPUT_FLG = new String[] {""} ;
      P005733_n610TBM33_REQUIRED_INPUT_FLG = new boolean[] {false} ;
      P005733_A611TBM33_NUMERIC_RANGE_FLG = new String[] {""} ;
      P005733_n611TBM33_NUMERIC_RANGE_FLG = new boolean[] {false} ;
      P005733_A251TBM33_DEL_FLG = new String[] {""} ;
      P005733_n251TBM33_DEL_FLG = new boolean[] {false} ;
      P005733_A258TBM33_UPD_CNT = new long[1] ;
      P005733_n258TBM33_UPD_CNT = new boolean[] {false} ;
      P005733_A257TBM33_UPD_PROG_NM = new String[] {""} ;
      P005733_n257TBM33_UPD_PROG_NM = new boolean[] {false} ;
      P005733_A256TBM33_UPD_USER_ID = new String[] {""} ;
      P005733_n256TBM33_UPD_USER_ID = new boolean[] {false} ;
      P005733_A255TBM33_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005733_n255TBM33_UPD_DATETIME = new boolean[] {false} ;
      P005733_A254TBM33_CRT_PROG_NM = new String[] {""} ;
      P005733_n254TBM33_CRT_PROG_NM = new boolean[] {false} ;
      P005733_A253TBM33_CRT_USER_ID = new String[] {""} ;
      P005733_n253TBM33_CRT_USER_ID = new boolean[] {false} ;
      P005733_A252TBM33_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005733_n252TBM33_CRT_DATETIME = new boolean[] {false} ;
      A379TBM33_COND_NM = "" ;
      A249TBM33_EXPRESSION = "" ;
      A380TBM33_COND_DIV = "" ;
      A381TBM33_CRF_ITEM_CD = "" ;
      A382TBM33_ERR_DIV = "" ;
      A383TBM33_ERR_MSG = "" ;
      A554TBM33_ENABLED_FLG = "" ;
      A610TBM33_REQUIRED_INPUT_FLG = "" ;
      A611TBM33_NUMERIC_RANGE_FLG = "" ;
      A251TBM33_DEL_FLG = "" ;
      A257TBM33_UPD_PROG_NM = "" ;
      A256TBM33_UPD_USER_ID = "" ;
      A255TBM33_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A254TBM33_CRT_PROG_NM = "" ;
      A253TBM33_CRT_USER_ID = "" ;
      A252TBM33_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005735_A231TBM32_STUDY_ID = new long[1] ;
      P005735_A232TBM32_CRF_ID = new short[1] ;
      P005735_A233TBM32_CRF_ITEM_CD = new String[] {""} ;
      P005735_A234TBM32_CRF_ITEM_NM = new String[] {""} ;
      P005735_n234TBM32_CRF_ITEM_NM = new boolean[] {false} ;
      P005735_A235TBM32_CRF_ITEM_DIV = new String[] {""} ;
      P005735_n235TBM32_CRF_ITEM_DIV = new boolean[] {false} ;
      P005735_A236TBM32_CRF_ITEM_GRP_CD = new String[] {""} ;
      P005735_n236TBM32_CRF_ITEM_GRP_CD = new boolean[] {false} ;
      P005735_A384TBM32_CRF_ITEM_GRP_ORDER = new short[1] ;
      P005735_n384TBM32_CRF_ITEM_GRP_ORDER = new boolean[] {false} ;
      P005735_A385TBM32_LOCATION_X = new short[1] ;
      P005735_n385TBM32_LOCATION_X = new boolean[] {false} ;
      P005735_A386TBM32_LOCATION_Y = new short[1] ;
      P005735_n386TBM32_LOCATION_Y = new boolean[] {false} ;
      P005735_A387TBM32_LOCATION_X2 = new short[1] ;
      P005735_n387TBM32_LOCATION_X2 = new boolean[] {false} ;
      P005735_A388TBM32_LOCATION_Y2 = new short[1] ;
      P005735_n388TBM32_LOCATION_Y2 = new boolean[] {false} ;
      P005735_A389TBM32_TEXT_ALIGN_DIV = new String[] {""} ;
      P005735_n389TBM32_TEXT_ALIGN_DIV = new boolean[] {false} ;
      P005735_A393TBM32_TEXT_MAXROWS = new byte[1] ;
      P005735_n393TBM32_TEXT_MAXROWS = new boolean[] {false} ;
      P005735_A394TBM32_TEXT_MAXLENGTH = new short[1] ;
      P005735_n394TBM32_TEXT_MAXLENGTH = new boolean[] {false} ;
      P005735_A395TBM32_DECIMAL_DIGITS = new byte[1] ;
      P005735_n395TBM32_DECIMAL_DIGITS = new boolean[] {false} ;
      P005735_A399TBM32_CHK_TRUE_INNER_VALUE = new String[] {""} ;
      P005735_n399TBM32_CHK_TRUE_INNER_VALUE = new boolean[] {false} ;
      P005735_A400TBM32_CHK_FALSE_INNER_VALUE = new String[] {""} ;
      P005735_n400TBM32_CHK_FALSE_INNER_VALUE = new boolean[] {false} ;
      P005735_A404TBM32_FIXED_VALUE = new String[] {""} ;
      P005735_n404TBM32_FIXED_VALUE = new boolean[] {false} ;
      P005735_A402TBM32_LIST_CD = new String[] {""} ;
      P005735_n402TBM32_LIST_CD = new boolean[] {false} ;
      P005735_A403TBM32_IMAGE_CD = new String[] {""} ;
      P005735_n403TBM32_IMAGE_CD = new boolean[] {false} ;
      P005735_A401TBM32_TEXT = new String[] {""} ;
      P005735_n401TBM32_TEXT = new boolean[] {false} ;
      P005735_A390TBM32_FONT_SIZE = new byte[1] ;
      P005735_n390TBM32_FONT_SIZE = new boolean[] {false} ;
      P005735_A391TBM32_FONT_UL_FLG = new String[] {""} ;
      P005735_n391TBM32_FONT_UL_FLG = new boolean[] {false} ;
      P005735_A392TBM32_FONT_COLOR_DIV = new long[1] ;
      P005735_n392TBM32_FONT_COLOR_DIV = new boolean[] {false} ;
      P005735_A398TBM32_LINE_SIZE_DIV = new byte[1] ;
      P005735_n398TBM32_LINE_SIZE_DIV = new boolean[] {false} ;
      P005735_A603TBM32_LINE_COLOR_DIV = new long[1] ;
      P005735_n603TBM32_LINE_COLOR_DIV = new boolean[] {false} ;
      P005735_A396TBM32_LINE_START_POINT_DIV = new String[] {""} ;
      P005735_n396TBM32_LINE_START_POINT_DIV = new boolean[] {false} ;
      P005735_A397TBM32_LINE_END_POINT_DIV = new String[] {""} ;
      P005735_n397TBM32_LINE_END_POINT_DIV = new boolean[] {false} ;
      P005735_A604TBM32_LINE_ANGLE = new short[1] ;
      P005735_n604TBM32_LINE_ANGLE = new boolean[] {false} ;
      P005735_A552TBM32_AUTH_LVL_MIN = new byte[1] ;
      P005735_n552TBM32_AUTH_LVL_MIN = new boolean[] {false} ;
      P005735_A553TBM32_ZORDER = new short[1] ;
      P005735_n553TBM32_ZORDER = new boolean[] {false} ;
      P005735_A605TBM32_TAB_ORDER = new short[1] ;
      P005735_n605TBM32_TAB_ORDER = new boolean[] {false} ;
      P005735_A606TBM32_TABSTOP_FLG = new String[] {""} ;
      P005735_n606TBM32_TABSTOP_FLG = new boolean[] {false} ;
      P005735_A607TBM32_REQUIRED_INPUT_FLG = new String[] {""} ;
      P005735_n607TBM32_REQUIRED_INPUT_FLG = new boolean[] {false} ;
      P005735_A608TBM32_MIN_VALUE = new String[] {""} ;
      P005735_n608TBM32_MIN_VALUE = new boolean[] {false} ;
      P005735_A609TBM32_MAX_VALUE = new String[] {""} ;
      P005735_n609TBM32_MAX_VALUE = new boolean[] {false} ;
      P005735_A237TBM32_CRF_ITEM_NOTE = new String[] {""} ;
      P005735_n237TBM32_CRF_ITEM_NOTE = new boolean[] {false} ;
      P005735_A746TBM32_REF_CRF_ID = new short[1] ;
      P005735_n746TBM32_REF_CRF_ID = new boolean[] {false} ;
      P005735_A747TBM32_REF_CRF_ITEM_CD = new String[] {""} ;
      P005735_n747TBM32_REF_CRF_ITEM_CD = new boolean[] {false} ;
      P005735_A238TBM32_DEL_FLG = new String[] {""} ;
      P005735_n238TBM32_DEL_FLG = new boolean[] {false} ;
      P005735_A245TBM32_UPD_CNT = new long[1] ;
      P005735_n245TBM32_UPD_CNT = new boolean[] {false} ;
      P005735_A244TBM32_UPD_PROG_NM = new String[] {""} ;
      P005735_n244TBM32_UPD_PROG_NM = new boolean[] {false} ;
      P005735_A243TBM32_UPD_USER_ID = new String[] {""} ;
      P005735_n243TBM32_UPD_USER_ID = new boolean[] {false} ;
      P005735_A242TBM32_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005735_n242TBM32_UPD_DATETIME = new boolean[] {false} ;
      P005735_A241TBM32_CRT_PROG_NM = new String[] {""} ;
      P005735_n241TBM32_CRT_PROG_NM = new boolean[] {false} ;
      P005735_A240TBM32_CRT_USER_ID = new String[] {""} ;
      P005735_n240TBM32_CRT_USER_ID = new boolean[] {false} ;
      P005735_A239TBM32_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005735_n239TBM32_CRT_DATETIME = new boolean[] {false} ;
      A233TBM32_CRF_ITEM_CD = "" ;
      A234TBM32_CRF_ITEM_NM = "" ;
      A235TBM32_CRF_ITEM_DIV = "" ;
      A236TBM32_CRF_ITEM_GRP_CD = "" ;
      A389TBM32_TEXT_ALIGN_DIV = "" ;
      A399TBM32_CHK_TRUE_INNER_VALUE = "" ;
      A400TBM32_CHK_FALSE_INNER_VALUE = "" ;
      A404TBM32_FIXED_VALUE = "" ;
      A402TBM32_LIST_CD = "" ;
      A403TBM32_IMAGE_CD = "" ;
      A401TBM32_TEXT = "" ;
      A391TBM32_FONT_UL_FLG = "" ;
      A396TBM32_LINE_START_POINT_DIV = "" ;
      A397TBM32_LINE_END_POINT_DIV = "" ;
      A606TBM32_TABSTOP_FLG = "" ;
      A607TBM32_REQUIRED_INPUT_FLG = "" ;
      A608TBM32_MIN_VALUE = "" ;
      A609TBM32_MAX_VALUE = "" ;
      A237TBM32_CRF_ITEM_NOTE = "" ;
      A747TBM32_REF_CRF_ITEM_CD = "" ;
      A238TBM32_DEL_FLG = "" ;
      A244TBM32_UPD_PROG_NM = "" ;
      A243TBM32_UPD_USER_ID = "" ;
      A242TBM32_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A241TBM32_CRT_PROG_NM = "" ;
      A240TBM32_CRT_USER_ID = "" ;
      A239TBM32_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005737_A459TBM34_STUDY_ID = new long[1] ;
      P005737_A460TBM34_CRF_ID = new short[1] ;
      P005737_A461TBM34_STYDY_AUTH_CD = new String[] {""} ;
      P005737_A462TBM34_DISPLAY_FLG = new String[] {""} ;
      P005737_n462TBM34_DISPLAY_FLG = new boolean[] {false} ;
      P005737_A463TBM34_DEL_FLG = new String[] {""} ;
      P005737_n463TBM34_DEL_FLG = new boolean[] {false} ;
      P005737_A470TBM34_UPD_CNT = new long[1] ;
      P005737_n470TBM34_UPD_CNT = new boolean[] {false} ;
      P005737_A469TBM34_UPD_PROG_NM = new String[] {""} ;
      P005737_n469TBM34_UPD_PROG_NM = new boolean[] {false} ;
      P005737_A468TBM34_UPD_USER_ID = new String[] {""} ;
      P005737_n468TBM34_UPD_USER_ID = new boolean[] {false} ;
      P005737_A467TBM34_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005737_n467TBM34_UPD_DATETIME = new boolean[] {false} ;
      P005737_A466TBM34_CRT_PROG_NM = new String[] {""} ;
      P005737_n466TBM34_CRT_PROG_NM = new boolean[] {false} ;
      P005737_A465TBM34_CRT_USER_ID = new String[] {""} ;
      P005737_n465TBM34_CRT_USER_ID = new boolean[] {false} ;
      P005737_A464TBM34_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005737_n464TBM34_CRT_DATETIME = new boolean[] {false} ;
      A461TBM34_STYDY_AUTH_CD = "" ;
      A462TBM34_DISPLAY_FLG = "" ;
      A463TBM34_DEL_FLG = "" ;
      A469TBM34_UPD_PROG_NM = "" ;
      A468TBM34_UPD_USER_ID = "" ;
      A467TBM34_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A466TBM34_CRT_PROG_NM = "" ;
      A465TBM34_CRT_USER_ID = "" ;
      A464TBM34_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      P005739_A217TBM31_STUDY_ID = new long[1] ;
      P005739_A218TBM31_CRF_ID = new short[1] ;
      P005739_A219TBM31_CRF_NM = new String[] {""} ;
      P005739_n219TBM31_CRF_NM = new boolean[] {false} ;
      P005739_A550TBM31_CRF_SNM = new String[] {""} ;
      P005739_n550TBM31_CRF_SNM = new boolean[] {false} ;
      P005739_A220TBM31_GRID_SIZE = new short[1] ;
      P005739_n220TBM31_GRID_SIZE = new boolean[] {false} ;
      P005739_A221TBM31_ORDER = new int[1] ;
      P005739_n221TBM31_ORDER = new boolean[] {false} ;
      P005739_A405TBM31_DEF_VISIT_NO = new short[1] ;
      P005739_n405TBM31_DEF_VISIT_NO = new boolean[] {false} ;
      P005739_A406TBM31_DEF_DOMAIN_CD = new String[] {""} ;
      P005739_n406TBM31_DEF_DOMAIN_CD = new boolean[] {false} ;
      P005739_A551TBM31_STATUS = new String[] {""} ;
      P005739_n551TBM31_STATUS = new boolean[] {false} ;
      P005739_A222TBM31_NOTE = new String[] {""} ;
      P005739_n222TBM31_NOTE = new boolean[] {false} ;
      P005739_A223TBM31_DEL_FLG = new String[] {""} ;
      P005739_n223TBM31_DEL_FLG = new boolean[] {false} ;
      P005739_A230TBM31_UPD_CNT = new long[1] ;
      P005739_n230TBM31_UPD_CNT = new boolean[] {false} ;
      P005739_A229TBM31_UPD_PROG_NM = new String[] {""} ;
      P005739_n229TBM31_UPD_PROG_NM = new boolean[] {false} ;
      P005739_A228TBM31_UPD_USER_ID = new String[] {""} ;
      P005739_n228TBM31_UPD_USER_ID = new boolean[] {false} ;
      P005739_A227TBM31_UPD_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005739_n227TBM31_UPD_DATETIME = new boolean[] {false} ;
      P005739_A226TBM31_CRT_PROG_NM = new String[] {""} ;
      P005739_n226TBM31_CRT_PROG_NM = new boolean[] {false} ;
      P005739_A225TBM31_CRT_USER_ID = new String[] {""} ;
      P005739_n225TBM31_CRT_USER_ID = new boolean[] {false} ;
      P005739_A224TBM31_CRT_DATETIME = new java.util.Date[] {GXutil.nullDate()} ;
      P005739_n224TBM31_CRT_DATETIME = new boolean[] {false} ;
      A219TBM31_CRF_NM = "" ;
      A550TBM31_CRF_SNM = "" ;
      A406TBM31_DEF_DOMAIN_CD = "" ;
      A551TBM31_STATUS = "" ;
      A222TBM31_NOTE = "" ;
      A223TBM31_DEL_FLG = "" ;
      A229TBM31_UPD_PROG_NM = "" ;
      A228TBM31_UPD_USER_ID = "" ;
      A227TBM31_UPD_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      A226TBM31_CRT_PROG_NM = "" ;
      A225TBM31_CRT_USER_ID = "" ;
      A224TBM31_CRT_DATETIME = GXutil.resetTime( GXutil.nullDate() );
      AV10W_A_LOGIN_SDT = new SdtA_LOGIN_SDT(remoteHandle, context);
      GXv_SdtA_LOGIN_SDT3 = new SdtA_LOGIN_SDT [1] ;
      AV11W_ERRCD = "" ;
      GXv_char2 = new String [1] ;
      GXKey = "" ;
      GXEncryptionTmp = "" ;
      GXt_char1 = "" ;
      Gx_emsg = "" ;
      pr_default = new DataStoreProvider(context, remoteHandle, new b402_pc19_study_del__default(),
         new Object[] {
             new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            }
            , new Object[] {
            P00579_A471TBM35_STUDY_ID, P00579_A472TBM35_CRF_ID, P00579_A473TBM35_CRF_ITEM_CD, P00579_A474TBM35_STUDY_AUTH_CD, P00579_A475TBM35_DISPLAY_FLG, P00579_n475TBM35_DISPLAY_FLG, P00579_A476TBM35_DEL_FLG, P00579_n476TBM35_DEL_FLG, P00579_A483TBM35_UPD_CNT, P00579_n483TBM35_UPD_CNT,
            P00579_A482TBM35_UPD_PROG_NM, P00579_n482TBM35_UPD_PROG_NM, P00579_A481TBM35_UPD_USER_ID, P00579_n481TBM35_UPD_USER_ID, P00579_A480TBM35_UPD_DATETIME, P00579_n480TBM35_UPD_DATETIME, P00579_A479TBM35_CRT_PROG_NM, P00579_n479TBM35_CRT_PROG_NM, P00579_A478TBM35_CRT_USER_ID, P00579_n478TBM35_CRT_USER_ID,
            P00579_A477TBM35_CRT_DATETIME, P00579_n477TBM35_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005711_A259TBM41_STUDY_ID, P005711_A260TBM41_CRF_ID, P005711_A378TBM41_CRF_ITEM_GRP_DIV, P005711_A261TBM41_CRF_ITEM_GRP_CD, P005711_A262TBM41_NCM_METADATA_ID, P005711_n262TBM41_NCM_METADATA_ID, P005711_A263TBM41_DEL_FLG, P005711_n263TBM41_DEL_FLG, P005711_A270TBM41_UPD_CNT, P005711_n270TBM41_UPD_CNT,
            P005711_A269TBM41_UPD_PROG_NM, P005711_n269TBM41_UPD_PROG_NM, P005711_A268TBM41_UPD_USER_ID, P005711_n268TBM41_UPD_USER_ID, P005711_A267TBM41_UPD_DATETIME, P005711_n267TBM41_UPD_DATETIME, P005711_A266TBM41_CRT_PROG_NM, P005711_n266TBM41_CRT_PROG_NM, P005711_A265TBM41_CRT_USER_ID, P005711_n265TBM41_CRT_USER_ID,
            P005711_A264TBM41_CRT_DATETIME, P005711_n264TBM41_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005713_A894TBM43_STUDY_ID, P005713_A895TBM43_DOM_CD, P005713_A896TBM43_DOM_VAR_NM, P005713_A897TBM43_VAR_DESC, P005713_n897TBM43_VAR_DESC, P005713_A898TBM43_SDTM_FLG, P005713_n898TBM43_SDTM_FLG, P005713_A899TBM43_CDASH_FLG, P005713_n899TBM43_CDASH_FLG, P005713_A900TBM43_INPUT_TYPE_DIV,
            P005713_n900TBM43_INPUT_TYPE_DIV, P005713_A901TBM43_REQUIRED_FLG, P005713_n901TBM43_REQUIRED_FLG, P005713_A902TBM43_SAS_FIELD_NM, P005713_n902TBM43_SAS_FIELD_NM, P005713_A903TBM43_ODM_DATA_TYPE, P005713_n903TBM43_ODM_DATA_TYPE, P005713_A904TBM43_NOTE, P005713_n904TBM43_NOTE, P005713_A905TBM43_ORDER,
            P005713_n905TBM43_ORDER, P005713_A906TBM43_DEL_FLG, P005713_n906TBM43_DEL_FLG, P005713_A921TBM43_UPD_CNT, P005713_n921TBM43_UPD_CNT, P005713_A915TBM43_UPD_PROG_NM, P005713_n915TBM43_UPD_PROG_NM, P005713_A914TBM43_UPD_USER_ID, P005713_n914TBM43_UPD_USER_ID, P005713_A920TBM43_UPD_DATETIME,
            P005713_n920TBM43_UPD_DATETIME, P005713_A913TBM43_CRT_PROG_NM, P005713_n913TBM43_CRT_PROG_NM, P005713_A912TBM43_CRT_USER_ID, P005713_n912TBM43_CRT_USER_ID, P005713_A919TBM43_CRT_DATETIME, P005713_n919TBM43_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005715_A886TBM42_STUDY_ID, P005715_A893TBM42_DOM_CD, P005715_A888TBM42_DOM_ENM, P005715_n888TBM42_DOM_ENM, P005715_A889TBM42_DOM_JNM, P005715_n889TBM42_DOM_JNM, P005715_A890TBM42_DOM_GRP_NM, P005715_n890TBM42_DOM_GRP_NM, P005715_A891TBM42_NOTE, P005715_n891TBM42_NOTE,
            P005715_A892TBM42_ORDER, P005715_n892TBM42_ORDER, P005715_A887TBM42_DEL_FLG, P005715_n887TBM42_DEL_FLG, P005715_A918TBM42_UPD_CNT, P005715_n918TBM42_UPD_CNT, P005715_A911TBM42_UPD_PROG_NM, P005715_n911TBM42_UPD_PROG_NM, P005715_A910TBM42_UPD_USER_ID, P005715_n910TBM42_UPD_USER_ID,
            P005715_A917TBM42_UPD_DATETIME, P005715_n917TBM42_UPD_DATETIME, P005715_A909TBM42_CRT_PROG_NM, P005715_n909TBM42_CRT_PROG_NM, P005715_A908TBM42_CRT_USER_ID, P005715_n908TBM42_CRT_USER_ID, P005715_A916TBM42_CRT_DATETIME, P005715_n916TBM42_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005717_A271TBM37_STUDY_ID, P005717_A272TBM37_CRF_ID, P005717_A372TBM37_CRF_ITEM_GRP_DIV, P005717_A273TBM37_CRF_ITEM_GRP_CD, P005717_A373TBM37_VISIT_NO, P005717_n373TBM37_VISIT_NO, P005717_A374TBM37_DOM_CD, P005717_n374TBM37_DOM_CD, P005717_A375TBM37_DOM_VAR_NM, P005717_n375TBM37_DOM_VAR_NM,
            P005717_A376TBM37_DOM_ITM_GRP_OID, P005717_n376TBM37_DOM_ITM_GRP_OID, P005717_A377TBM37_DOM_ITM_GRP_ATTR_SEQ, P005717_n377TBM37_DOM_ITM_GRP_ATTR_SEQ, P005717_A612TBM37_DOM_ITM_GRP_ROWNO, P005717_n612TBM37_DOM_ITM_GRP_ROWNO, P005717_A274TBM37_DEL_FLG, P005717_n274TBM37_DEL_FLG, P005717_A281TBM37_UPD_CNT, P005717_n281TBM37_UPD_CNT,
            P005717_A280TBM37_UPD_PROG_NM, P005717_n280TBM37_UPD_PROG_NM, P005717_A279TBM37_UPD_USER_ID, P005717_n279TBM37_UPD_USER_ID, P005717_A278TBM37_UPD_DATETIME, P005717_n278TBM37_UPD_DATETIME, P005717_A277TBM37_CRT_PROG_NM, P005717_n277TBM37_CRT_PROG_NM, P005717_A276TBM37_CRT_USER_ID, P005717_n276TBM37_CRT_USER_ID,
            P005717_A275TBM37_CRT_DATETIME, P005717_n275TBM37_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005719_A512TBM11_STUDY_ID, P005719_n512TBM11_STUDY_ID, P005719_A411TBM11_IMAGE_CD, P005719_A542TBM11_IMAGE_NM, P005719_n542TBM11_IMAGE_NM, P005719_A413TBM11_FILE_NAME, P005719_n413TBM11_FILE_NAME, P005719_A414TBM11_DEL_FLG, P005719_n414TBM11_DEL_FLG, P005719_A421TBM11_UPD_CNT,
            P005719_n421TBM11_UPD_CNT, P005719_A420TBM11_UPD_PROG_NM, P005719_n420TBM11_UPD_PROG_NM, P005719_A419TBM11_UPD_USER_ID, P005719_n419TBM11_UPD_USER_ID, P005719_A418TBM11_UPD_DATETIME, P005719_n418TBM11_UPD_DATETIME, P005719_A417TBM11_CRT_PROG_NM, P005719_n417TBM11_CRT_PROG_NM, P005719_A416TBM11_CRT_USER_ID,
            P005719_n416TBM11_CRT_USER_ID, P005719_A415TBM11_CRT_DATETIME, P005719_n415TBM11_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005721_A422TBM24_STUDY_ID, P005721_A423TBM24_DOM_CD, P005721_A424TBM24_DOM_VAR_NM, P005721_A617TBM24_DOM_ITM_GRP_OID, P005721_n617TBM24_DOM_ITM_GRP_OID, P005721_A618TBM24_DOM_ITM_GRP_ATTR_SEQ, P005721_n618TBM24_DOM_ITM_GRP_ATTR_SEQ, P005721_A619TBM24_DOM_ITM_GRP_ROWNO, P005721_n619TBM24_DOM_ITM_GRP_ROWNO, P005721_A620TBM24_CRF_ITEM_NM,
            P005721_n620TBM24_CRF_ITEM_NM, P005721_A425TBM24_CRF_ITEM_DIV, P005721_A543TBM24_IDENTIFICATION_CD, P005721_n543TBM24_IDENTIFICATION_CD, P005721_A544TBM24_TEXT_MAXLENGTH, P005721_n544TBM24_TEXT_MAXLENGTH, P005721_A545TBM24_TEXT_MAXROWS, P005721_n545TBM24_TEXT_MAXROWS, P005721_A546TBM24_DECIMAL_DIGITS, P005721_n546TBM24_DECIMAL_DIGITS,
            P005721_A547TBM24_TEXT, P005721_n547TBM24_TEXT, P005721_A548TBM24_FIXED_VALUE, P005721_n548TBM24_FIXED_VALUE, P005721_A549TBM24_CHK_FALSE_INNER_VALUE, P005721_n549TBM24_CHK_FALSE_INNER_VALUE, P005721_A621TBM24_REQUIRED_INPUT_FLG, P005721_n621TBM24_REQUIRED_INPUT_FLG, P005721_A622TBM24_MIN_VALUE, P005721_n622TBM24_MIN_VALUE,
            P005721_A623TBM24_MAX_VALUE, P005721_n623TBM24_MAX_VALUE, P005721_A426TBM24_ORDER, P005721_n426TBM24_ORDER, P005721_A427TBM24_DEL_FLG, P005721_n427TBM24_DEL_FLG, P005721_A434TBM24_UPD_CNT, P005721_n434TBM24_UPD_CNT, P005721_A433TBM24_UPD_PROG_NM, P005721_n433TBM24_UPD_PROG_NM,
            P005721_A432TBM24_UPD_USER_ID, P005721_n432TBM24_UPD_USER_ID, P005721_A431TBM24_UPD_DATETIME, P005721_n431TBM24_UPD_DATETIME, P005721_A430TBM24_CRT_PROG_NM, P005721_n430TBM24_CRT_PROG_NM, P005721_A429TBM24_CRT_USER_ID, P005721_n429TBM24_CRT_USER_ID, P005721_A428TBM24_CRT_DATETIME, P005721_n428TBM24_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005723_A207TBM23_STUDY_ID, P005723_A208TBM23_USER_ID, P005723_A407TBM23_STYDY_AUTH_CD, P005723_A209TBM23_DEL_FLG, P005723_n209TBM23_DEL_FLG, P005723_A216TBM23_UPD_CNT, P005723_n216TBM23_UPD_CNT, P005723_A215TBM23_UPD_PROG_NM, P005723_n215TBM23_UPD_PROG_NM, P005723_A214TBM23_UPD_USER_ID,
            P005723_n214TBM23_UPD_USER_ID, P005723_A213TBM23_UPD_DATETIME, P005723_n213TBM23_UPD_DATETIME, P005723_A212TBM23_CRT_PROG_NM, P005723_n212TBM23_CRT_PROG_NM, P005723_A211TBM23_CRT_USER_ID, P005723_n211TBM23_CRT_USER_ID, P005723_A210TBM23_CRT_DATETIME, P005723_n210TBM23_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005725_A197TBM22_STUDY_ID, P005725_A198TBM22_SITE_ID, P005725_A199TBM22_DEL_FLG, P005725_n199TBM22_DEL_FLG, P005725_A206TBM22_UPD_CNT, P005725_n206TBM22_UPD_CNT, P005725_A205TBM22_UPD_PROG_NM, P005725_n205TBM22_UPD_PROG_NM, P005725_A204TBM22_UPD_USER_ID, P005725_n204TBM22_UPD_USER_ID,
            P005725_A203TBM22_UPD_DATETIME, P005725_n203TBM22_UPD_DATETIME, P005725_A202TBM22_CRT_PROG_NM, P005725_n202TBM22_CRT_PROG_NM, P005725_A201TBM22_CRT_USER_ID, P005725_n201TBM22_CRT_USER_ID, P005725_A200TBM22_CRT_DATETIME, P005725_n200TBM22_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005727_A446TBM26_STUDY_ID, P005727_A447TBM26_LIST_CD, P005727_A448TBM26_LIST_ITEM_NO, P005727_A449TBM26_LIST_ITEM_NAME, P005727_n449TBM26_LIST_ITEM_NAME, P005727_A450TBM26_INNER_VALUE, P005727_n450TBM26_INNER_VALUE, P005727_A451TBM26_DEL_FLG, P005727_n451TBM26_DEL_FLG, P005727_A458TBM26_UPD_CNT,
            P005727_n458TBM26_UPD_CNT, P005727_A457TBM26_UPD_PROG_NM, P005727_n457TBM26_UPD_PROG_NM, P005727_A456TBM26_UPD_USER_ID, P005727_n456TBM26_UPD_USER_ID, P005727_A455TBM26_UPD_DATETIME, P005727_n455TBM26_UPD_DATETIME, P005727_A454TBM26_CRT_PROG_NM, P005727_n454TBM26_CRT_PROG_NM, P005727_A453TBM26_CRT_USER_ID,
            P005727_n453TBM26_CRT_USER_ID, P005727_A452TBM26_CRT_DATETIME, P005727_n452TBM26_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005729_A435TBM25_STUDY_ID, P005729_A436TBM25_LIST_CD, P005729_A437TBM25_LIST_NM, P005729_n437TBM25_LIST_NM, P005729_A438TBM25_DEL_FLG, P005729_n438TBM25_DEL_FLG, P005729_A445TBM25_UPD_CNT, P005729_n445TBM25_UPD_CNT, P005729_A444TBM25_UPD_PROG_NM, P005729_n444TBM25_UPD_PROG_NM,
            P005729_A443TBM25_UPD_USER_ID, P005729_n443TBM25_UPD_USER_ID, P005729_A442TBM25_UPD_DATETIME, P005729_n442TBM25_UPD_DATETIME, P005729_A441TBM25_CRT_PROG_NM, P005729_n441TBM25_CRT_PROG_NM, P005729_A440TBM25_CRT_USER_ID, P005729_n440TBM25_CRT_USER_ID, P005729_A439TBM25_CRT_DATETIME, P005729_n439TBM25_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005731_A484TBM36_STUDY_ID, P005731_A485TBM36_CRF_ID, P005731_A486TBM36_COND_NO, P005731_A487TBM36_SELECT_CRF_ID, P005731_A488TBM36_DEL_FLG, P005731_n488TBM36_DEL_FLG, P005731_A495TBM36_UPD_CNT, P005731_n495TBM36_UPD_CNT, P005731_A494TBM36_UPD_PROG_NM, P005731_n494TBM36_UPD_PROG_NM,
            P005731_A493TBM36_UPD_USER_ID, P005731_n493TBM36_UPD_USER_ID, P005731_A492TBM36_UPD_DATETIME, P005731_n492TBM36_UPD_DATETIME, P005731_A491TBM36_CRT_PROG_NM, P005731_n491TBM36_CRT_PROG_NM, P005731_A490TBM36_CRT_USER_ID, P005731_n490TBM36_CRT_USER_ID, P005731_A489TBM36_CRT_DATETIME, P005731_n489TBM36_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005733_A246TBM33_STUDY_ID, P005733_A247TBM33_CRF_ID, P005733_A248TBM33_COND_NO, P005733_A379TBM33_COND_NM, P005733_n379TBM33_COND_NM, P005733_A249TBM33_EXPRESSION, P005733_n249TBM33_EXPRESSION, P005733_A380TBM33_COND_DIV, P005733_n380TBM33_COND_DIV, P005733_A381TBM33_CRF_ITEM_CD,
            P005733_n381TBM33_CRF_ITEM_CD, P005733_A250TBM33_PRIOR_NO, P005733_n250TBM33_PRIOR_NO, P005733_A382TBM33_ERR_DIV, P005733_n382TBM33_ERR_DIV, P005733_A383TBM33_ERR_MSG, P005733_n383TBM33_ERR_MSG, P005733_A554TBM33_ENABLED_FLG, P005733_n554TBM33_ENABLED_FLG, P005733_A610TBM33_REQUIRED_INPUT_FLG,
            P005733_n610TBM33_REQUIRED_INPUT_FLG, P005733_A611TBM33_NUMERIC_RANGE_FLG, P005733_n611TBM33_NUMERIC_RANGE_FLG, P005733_A251TBM33_DEL_FLG, P005733_n251TBM33_DEL_FLG, P005733_A258TBM33_UPD_CNT, P005733_n258TBM33_UPD_CNT, P005733_A257TBM33_UPD_PROG_NM, P005733_n257TBM33_UPD_PROG_NM, P005733_A256TBM33_UPD_USER_ID,
            P005733_n256TBM33_UPD_USER_ID, P005733_A255TBM33_UPD_DATETIME, P005733_n255TBM33_UPD_DATETIME, P005733_A254TBM33_CRT_PROG_NM, P005733_n254TBM33_CRT_PROG_NM, P005733_A253TBM33_CRT_USER_ID, P005733_n253TBM33_CRT_USER_ID, P005733_A252TBM33_CRT_DATETIME, P005733_n252TBM33_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005735_A231TBM32_STUDY_ID, P005735_A232TBM32_CRF_ID, P005735_A233TBM32_CRF_ITEM_CD, P005735_A234TBM32_CRF_ITEM_NM, P005735_n234TBM32_CRF_ITEM_NM, P005735_A235TBM32_CRF_ITEM_DIV, P005735_n235TBM32_CRF_ITEM_DIV, P005735_A236TBM32_CRF_ITEM_GRP_CD, P005735_n236TBM32_CRF_ITEM_GRP_CD, P005735_A384TBM32_CRF_ITEM_GRP_ORDER,
            P005735_n384TBM32_CRF_ITEM_GRP_ORDER, P005735_A385TBM32_LOCATION_X, P005735_n385TBM32_LOCATION_X, P005735_A386TBM32_LOCATION_Y, P005735_n386TBM32_LOCATION_Y, P005735_A387TBM32_LOCATION_X2, P005735_n387TBM32_LOCATION_X2, P005735_A388TBM32_LOCATION_Y2, P005735_n388TBM32_LOCATION_Y2, P005735_A389TBM32_TEXT_ALIGN_DIV,
            P005735_n389TBM32_TEXT_ALIGN_DIV, P005735_A393TBM32_TEXT_MAXROWS, P005735_n393TBM32_TEXT_MAXROWS, P005735_A394TBM32_TEXT_MAXLENGTH, P005735_n394TBM32_TEXT_MAXLENGTH, P005735_A395TBM32_DECIMAL_DIGITS, P005735_n395TBM32_DECIMAL_DIGITS, P005735_A399TBM32_CHK_TRUE_INNER_VALUE, P005735_n399TBM32_CHK_TRUE_INNER_VALUE, P005735_A400TBM32_CHK_FALSE_INNER_VALUE,
            P005735_n400TBM32_CHK_FALSE_INNER_VALUE, P005735_A404TBM32_FIXED_VALUE, P005735_n404TBM32_FIXED_VALUE, P005735_A402TBM32_LIST_CD, P005735_n402TBM32_LIST_CD, P005735_A403TBM32_IMAGE_CD, P005735_n403TBM32_IMAGE_CD, P005735_A401TBM32_TEXT, P005735_n401TBM32_TEXT, P005735_A390TBM32_FONT_SIZE,
            P005735_n390TBM32_FONT_SIZE, P005735_A391TBM32_FONT_UL_FLG, P005735_n391TBM32_FONT_UL_FLG, P005735_A392TBM32_FONT_COLOR_DIV, P005735_n392TBM32_FONT_COLOR_DIV, P005735_A398TBM32_LINE_SIZE_DIV, P005735_n398TBM32_LINE_SIZE_DIV, P005735_A603TBM32_LINE_COLOR_DIV, P005735_n603TBM32_LINE_COLOR_DIV, P005735_A396TBM32_LINE_START_POINT_DIV,
            P005735_n396TBM32_LINE_START_POINT_DIV, P005735_A397TBM32_LINE_END_POINT_DIV, P005735_n397TBM32_LINE_END_POINT_DIV, P005735_A604TBM32_LINE_ANGLE, P005735_n604TBM32_LINE_ANGLE, P005735_A552TBM32_AUTH_LVL_MIN, P005735_n552TBM32_AUTH_LVL_MIN, P005735_A553TBM32_ZORDER, P005735_n553TBM32_ZORDER, P005735_A605TBM32_TAB_ORDER,
            P005735_n605TBM32_TAB_ORDER, P005735_A606TBM32_TABSTOP_FLG, P005735_n606TBM32_TABSTOP_FLG, P005735_A607TBM32_REQUIRED_INPUT_FLG, P005735_n607TBM32_REQUIRED_INPUT_FLG, P005735_A608TBM32_MIN_VALUE, P005735_n608TBM32_MIN_VALUE, P005735_A609TBM32_MAX_VALUE, P005735_n609TBM32_MAX_VALUE, P005735_A237TBM32_CRF_ITEM_NOTE,
            P005735_n237TBM32_CRF_ITEM_NOTE, P005735_A746TBM32_REF_CRF_ID, P005735_n746TBM32_REF_CRF_ID, P005735_A747TBM32_REF_CRF_ITEM_CD, P005735_n747TBM32_REF_CRF_ITEM_CD, P005735_A238TBM32_DEL_FLG, P005735_n238TBM32_DEL_FLG, P005735_A245TBM32_UPD_CNT, P005735_n245TBM32_UPD_CNT, P005735_A244TBM32_UPD_PROG_NM,
            P005735_n244TBM32_UPD_PROG_NM, P005735_A243TBM32_UPD_USER_ID, P005735_n243TBM32_UPD_USER_ID, P005735_A242TBM32_UPD_DATETIME, P005735_n242TBM32_UPD_DATETIME, P005735_A241TBM32_CRT_PROG_NM, P005735_n241TBM32_CRT_PROG_NM, P005735_A240TBM32_CRT_USER_ID, P005735_n240TBM32_CRT_USER_ID, P005735_A239TBM32_CRT_DATETIME,
            P005735_n239TBM32_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005737_A459TBM34_STUDY_ID, P005737_A460TBM34_CRF_ID, P005737_A461TBM34_STYDY_AUTH_CD, P005737_A462TBM34_DISPLAY_FLG, P005737_n462TBM34_DISPLAY_FLG, P005737_A463TBM34_DEL_FLG, P005737_n463TBM34_DEL_FLG, P005737_A470TBM34_UPD_CNT, P005737_n470TBM34_UPD_CNT, P005737_A469TBM34_UPD_PROG_NM,
            P005737_n469TBM34_UPD_PROG_NM, P005737_A468TBM34_UPD_USER_ID, P005737_n468TBM34_UPD_USER_ID, P005737_A467TBM34_UPD_DATETIME, P005737_n467TBM34_UPD_DATETIME, P005737_A466TBM34_CRT_PROG_NM, P005737_n466TBM34_CRT_PROG_NM, P005737_A465TBM34_CRT_USER_ID, P005737_n465TBM34_CRT_USER_ID, P005737_A464TBM34_CRT_DATETIME,
            P005737_n464TBM34_CRT_DATETIME
            }
            , new Object[] {
            }
            , new Object[] {
            P005739_A217TBM31_STUDY_ID, P005739_A218TBM31_CRF_ID, P005739_A219TBM31_CRF_NM, P005739_n219TBM31_CRF_NM, P005739_A550TBM31_CRF_SNM, P005739_n550TBM31_CRF_SNM, P005739_A220TBM31_GRID_SIZE, P005739_n220TBM31_GRID_SIZE, P005739_A221TBM31_ORDER, P005739_n221TBM31_ORDER,
            P005739_A405TBM31_DEF_VISIT_NO, P005739_n405TBM31_DEF_VISIT_NO, P005739_A406TBM31_DEF_DOMAIN_CD, P005739_n406TBM31_DEF_DOMAIN_CD, P005739_A551TBM31_STATUS, P005739_n551TBM31_STATUS, P005739_A222TBM31_NOTE, P005739_n222TBM31_NOTE, P005739_A223TBM31_DEL_FLG, P005739_n223TBM31_DEL_FLG,
            P005739_A230TBM31_UPD_CNT, P005739_n230TBM31_UPD_CNT, P005739_A229TBM31_UPD_PROG_NM, P005739_n229TBM31_UPD_PROG_NM, P005739_A228TBM31_UPD_USER_ID, P005739_n228TBM31_UPD_USER_ID, P005739_A227TBM31_UPD_DATETIME, P005739_n227TBM31_UPD_DATETIME, P005739_A226TBM31_CRT_PROG_NM, P005739_n226TBM31_CRT_PROG_NM,
            P005739_A225TBM31_CRT_USER_ID, P005739_n225TBM31_CRT_USER_ID, P005739_A224TBM31_CRT_DATETIME, P005739_n224TBM31_CRT_DATETIME
            }
            , new Object[] {
            }
         }
      );
      pr_default.setErrorHandler(this);
      AV25Pgmname = "B402_PC19_STUDY_DEL" ;
      /* GeneXus formulas. */
      AV25Pgmname = "B402_PC19_STUDY_DEL" ;
      Gx_err = (short)(0) ;
   }

   private byte A545TBM24_TEXT_MAXROWS ;
   private byte A546TBM24_DECIMAL_DIGITS ;
   private byte A250TBM33_PRIOR_NO ;
   private byte A393TBM32_TEXT_MAXROWS ;
   private byte A395TBM32_DECIMAL_DIGITS ;
   private byte A390TBM32_FONT_SIZE ;
   private byte A398TBM32_LINE_SIZE_DIV ;
   private byte A552TBM32_AUTH_LVL_MIN ;
   private short AV13W_RTN_CD ;
   private short A472TBM35_CRF_ID ;
   private short A260TBM41_CRF_ID ;
   private short A272TBM37_CRF_ID ;
   private short A373TBM37_VISIT_NO ;
   private short A377TBM37_DOM_ITM_GRP_ATTR_SEQ ;
   private short A612TBM37_DOM_ITM_GRP_ROWNO ;
   private short A618TBM24_DOM_ITM_GRP_ATTR_SEQ ;
   private short A619TBM24_DOM_ITM_GRP_ROWNO ;
   private short A544TBM24_TEXT_MAXLENGTH ;
   private short A448TBM26_LIST_ITEM_NO ;
   private short A485TBM36_CRF_ID ;
   private short A486TBM36_COND_NO ;
   private short A487TBM36_SELECT_CRF_ID ;
   private short A247TBM33_CRF_ID ;
   private short A248TBM33_COND_NO ;
   private short A232TBM32_CRF_ID ;
   private short A384TBM32_CRF_ITEM_GRP_ORDER ;
   private short A385TBM32_LOCATION_X ;
   private short A386TBM32_LOCATION_Y ;
   private short A387TBM32_LOCATION_X2 ;
   private short A388TBM32_LOCATION_Y2 ;
   private short A394TBM32_TEXT_MAXLENGTH ;
   private short A604TBM32_LINE_ANGLE ;
   private short A553TBM32_ZORDER ;
   private short A605TBM32_TAB_ORDER ;
   private short A746TBM32_REF_CRF_ID ;
   private short A460TBM34_CRF_ID ;
   private short A218TBM31_CRF_ID ;
   private short A220TBM31_GRID_SIZE ;
   private short A405TBM31_DEF_VISIT_NO ;
   private short Gx_err ;
   private int A905TBM43_ORDER ;
   private int A892TBM42_ORDER ;
   private int A426TBM24_ORDER ;
   private int A221TBM31_ORDER ;
   private int GXActiveErrHndl ;
   private long A471TBM35_STUDY_ID ;
   private long A483TBM35_UPD_CNT ;
   private long A259TBM41_STUDY_ID ;
   private long A270TBM41_UPD_CNT ;
   private long A894TBM43_STUDY_ID ;
   private long A921TBM43_UPD_CNT ;
   private long A886TBM42_STUDY_ID ;
   private long A918TBM42_UPD_CNT ;
   private long A271TBM37_STUDY_ID ;
   private long A281TBM37_UPD_CNT ;
   private long A512TBM11_STUDY_ID ;
   private long A421TBM11_UPD_CNT ;
   private long A422TBM24_STUDY_ID ;
   private long A434TBM24_UPD_CNT ;
   private long A207TBM23_STUDY_ID ;
   private long A216TBM23_UPD_CNT ;
   private long A197TBM22_STUDY_ID ;
   private long A206TBM22_UPD_CNT ;
   private long A446TBM26_STUDY_ID ;
   private long A458TBM26_UPD_CNT ;
   private long A435TBM25_STUDY_ID ;
   private long A445TBM25_UPD_CNT ;
   private long A484TBM36_STUDY_ID ;
   private long A495TBM36_UPD_CNT ;
   private long A246TBM33_STUDY_ID ;
   private long A258TBM33_UPD_CNT ;
   private long A231TBM32_STUDY_ID ;
   private long A392TBM32_FONT_COLOR_DIV ;
   private long A603TBM32_LINE_COLOR_DIV ;
   private long A245TBM32_UPD_CNT ;
   private long A459TBM34_STUDY_ID ;
   private long A470TBM34_UPD_CNT ;
   private long A217TBM31_STUDY_ID ;
   private long A230TBM31_UPD_CNT ;
   private String scmdbuf ;
   private String AV25Pgmname ;
   private String GXv_char2[] ;
   private String GXKey ;
   private String GXEncryptionTmp ;
   private String GXt_char1 ;
   private String Gx_emsg ;
   private java.util.Date A480TBM35_UPD_DATETIME ;
   private java.util.Date A477TBM35_CRT_DATETIME ;
   private java.util.Date A267TBM41_UPD_DATETIME ;
   private java.util.Date A264TBM41_CRT_DATETIME ;
   private java.util.Date A920TBM43_UPD_DATETIME ;
   private java.util.Date A919TBM43_CRT_DATETIME ;
   private java.util.Date A917TBM42_UPD_DATETIME ;
   private java.util.Date A916TBM42_CRT_DATETIME ;
   private java.util.Date A278TBM37_UPD_DATETIME ;
   private java.util.Date A275TBM37_CRT_DATETIME ;
   private java.util.Date A418TBM11_UPD_DATETIME ;
   private java.util.Date A415TBM11_CRT_DATETIME ;
   private java.util.Date A431TBM24_UPD_DATETIME ;
   private java.util.Date A428TBM24_CRT_DATETIME ;
   private java.util.Date A213TBM23_UPD_DATETIME ;
   private java.util.Date A210TBM23_CRT_DATETIME ;
   private java.util.Date A203TBM22_UPD_DATETIME ;
   private java.util.Date A200TBM22_CRT_DATETIME ;
   private java.util.Date A455TBM26_UPD_DATETIME ;
   private java.util.Date A452TBM26_CRT_DATETIME ;
   private java.util.Date A442TBM25_UPD_DATETIME ;
   private java.util.Date A439TBM25_CRT_DATETIME ;
   private java.util.Date A492TBM36_UPD_DATETIME ;
   private java.util.Date A489TBM36_CRT_DATETIME ;
   private java.util.Date A255TBM33_UPD_DATETIME ;
   private java.util.Date A252TBM33_CRT_DATETIME ;
   private java.util.Date A242TBM32_UPD_DATETIME ;
   private java.util.Date A239TBM32_CRT_DATETIME ;
   private java.util.Date A467TBM34_UPD_DATETIME ;
   private java.util.Date A464TBM34_CRT_DATETIME ;
   private java.util.Date A227TBM31_UPD_DATETIME ;
   private java.util.Date A224TBM31_CRT_DATETIME ;
   private boolean returnInSub ;
   private boolean n475TBM35_DISPLAY_FLG ;
   private boolean n476TBM35_DEL_FLG ;
   private boolean n483TBM35_UPD_CNT ;
   private boolean n482TBM35_UPD_PROG_NM ;
   private boolean n481TBM35_UPD_USER_ID ;
   private boolean n480TBM35_UPD_DATETIME ;
   private boolean n479TBM35_CRT_PROG_NM ;
   private boolean n478TBM35_CRT_USER_ID ;
   private boolean n477TBM35_CRT_DATETIME ;
   private boolean n262TBM41_NCM_METADATA_ID ;
   private boolean n263TBM41_DEL_FLG ;
   private boolean n270TBM41_UPD_CNT ;
   private boolean n269TBM41_UPD_PROG_NM ;
   private boolean n268TBM41_UPD_USER_ID ;
   private boolean n267TBM41_UPD_DATETIME ;
   private boolean n266TBM41_CRT_PROG_NM ;
   private boolean n265TBM41_CRT_USER_ID ;
   private boolean n264TBM41_CRT_DATETIME ;
   private boolean n897TBM43_VAR_DESC ;
   private boolean n898TBM43_SDTM_FLG ;
   private boolean n899TBM43_CDASH_FLG ;
   private boolean n900TBM43_INPUT_TYPE_DIV ;
   private boolean n901TBM43_REQUIRED_FLG ;
   private boolean n902TBM43_SAS_FIELD_NM ;
   private boolean n903TBM43_ODM_DATA_TYPE ;
   private boolean n904TBM43_NOTE ;
   private boolean n905TBM43_ORDER ;
   private boolean n906TBM43_DEL_FLG ;
   private boolean n921TBM43_UPD_CNT ;
   private boolean n915TBM43_UPD_PROG_NM ;
   private boolean n914TBM43_UPD_USER_ID ;
   private boolean n920TBM43_UPD_DATETIME ;
   private boolean n913TBM43_CRT_PROG_NM ;
   private boolean n912TBM43_CRT_USER_ID ;
   private boolean n919TBM43_CRT_DATETIME ;
   private boolean n888TBM42_DOM_ENM ;
   private boolean n889TBM42_DOM_JNM ;
   private boolean n890TBM42_DOM_GRP_NM ;
   private boolean n891TBM42_NOTE ;
   private boolean n892TBM42_ORDER ;
   private boolean n887TBM42_DEL_FLG ;
   private boolean n918TBM42_UPD_CNT ;
   private boolean n911TBM42_UPD_PROG_NM ;
   private boolean n910TBM42_UPD_USER_ID ;
   private boolean n917TBM42_UPD_DATETIME ;
   private boolean n909TBM42_CRT_PROG_NM ;
   private boolean n908TBM42_CRT_USER_ID ;
   private boolean n916TBM42_CRT_DATETIME ;
   private boolean n373TBM37_VISIT_NO ;
   private boolean n374TBM37_DOM_CD ;
   private boolean n375TBM37_DOM_VAR_NM ;
   private boolean n376TBM37_DOM_ITM_GRP_OID ;
   private boolean n377TBM37_DOM_ITM_GRP_ATTR_SEQ ;
   private boolean n612TBM37_DOM_ITM_GRP_ROWNO ;
   private boolean n274TBM37_DEL_FLG ;
   private boolean n281TBM37_UPD_CNT ;
   private boolean n280TBM37_UPD_PROG_NM ;
   private boolean n279TBM37_UPD_USER_ID ;
   private boolean n278TBM37_UPD_DATETIME ;
   private boolean n277TBM37_CRT_PROG_NM ;
   private boolean n276TBM37_CRT_USER_ID ;
   private boolean n275TBM37_CRT_DATETIME ;
   private boolean n512TBM11_STUDY_ID ;
   private boolean n542TBM11_IMAGE_NM ;
   private boolean n413TBM11_FILE_NAME ;
   private boolean n414TBM11_DEL_FLG ;
   private boolean n421TBM11_UPD_CNT ;
   private boolean n420TBM11_UPD_PROG_NM ;
   private boolean n419TBM11_UPD_USER_ID ;
   private boolean n418TBM11_UPD_DATETIME ;
   private boolean n417TBM11_CRT_PROG_NM ;
   private boolean n416TBM11_CRT_USER_ID ;
   private boolean n415TBM11_CRT_DATETIME ;
   private boolean n617TBM24_DOM_ITM_GRP_OID ;
   private boolean n618TBM24_DOM_ITM_GRP_ATTR_SEQ ;
   private boolean n619TBM24_DOM_ITM_GRP_ROWNO ;
   private boolean n620TBM24_CRF_ITEM_NM ;
   private boolean n543TBM24_IDENTIFICATION_CD ;
   private boolean n544TBM24_TEXT_MAXLENGTH ;
   private boolean n545TBM24_TEXT_MAXROWS ;
   private boolean n546TBM24_DECIMAL_DIGITS ;
   private boolean n547TBM24_TEXT ;
   private boolean n548TBM24_FIXED_VALUE ;
   private boolean n549TBM24_CHK_FALSE_INNER_VALUE ;
   private boolean n621TBM24_REQUIRED_INPUT_FLG ;
   private boolean n622TBM24_MIN_VALUE ;
   private boolean n623TBM24_MAX_VALUE ;
   private boolean n426TBM24_ORDER ;
   private boolean n427TBM24_DEL_FLG ;
   private boolean n434TBM24_UPD_CNT ;
   private boolean n433TBM24_UPD_PROG_NM ;
   private boolean n432TBM24_UPD_USER_ID ;
   private boolean n431TBM24_UPD_DATETIME ;
   private boolean n430TBM24_CRT_PROG_NM ;
   private boolean n429TBM24_CRT_USER_ID ;
   private boolean n428TBM24_CRT_DATETIME ;
   private boolean n209TBM23_DEL_FLG ;
   private boolean n216TBM23_UPD_CNT ;
   private boolean n215TBM23_UPD_PROG_NM ;
   private boolean n214TBM23_UPD_USER_ID ;
   private boolean n213TBM23_UPD_DATETIME ;
   private boolean n212TBM23_CRT_PROG_NM ;
   private boolean n211TBM23_CRT_USER_ID ;
   private boolean n210TBM23_CRT_DATETIME ;
   private boolean n199TBM22_DEL_FLG ;
   private boolean n206TBM22_UPD_CNT ;
   private boolean n205TBM22_UPD_PROG_NM ;
   private boolean n204TBM22_UPD_USER_ID ;
   private boolean n203TBM22_UPD_DATETIME ;
   private boolean n202TBM22_CRT_PROG_NM ;
   private boolean n201TBM22_CRT_USER_ID ;
   private boolean n200TBM22_CRT_DATETIME ;
   private boolean n449TBM26_LIST_ITEM_NAME ;
   private boolean n450TBM26_INNER_VALUE ;
   private boolean n451TBM26_DEL_FLG ;
   private boolean n458TBM26_UPD_CNT ;
   private boolean n457TBM26_UPD_PROG_NM ;
   private boolean n456TBM26_UPD_USER_ID ;
   private boolean n455TBM26_UPD_DATETIME ;
   private boolean n454TBM26_CRT_PROG_NM ;
   private boolean n453TBM26_CRT_USER_ID ;
   private boolean n452TBM26_CRT_DATETIME ;
   private boolean n437TBM25_LIST_NM ;
   private boolean n438TBM25_DEL_FLG ;
   private boolean n445TBM25_UPD_CNT ;
   private boolean n444TBM25_UPD_PROG_NM ;
   private boolean n443TBM25_UPD_USER_ID ;
   private boolean n442TBM25_UPD_DATETIME ;
   private boolean n441TBM25_CRT_PROG_NM ;
   private boolean n440TBM25_CRT_USER_ID ;
   private boolean n439TBM25_CRT_DATETIME ;
   private boolean n488TBM36_DEL_FLG ;
   private boolean n495TBM36_UPD_CNT ;
   private boolean n494TBM36_UPD_PROG_NM ;
   private boolean n493TBM36_UPD_USER_ID ;
   private boolean n492TBM36_UPD_DATETIME ;
   private boolean n491TBM36_CRT_PROG_NM ;
   private boolean n490TBM36_CRT_USER_ID ;
   private boolean n489TBM36_CRT_DATETIME ;
   private boolean n379TBM33_COND_NM ;
   private boolean n249TBM33_EXPRESSION ;
   private boolean n380TBM33_COND_DIV ;
   private boolean n381TBM33_CRF_ITEM_CD ;
   private boolean n250TBM33_PRIOR_NO ;
   private boolean n382TBM33_ERR_DIV ;
   private boolean n383TBM33_ERR_MSG ;
   private boolean n554TBM33_ENABLED_FLG ;
   private boolean n610TBM33_REQUIRED_INPUT_FLG ;
   private boolean n611TBM33_NUMERIC_RANGE_FLG ;
   private boolean n251TBM33_DEL_FLG ;
   private boolean n258TBM33_UPD_CNT ;
   private boolean n257TBM33_UPD_PROG_NM ;
   private boolean n256TBM33_UPD_USER_ID ;
   private boolean n255TBM33_UPD_DATETIME ;
   private boolean n254TBM33_CRT_PROG_NM ;
   private boolean n253TBM33_CRT_USER_ID ;
   private boolean n252TBM33_CRT_DATETIME ;
   private boolean n234TBM32_CRF_ITEM_NM ;
   private boolean n235TBM32_CRF_ITEM_DIV ;
   private boolean n236TBM32_CRF_ITEM_GRP_CD ;
   private boolean n384TBM32_CRF_ITEM_GRP_ORDER ;
   private boolean n385TBM32_LOCATION_X ;
   private boolean n386TBM32_LOCATION_Y ;
   private boolean n387TBM32_LOCATION_X2 ;
   private boolean n388TBM32_LOCATION_Y2 ;
   private boolean n389TBM32_TEXT_ALIGN_DIV ;
   private boolean n393TBM32_TEXT_MAXROWS ;
   private boolean n394TBM32_TEXT_MAXLENGTH ;
   private boolean n395TBM32_DECIMAL_DIGITS ;
   private boolean n399TBM32_CHK_TRUE_INNER_VALUE ;
   private boolean n400TBM32_CHK_FALSE_INNER_VALUE ;
   private boolean n404TBM32_FIXED_VALUE ;
   private boolean n402TBM32_LIST_CD ;
   private boolean n403TBM32_IMAGE_CD ;
   private boolean n401TBM32_TEXT ;
   private boolean n390TBM32_FONT_SIZE ;
   private boolean n391TBM32_FONT_UL_FLG ;
   private boolean n392TBM32_FONT_COLOR_DIV ;
   private boolean n398TBM32_LINE_SIZE_DIV ;
   private boolean n603TBM32_LINE_COLOR_DIV ;
   private boolean n396TBM32_LINE_START_POINT_DIV ;
   private boolean n397TBM32_LINE_END_POINT_DIV ;
   private boolean n604TBM32_LINE_ANGLE ;
   private boolean n552TBM32_AUTH_LVL_MIN ;
   private boolean n553TBM32_ZORDER ;
   private boolean n605TBM32_TAB_ORDER ;
   private boolean n606TBM32_TABSTOP_FLG ;
   private boolean n607TBM32_REQUIRED_INPUT_FLG ;
   private boolean n608TBM32_MIN_VALUE ;
   private boolean n609TBM32_MAX_VALUE ;
   private boolean n237TBM32_CRF_ITEM_NOTE ;
   private boolean n746TBM32_REF_CRF_ID ;
   private boolean n747TBM32_REF_CRF_ITEM_CD ;
   private boolean n238TBM32_DEL_FLG ;
   private boolean n245TBM32_UPD_CNT ;
   private boolean n244TBM32_UPD_PROG_NM ;
   private boolean n243TBM32_UPD_USER_ID ;
   private boolean n242TBM32_UPD_DATETIME ;
   private boolean n241TBM32_CRT_PROG_NM ;
   private boolean n240TBM32_CRT_USER_ID ;
   private boolean n239TBM32_CRT_DATETIME ;
   private boolean n462TBM34_DISPLAY_FLG ;
   private boolean n463TBM34_DEL_FLG ;
   private boolean n470TBM34_UPD_CNT ;
   private boolean n469TBM34_UPD_PROG_NM ;
   private boolean n468TBM34_UPD_USER_ID ;
   private boolean n467TBM34_UPD_DATETIME ;
   private boolean n466TBM34_CRT_PROG_NM ;
   private boolean n465TBM34_CRT_USER_ID ;
   private boolean n464TBM34_CRT_DATETIME ;
   private boolean n219TBM31_CRF_NM ;
   private boolean n550TBM31_CRF_SNM ;
   private boolean n220TBM31_GRID_SIZE ;
   private boolean n221TBM31_ORDER ;
   private boolean n405TBM31_DEF_VISIT_NO ;
   private boolean n406TBM31_DEF_DOMAIN_CD ;
   private boolean n551TBM31_STATUS ;
   private boolean n222TBM31_NOTE ;
   private boolean n223TBM31_DEL_FLG ;
   private boolean n230TBM31_UPD_CNT ;
   private boolean n229TBM31_UPD_PROG_NM ;
   private boolean n228TBM31_UPD_USER_ID ;
   private boolean n227TBM31_UPD_DATETIME ;
   private boolean n226TBM31_CRT_PROG_NM ;
   private boolean n225TBM31_CRT_USER_ID ;
   private boolean n224TBM31_CRT_DATETIME ;
   private String AV14W_RTN_MSG ;
   private String AV8C_APP_ID ;
   private String A473TBM35_CRF_ITEM_CD ;
   private String A474TBM35_STUDY_AUTH_CD ;
   private String A475TBM35_DISPLAY_FLG ;
   private String A476TBM35_DEL_FLG ;
   private String A482TBM35_UPD_PROG_NM ;
   private String A481TBM35_UPD_USER_ID ;
   private String A479TBM35_CRT_PROG_NM ;
   private String A478TBM35_CRT_USER_ID ;
   private String A378TBM41_CRF_ITEM_GRP_DIV ;
   private String A261TBM41_CRF_ITEM_GRP_CD ;
   private String A262TBM41_NCM_METADATA_ID ;
   private String A263TBM41_DEL_FLG ;
   private String A269TBM41_UPD_PROG_NM ;
   private String A268TBM41_UPD_USER_ID ;
   private String A266TBM41_CRT_PROG_NM ;
   private String A265TBM41_CRT_USER_ID ;
   private String A895TBM43_DOM_CD ;
   private String A896TBM43_DOM_VAR_NM ;
   private String A897TBM43_VAR_DESC ;
   private String A898TBM43_SDTM_FLG ;
   private String A899TBM43_CDASH_FLG ;
   private String A900TBM43_INPUT_TYPE_DIV ;
   private String A901TBM43_REQUIRED_FLG ;
   private String A902TBM43_SAS_FIELD_NM ;
   private String A903TBM43_ODM_DATA_TYPE ;
   private String A904TBM43_NOTE ;
   private String A906TBM43_DEL_FLG ;
   private String A915TBM43_UPD_PROG_NM ;
   private String A914TBM43_UPD_USER_ID ;
   private String A913TBM43_CRT_PROG_NM ;
   private String A912TBM43_CRT_USER_ID ;
   private String A893TBM42_DOM_CD ;
   private String A888TBM42_DOM_ENM ;
   private String A889TBM42_DOM_JNM ;
   private String A890TBM42_DOM_GRP_NM ;
   private String A891TBM42_NOTE ;
   private String A887TBM42_DEL_FLG ;
   private String A911TBM42_UPD_PROG_NM ;
   private String A910TBM42_UPD_USER_ID ;
   private String A909TBM42_CRT_PROG_NM ;
   private String A908TBM42_CRT_USER_ID ;
   private String A372TBM37_CRF_ITEM_GRP_DIV ;
   private String A273TBM37_CRF_ITEM_GRP_CD ;
   private String A374TBM37_DOM_CD ;
   private String A375TBM37_DOM_VAR_NM ;
   private String A376TBM37_DOM_ITM_GRP_OID ;
   private String A274TBM37_DEL_FLG ;
   private String A280TBM37_UPD_PROG_NM ;
   private String A279TBM37_UPD_USER_ID ;
   private String A277TBM37_CRT_PROG_NM ;
   private String A276TBM37_CRT_USER_ID ;
   private String A411TBM11_IMAGE_CD ;
   private String A542TBM11_IMAGE_NM ;
   private String A413TBM11_FILE_NAME ;
   private String A414TBM11_DEL_FLG ;
   private String A420TBM11_UPD_PROG_NM ;
   private String A419TBM11_UPD_USER_ID ;
   private String A417TBM11_CRT_PROG_NM ;
   private String A416TBM11_CRT_USER_ID ;
   private String A423TBM24_DOM_CD ;
   private String A424TBM24_DOM_VAR_NM ;
   private String A617TBM24_DOM_ITM_GRP_OID ;
   private String A620TBM24_CRF_ITEM_NM ;
   private String A425TBM24_CRF_ITEM_DIV ;
   private String A543TBM24_IDENTIFICATION_CD ;
   private String A547TBM24_TEXT ;
   private String A548TBM24_FIXED_VALUE ;
   private String A549TBM24_CHK_FALSE_INNER_VALUE ;
   private String A621TBM24_REQUIRED_INPUT_FLG ;
   private String A622TBM24_MIN_VALUE ;
   private String A623TBM24_MAX_VALUE ;
   private String A427TBM24_DEL_FLG ;
   private String A433TBM24_UPD_PROG_NM ;
   private String A432TBM24_UPD_USER_ID ;
   private String A430TBM24_CRT_PROG_NM ;
   private String A429TBM24_CRT_USER_ID ;
   private String A208TBM23_USER_ID ;
   private String A407TBM23_STYDY_AUTH_CD ;
   private String A209TBM23_DEL_FLG ;
   private String A215TBM23_UPD_PROG_NM ;
   private String A214TBM23_UPD_USER_ID ;
   private String A212TBM23_CRT_PROG_NM ;
   private String A211TBM23_CRT_USER_ID ;
   private String A198TBM22_SITE_ID ;
   private String A199TBM22_DEL_FLG ;
   private String A205TBM22_UPD_PROG_NM ;
   private String A204TBM22_UPD_USER_ID ;
   private String A202TBM22_CRT_PROG_NM ;
   private String A201TBM22_CRT_USER_ID ;
   private String A447TBM26_LIST_CD ;
   private String A449TBM26_LIST_ITEM_NAME ;
   private String A450TBM26_INNER_VALUE ;
   private String A451TBM26_DEL_FLG ;
   private String A457TBM26_UPD_PROG_NM ;
   private String A456TBM26_UPD_USER_ID ;
   private String A454TBM26_CRT_PROG_NM ;
   private String A453TBM26_CRT_USER_ID ;
   private String A436TBM25_LIST_CD ;
   private String A437TBM25_LIST_NM ;
   private String A438TBM25_DEL_FLG ;
   private String A444TBM25_UPD_PROG_NM ;
   private String A443TBM25_UPD_USER_ID ;
   private String A441TBM25_CRT_PROG_NM ;
   private String A440TBM25_CRT_USER_ID ;
   private String A488TBM36_DEL_FLG ;
   private String A494TBM36_UPD_PROG_NM ;
   private String A493TBM36_UPD_USER_ID ;
   private String A491TBM36_CRT_PROG_NM ;
   private String A490TBM36_CRT_USER_ID ;
   private String A379TBM33_COND_NM ;
   private String A249TBM33_EXPRESSION ;
   private String A380TBM33_COND_DIV ;
   private String A381TBM33_CRF_ITEM_CD ;
   private String A382TBM33_ERR_DIV ;
   private String A383TBM33_ERR_MSG ;
   private String A554TBM33_ENABLED_FLG ;
   private String A610TBM33_REQUIRED_INPUT_FLG ;
   private String A611TBM33_NUMERIC_RANGE_FLG ;
   private String A251TBM33_DEL_FLG ;
   private String A257TBM33_UPD_PROG_NM ;
   private String A256TBM33_UPD_USER_ID ;
   private String A254TBM33_CRT_PROG_NM ;
   private String A253TBM33_CRT_USER_ID ;
   private String A233TBM32_CRF_ITEM_CD ;
   private String A234TBM32_CRF_ITEM_NM ;
   private String A235TBM32_CRF_ITEM_DIV ;
   private String A236TBM32_CRF_ITEM_GRP_CD ;
   private String A389TBM32_TEXT_ALIGN_DIV ;
   private String A399TBM32_CHK_TRUE_INNER_VALUE ;
   private String A400TBM32_CHK_FALSE_INNER_VALUE ;
   private String A404TBM32_FIXED_VALUE ;
   private String A402TBM32_LIST_CD ;
   private String A403TBM32_IMAGE_CD ;
   private String A401TBM32_TEXT ;
   private String A391TBM32_FONT_UL_FLG ;
   private String A396TBM32_LINE_START_POINT_DIV ;
   private String A397TBM32_LINE_END_POINT_DIV ;
   private String A606TBM32_TABSTOP_FLG ;
   private String A607TBM32_REQUIRED_INPUT_FLG ;
   private String A608TBM32_MIN_VALUE ;
   private String A609TBM32_MAX_VALUE ;
   private String A237TBM32_CRF_ITEM_NOTE ;
   private String A747TBM32_REF_CRF_ITEM_CD ;
   private String A238TBM32_DEL_FLG ;
   private String A244TBM32_UPD_PROG_NM ;
   private String A243TBM32_UPD_USER_ID ;
   private String A241TBM32_CRT_PROG_NM ;
   private String A240TBM32_CRT_USER_ID ;
   private String A461TBM34_STYDY_AUTH_CD ;
   private String A462TBM34_DISPLAY_FLG ;
   private String A463TBM34_DEL_FLG ;
   private String A469TBM34_UPD_PROG_NM ;
   private String A468TBM34_UPD_USER_ID ;
   private String A466TBM34_CRT_PROG_NM ;
   private String A465TBM34_CRT_USER_ID ;
   private String A219TBM31_CRF_NM ;
   private String A550TBM31_CRF_SNM ;
   private String A406TBM31_DEF_DOMAIN_CD ;
   private String A551TBM31_STATUS ;
   private String A222TBM31_NOTE ;
   private String A223TBM31_DEL_FLG ;
   private String A229TBM31_UPD_PROG_NM ;
   private String A228TBM31_UPD_USER_ID ;
   private String A226TBM31_CRT_PROG_NM ;
   private String A225TBM31_CRT_USER_ID ;
   private String AV11W_ERRCD ;
   private short[] aP1 ;
   private String[] aP2 ;
   private IDataStoreProvider pr_default ;
   private long[] P00579_A471TBM35_STUDY_ID ;
   private short[] P00579_A472TBM35_CRF_ID ;
   private String[] P00579_A473TBM35_CRF_ITEM_CD ;
   private String[] P00579_A474TBM35_STUDY_AUTH_CD ;
   private String[] P00579_A475TBM35_DISPLAY_FLG ;
   private boolean[] P00579_n475TBM35_DISPLAY_FLG ;
   private String[] P00579_A476TBM35_DEL_FLG ;
   private boolean[] P00579_n476TBM35_DEL_FLG ;
   private long[] P00579_A483TBM35_UPD_CNT ;
   private boolean[] P00579_n483TBM35_UPD_CNT ;
   private String[] P00579_A482TBM35_UPD_PROG_NM ;
   private boolean[] P00579_n482TBM35_UPD_PROG_NM ;
   private String[] P00579_A481TBM35_UPD_USER_ID ;
   private boolean[] P00579_n481TBM35_UPD_USER_ID ;
   private java.util.Date[] P00579_A480TBM35_UPD_DATETIME ;
   private boolean[] P00579_n480TBM35_UPD_DATETIME ;
   private String[] P00579_A479TBM35_CRT_PROG_NM ;
   private boolean[] P00579_n479TBM35_CRT_PROG_NM ;
   private String[] P00579_A478TBM35_CRT_USER_ID ;
   private boolean[] P00579_n478TBM35_CRT_USER_ID ;
   private java.util.Date[] P00579_A477TBM35_CRT_DATETIME ;
   private boolean[] P00579_n477TBM35_CRT_DATETIME ;
   private long[] P005711_A259TBM41_STUDY_ID ;
   private short[] P005711_A260TBM41_CRF_ID ;
   private String[] P005711_A378TBM41_CRF_ITEM_GRP_DIV ;
   private String[] P005711_A261TBM41_CRF_ITEM_GRP_CD ;
   private String[] P005711_A262TBM41_NCM_METADATA_ID ;
   private boolean[] P005711_n262TBM41_NCM_METADATA_ID ;
   private String[] P005711_A263TBM41_DEL_FLG ;
   private boolean[] P005711_n263TBM41_DEL_FLG ;
   private long[] P005711_A270TBM41_UPD_CNT ;
   private boolean[] P005711_n270TBM41_UPD_CNT ;
   private String[] P005711_A269TBM41_UPD_PROG_NM ;
   private boolean[] P005711_n269TBM41_UPD_PROG_NM ;
   private String[] P005711_A268TBM41_UPD_USER_ID ;
   private boolean[] P005711_n268TBM41_UPD_USER_ID ;
   private java.util.Date[] P005711_A267TBM41_UPD_DATETIME ;
   private boolean[] P005711_n267TBM41_UPD_DATETIME ;
   private String[] P005711_A266TBM41_CRT_PROG_NM ;
   private boolean[] P005711_n266TBM41_CRT_PROG_NM ;
   private String[] P005711_A265TBM41_CRT_USER_ID ;
   private boolean[] P005711_n265TBM41_CRT_USER_ID ;
   private java.util.Date[] P005711_A264TBM41_CRT_DATETIME ;
   private boolean[] P005711_n264TBM41_CRT_DATETIME ;
   private long[] P005713_A894TBM43_STUDY_ID ;
   private String[] P005713_A895TBM43_DOM_CD ;
   private String[] P005713_A896TBM43_DOM_VAR_NM ;
   private String[] P005713_A897TBM43_VAR_DESC ;
   private boolean[] P005713_n897TBM43_VAR_DESC ;
   private String[] P005713_A898TBM43_SDTM_FLG ;
   private boolean[] P005713_n898TBM43_SDTM_FLG ;
   private String[] P005713_A899TBM43_CDASH_FLG ;
   private boolean[] P005713_n899TBM43_CDASH_FLG ;
   private String[] P005713_A900TBM43_INPUT_TYPE_DIV ;
   private boolean[] P005713_n900TBM43_INPUT_TYPE_DIV ;
   private String[] P005713_A901TBM43_REQUIRED_FLG ;
   private boolean[] P005713_n901TBM43_REQUIRED_FLG ;
   private String[] P005713_A902TBM43_SAS_FIELD_NM ;
   private boolean[] P005713_n902TBM43_SAS_FIELD_NM ;
   private String[] P005713_A903TBM43_ODM_DATA_TYPE ;
   private boolean[] P005713_n903TBM43_ODM_DATA_TYPE ;
   private String[] P005713_A904TBM43_NOTE ;
   private boolean[] P005713_n904TBM43_NOTE ;
   private int[] P005713_A905TBM43_ORDER ;
   private boolean[] P005713_n905TBM43_ORDER ;
   private String[] P005713_A906TBM43_DEL_FLG ;
   private boolean[] P005713_n906TBM43_DEL_FLG ;
   private long[] P005713_A921TBM43_UPD_CNT ;
   private boolean[] P005713_n921TBM43_UPD_CNT ;
   private String[] P005713_A915TBM43_UPD_PROG_NM ;
   private boolean[] P005713_n915TBM43_UPD_PROG_NM ;
   private String[] P005713_A914TBM43_UPD_USER_ID ;
   private boolean[] P005713_n914TBM43_UPD_USER_ID ;
   private java.util.Date[] P005713_A920TBM43_UPD_DATETIME ;
   private boolean[] P005713_n920TBM43_UPD_DATETIME ;
   private String[] P005713_A913TBM43_CRT_PROG_NM ;
   private boolean[] P005713_n913TBM43_CRT_PROG_NM ;
   private String[] P005713_A912TBM43_CRT_USER_ID ;
   private boolean[] P005713_n912TBM43_CRT_USER_ID ;
   private java.util.Date[] P005713_A919TBM43_CRT_DATETIME ;
   private boolean[] P005713_n919TBM43_CRT_DATETIME ;
   private long[] P005715_A886TBM42_STUDY_ID ;
   private String[] P005715_A893TBM42_DOM_CD ;
   private String[] P005715_A888TBM42_DOM_ENM ;
   private boolean[] P005715_n888TBM42_DOM_ENM ;
   private String[] P005715_A889TBM42_DOM_JNM ;
   private boolean[] P005715_n889TBM42_DOM_JNM ;
   private String[] P005715_A890TBM42_DOM_GRP_NM ;
   private boolean[] P005715_n890TBM42_DOM_GRP_NM ;
   private String[] P005715_A891TBM42_NOTE ;
   private boolean[] P005715_n891TBM42_NOTE ;
   private int[] P005715_A892TBM42_ORDER ;
   private boolean[] P005715_n892TBM42_ORDER ;
   private String[] P005715_A887TBM42_DEL_FLG ;
   private boolean[] P005715_n887TBM42_DEL_FLG ;
   private long[] P005715_A918TBM42_UPD_CNT ;
   private boolean[] P005715_n918TBM42_UPD_CNT ;
   private String[] P005715_A911TBM42_UPD_PROG_NM ;
   private boolean[] P005715_n911TBM42_UPD_PROG_NM ;
   private String[] P005715_A910TBM42_UPD_USER_ID ;
   private boolean[] P005715_n910TBM42_UPD_USER_ID ;
   private java.util.Date[] P005715_A917TBM42_UPD_DATETIME ;
   private boolean[] P005715_n917TBM42_UPD_DATETIME ;
   private String[] P005715_A909TBM42_CRT_PROG_NM ;
   private boolean[] P005715_n909TBM42_CRT_PROG_NM ;
   private String[] P005715_A908TBM42_CRT_USER_ID ;
   private boolean[] P005715_n908TBM42_CRT_USER_ID ;
   private java.util.Date[] P005715_A916TBM42_CRT_DATETIME ;
   private boolean[] P005715_n916TBM42_CRT_DATETIME ;
   private long[] P005717_A271TBM37_STUDY_ID ;
   private short[] P005717_A272TBM37_CRF_ID ;
   private String[] P005717_A372TBM37_CRF_ITEM_GRP_DIV ;
   private String[] P005717_A273TBM37_CRF_ITEM_GRP_CD ;
   private short[] P005717_A373TBM37_VISIT_NO ;
   private boolean[] P005717_n373TBM37_VISIT_NO ;
   private String[] P005717_A374TBM37_DOM_CD ;
   private boolean[] P005717_n374TBM37_DOM_CD ;
   private String[] P005717_A375TBM37_DOM_VAR_NM ;
   private boolean[] P005717_n375TBM37_DOM_VAR_NM ;
   private String[] P005717_A376TBM37_DOM_ITM_GRP_OID ;
   private boolean[] P005717_n376TBM37_DOM_ITM_GRP_OID ;
   private short[] P005717_A377TBM37_DOM_ITM_GRP_ATTR_SEQ ;
   private boolean[] P005717_n377TBM37_DOM_ITM_GRP_ATTR_SEQ ;
   private short[] P005717_A612TBM37_DOM_ITM_GRP_ROWNO ;
   private boolean[] P005717_n612TBM37_DOM_ITM_GRP_ROWNO ;
   private String[] P005717_A274TBM37_DEL_FLG ;
   private boolean[] P005717_n274TBM37_DEL_FLG ;
   private long[] P005717_A281TBM37_UPD_CNT ;
   private boolean[] P005717_n281TBM37_UPD_CNT ;
   private String[] P005717_A280TBM37_UPD_PROG_NM ;
   private boolean[] P005717_n280TBM37_UPD_PROG_NM ;
   private String[] P005717_A279TBM37_UPD_USER_ID ;
   private boolean[] P005717_n279TBM37_UPD_USER_ID ;
   private java.util.Date[] P005717_A278TBM37_UPD_DATETIME ;
   private boolean[] P005717_n278TBM37_UPD_DATETIME ;
   private String[] P005717_A277TBM37_CRT_PROG_NM ;
   private boolean[] P005717_n277TBM37_CRT_PROG_NM ;
   private String[] P005717_A276TBM37_CRT_USER_ID ;
   private boolean[] P005717_n276TBM37_CRT_USER_ID ;
   private java.util.Date[] P005717_A275TBM37_CRT_DATETIME ;
   private boolean[] P005717_n275TBM37_CRT_DATETIME ;
   private long[] P005719_A512TBM11_STUDY_ID ;
   private boolean[] P005719_n512TBM11_STUDY_ID ;
   private String[] P005719_A411TBM11_IMAGE_CD ;
   private String[] P005719_A542TBM11_IMAGE_NM ;
   private boolean[] P005719_n542TBM11_IMAGE_NM ;
   private String[] P005719_A413TBM11_FILE_NAME ;
   private boolean[] P005719_n413TBM11_FILE_NAME ;
   private String[] P005719_A414TBM11_DEL_FLG ;
   private boolean[] P005719_n414TBM11_DEL_FLG ;
   private long[] P005719_A421TBM11_UPD_CNT ;
   private boolean[] P005719_n421TBM11_UPD_CNT ;
   private String[] P005719_A420TBM11_UPD_PROG_NM ;
   private boolean[] P005719_n420TBM11_UPD_PROG_NM ;
   private String[] P005719_A419TBM11_UPD_USER_ID ;
   private boolean[] P005719_n419TBM11_UPD_USER_ID ;
   private java.util.Date[] P005719_A418TBM11_UPD_DATETIME ;
   private boolean[] P005719_n418TBM11_UPD_DATETIME ;
   private String[] P005719_A417TBM11_CRT_PROG_NM ;
   private boolean[] P005719_n417TBM11_CRT_PROG_NM ;
   private String[] P005719_A416TBM11_CRT_USER_ID ;
   private boolean[] P005719_n416TBM11_CRT_USER_ID ;
   private java.util.Date[] P005719_A415TBM11_CRT_DATETIME ;
   private boolean[] P005719_n415TBM11_CRT_DATETIME ;
   private long[] P005721_A422TBM24_STUDY_ID ;
   private String[] P005721_A423TBM24_DOM_CD ;
   private String[] P005721_A424TBM24_DOM_VAR_NM ;
   private String[] P005721_A617TBM24_DOM_ITM_GRP_OID ;
   private boolean[] P005721_n617TBM24_DOM_ITM_GRP_OID ;
   private short[] P005721_A618TBM24_DOM_ITM_GRP_ATTR_SEQ ;
   private boolean[] P005721_n618TBM24_DOM_ITM_GRP_ATTR_SEQ ;
   private short[] P005721_A619TBM24_DOM_ITM_GRP_ROWNO ;
   private boolean[] P005721_n619TBM24_DOM_ITM_GRP_ROWNO ;
   private String[] P005721_A620TBM24_CRF_ITEM_NM ;
   private boolean[] P005721_n620TBM24_CRF_ITEM_NM ;
   private String[] P005721_A425TBM24_CRF_ITEM_DIV ;
   private String[] P005721_A543TBM24_IDENTIFICATION_CD ;
   private boolean[] P005721_n543TBM24_IDENTIFICATION_CD ;
   private short[] P005721_A544TBM24_TEXT_MAXLENGTH ;
   private boolean[] P005721_n544TBM24_TEXT_MAXLENGTH ;
   private byte[] P005721_A545TBM24_TEXT_MAXROWS ;
   private boolean[] P005721_n545TBM24_TEXT_MAXROWS ;
   private byte[] P005721_A546TBM24_DECIMAL_DIGITS ;
   private boolean[] P005721_n546TBM24_DECIMAL_DIGITS ;
   private String[] P005721_A547TBM24_TEXT ;
   private boolean[] P005721_n547TBM24_TEXT ;
   private String[] P005721_A548TBM24_FIXED_VALUE ;
   private boolean[] P005721_n548TBM24_FIXED_VALUE ;
   private String[] P005721_A549TBM24_CHK_FALSE_INNER_VALUE ;
   private boolean[] P005721_n549TBM24_CHK_FALSE_INNER_VALUE ;
   private String[] P005721_A621TBM24_REQUIRED_INPUT_FLG ;
   private boolean[] P005721_n621TBM24_REQUIRED_INPUT_FLG ;
   private String[] P005721_A622TBM24_MIN_VALUE ;
   private boolean[] P005721_n622TBM24_MIN_VALUE ;
   private String[] P005721_A623TBM24_MAX_VALUE ;
   private boolean[] P005721_n623TBM24_MAX_VALUE ;
   private int[] P005721_A426TBM24_ORDER ;
   private boolean[] P005721_n426TBM24_ORDER ;
   private String[] P005721_A427TBM24_DEL_FLG ;
   private boolean[] P005721_n427TBM24_DEL_FLG ;
   private long[] P005721_A434TBM24_UPD_CNT ;
   private boolean[] P005721_n434TBM24_UPD_CNT ;
   private String[] P005721_A433TBM24_UPD_PROG_NM ;
   private boolean[] P005721_n433TBM24_UPD_PROG_NM ;
   private String[] P005721_A432TBM24_UPD_USER_ID ;
   private boolean[] P005721_n432TBM24_UPD_USER_ID ;
   private java.util.Date[] P005721_A431TBM24_UPD_DATETIME ;
   private boolean[] P005721_n431TBM24_UPD_DATETIME ;
   private String[] P005721_A430TBM24_CRT_PROG_NM ;
   private boolean[] P005721_n430TBM24_CRT_PROG_NM ;
   private String[] P005721_A429TBM24_CRT_USER_ID ;
   private boolean[] P005721_n429TBM24_CRT_USER_ID ;
   private java.util.Date[] P005721_A428TBM24_CRT_DATETIME ;
   private boolean[] P005721_n428TBM24_CRT_DATETIME ;
   private long[] P005723_A207TBM23_STUDY_ID ;
   private String[] P005723_A208TBM23_USER_ID ;
   private String[] P005723_A407TBM23_STYDY_AUTH_CD ;
   private String[] P005723_A209TBM23_DEL_FLG ;
   private boolean[] P005723_n209TBM23_DEL_FLG ;
   private long[] P005723_A216TBM23_UPD_CNT ;
   private boolean[] P005723_n216TBM23_UPD_CNT ;
   private String[] P005723_A215TBM23_UPD_PROG_NM ;
   private boolean[] P005723_n215TBM23_UPD_PROG_NM ;
   private String[] P005723_A214TBM23_UPD_USER_ID ;
   private boolean[] P005723_n214TBM23_UPD_USER_ID ;
   private java.util.Date[] P005723_A213TBM23_UPD_DATETIME ;
   private boolean[] P005723_n213TBM23_UPD_DATETIME ;
   private String[] P005723_A212TBM23_CRT_PROG_NM ;
   private boolean[] P005723_n212TBM23_CRT_PROG_NM ;
   private String[] P005723_A211TBM23_CRT_USER_ID ;
   private boolean[] P005723_n211TBM23_CRT_USER_ID ;
   private java.util.Date[] P005723_A210TBM23_CRT_DATETIME ;
   private boolean[] P005723_n210TBM23_CRT_DATETIME ;
   private long[] P005725_A197TBM22_STUDY_ID ;
   private String[] P005725_A198TBM22_SITE_ID ;
   private String[] P005725_A199TBM22_DEL_FLG ;
   private boolean[] P005725_n199TBM22_DEL_FLG ;
   private long[] P005725_A206TBM22_UPD_CNT ;
   private boolean[] P005725_n206TBM22_UPD_CNT ;
   private String[] P005725_A205TBM22_UPD_PROG_NM ;
   private boolean[] P005725_n205TBM22_UPD_PROG_NM ;
   private String[] P005725_A204TBM22_UPD_USER_ID ;
   private boolean[] P005725_n204TBM22_UPD_USER_ID ;
   private java.util.Date[] P005725_A203TBM22_UPD_DATETIME ;
   private boolean[] P005725_n203TBM22_UPD_DATETIME ;
   private String[] P005725_A202TBM22_CRT_PROG_NM ;
   private boolean[] P005725_n202TBM22_CRT_PROG_NM ;
   private String[] P005725_A201TBM22_CRT_USER_ID ;
   private boolean[] P005725_n201TBM22_CRT_USER_ID ;
   private java.util.Date[] P005725_A200TBM22_CRT_DATETIME ;
   private boolean[] P005725_n200TBM22_CRT_DATETIME ;
   private long[] P005727_A446TBM26_STUDY_ID ;
   private String[] P005727_A447TBM26_LIST_CD ;
   private short[] P005727_A448TBM26_LIST_ITEM_NO ;
   private String[] P005727_A449TBM26_LIST_ITEM_NAME ;
   private boolean[] P005727_n449TBM26_LIST_ITEM_NAME ;
   private String[] P005727_A450TBM26_INNER_VALUE ;
   private boolean[] P005727_n450TBM26_INNER_VALUE ;
   private String[] P005727_A451TBM26_DEL_FLG ;
   private boolean[] P005727_n451TBM26_DEL_FLG ;
   private long[] P005727_A458TBM26_UPD_CNT ;
   private boolean[] P005727_n458TBM26_UPD_CNT ;
   private String[] P005727_A457TBM26_UPD_PROG_NM ;
   private boolean[] P005727_n457TBM26_UPD_PROG_NM ;
   private String[] P005727_A456TBM26_UPD_USER_ID ;
   private boolean[] P005727_n456TBM26_UPD_USER_ID ;
   private java.util.Date[] P005727_A455TBM26_UPD_DATETIME ;
   private boolean[] P005727_n455TBM26_UPD_DATETIME ;
   private String[] P005727_A454TBM26_CRT_PROG_NM ;
   private boolean[] P005727_n454TBM26_CRT_PROG_NM ;
   private String[] P005727_A453TBM26_CRT_USER_ID ;
   private boolean[] P005727_n453TBM26_CRT_USER_ID ;
   private java.util.Date[] P005727_A452TBM26_CRT_DATETIME ;
   private boolean[] P005727_n452TBM26_CRT_DATETIME ;
   private long[] P005729_A435TBM25_STUDY_ID ;
   private String[] P005729_A436TBM25_LIST_CD ;
   private String[] P005729_A437TBM25_LIST_NM ;
   private boolean[] P005729_n437TBM25_LIST_NM ;
   private String[] P005729_A438TBM25_DEL_FLG ;
   private boolean[] P005729_n438TBM25_DEL_FLG ;
   private long[] P005729_A445TBM25_UPD_CNT ;
   private boolean[] P005729_n445TBM25_UPD_CNT ;
   private String[] P005729_A444TBM25_UPD_PROG_NM ;
   private boolean[] P005729_n444TBM25_UPD_PROG_NM ;
   private String[] P005729_A443TBM25_UPD_USER_ID ;
   private boolean[] P005729_n443TBM25_UPD_USER_ID ;
   private java.util.Date[] P005729_A442TBM25_UPD_DATETIME ;
   private boolean[] P005729_n442TBM25_UPD_DATETIME ;
   private String[] P005729_A441TBM25_CRT_PROG_NM ;
   private boolean[] P005729_n441TBM25_CRT_PROG_NM ;
   private String[] P005729_A440TBM25_CRT_USER_ID ;
   private boolean[] P005729_n440TBM25_CRT_USER_ID ;
   private java.util.Date[] P005729_A439TBM25_CRT_DATETIME ;
   private boolean[] P005729_n439TBM25_CRT_DATETIME ;
   private long[] P005731_A484TBM36_STUDY_ID ;
   private short[] P005731_A485TBM36_CRF_ID ;
   private short[] P005731_A486TBM36_COND_NO ;
   private short[] P005731_A487TBM36_SELECT_CRF_ID ;
   private String[] P005731_A488TBM36_DEL_FLG ;
   private boolean[] P005731_n488TBM36_DEL_FLG ;
   private long[] P005731_A495TBM36_UPD_CNT ;
   private boolean[] P005731_n495TBM36_UPD_CNT ;
   private String[] P005731_A494TBM36_UPD_PROG_NM ;
   private boolean[] P005731_n494TBM36_UPD_PROG_NM ;
   private String[] P005731_A493TBM36_UPD_USER_ID ;
   private boolean[] P005731_n493TBM36_UPD_USER_ID ;
   private java.util.Date[] P005731_A492TBM36_UPD_DATETIME ;
   private boolean[] P005731_n492TBM36_UPD_DATETIME ;
   private String[] P005731_A491TBM36_CRT_PROG_NM ;
   private boolean[] P005731_n491TBM36_CRT_PROG_NM ;
   private String[] P005731_A490TBM36_CRT_USER_ID ;
   private boolean[] P005731_n490TBM36_CRT_USER_ID ;
   private java.util.Date[] P005731_A489TBM36_CRT_DATETIME ;
   private boolean[] P005731_n489TBM36_CRT_DATETIME ;
   private long[] P005733_A246TBM33_STUDY_ID ;
   private short[] P005733_A247TBM33_CRF_ID ;
   private short[] P005733_A248TBM33_COND_NO ;
   private String[] P005733_A379TBM33_COND_NM ;
   private boolean[] P005733_n379TBM33_COND_NM ;
   private String[] P005733_A249TBM33_EXPRESSION ;
   private boolean[] P005733_n249TBM33_EXPRESSION ;
   private String[] P005733_A380TBM33_COND_DIV ;
   private boolean[] P005733_n380TBM33_COND_DIV ;
   private String[] P005733_A381TBM33_CRF_ITEM_CD ;
   private boolean[] P005733_n381TBM33_CRF_ITEM_CD ;
   private byte[] P005733_A250TBM33_PRIOR_NO ;
   private boolean[] P005733_n250TBM33_PRIOR_NO ;
   private String[] P005733_A382TBM33_ERR_DIV ;
   private boolean[] P005733_n382TBM33_ERR_DIV ;
   private String[] P005733_A383TBM33_ERR_MSG ;
   private boolean[] P005733_n383TBM33_ERR_MSG ;
   private String[] P005733_A554TBM33_ENABLED_FLG ;
   private boolean[] P005733_n554TBM33_ENABLED_FLG ;
   private String[] P005733_A610TBM33_REQUIRED_INPUT_FLG ;
   private boolean[] P005733_n610TBM33_REQUIRED_INPUT_FLG ;
   private String[] P005733_A611TBM33_NUMERIC_RANGE_FLG ;
   private boolean[] P005733_n611TBM33_NUMERIC_RANGE_FLG ;
   private String[] P005733_A251TBM33_DEL_FLG ;
   private boolean[] P005733_n251TBM33_DEL_FLG ;
   private long[] P005733_A258TBM33_UPD_CNT ;
   private boolean[] P005733_n258TBM33_UPD_CNT ;
   private String[] P005733_A257TBM33_UPD_PROG_NM ;
   private boolean[] P005733_n257TBM33_UPD_PROG_NM ;
   private String[] P005733_A256TBM33_UPD_USER_ID ;
   private boolean[] P005733_n256TBM33_UPD_USER_ID ;
   private java.util.Date[] P005733_A255TBM33_UPD_DATETIME ;
   private boolean[] P005733_n255TBM33_UPD_DATETIME ;
   private String[] P005733_A254TBM33_CRT_PROG_NM ;
   private boolean[] P005733_n254TBM33_CRT_PROG_NM ;
   private String[] P005733_A253TBM33_CRT_USER_ID ;
   private boolean[] P005733_n253TBM33_CRT_USER_ID ;
   private java.util.Date[] P005733_A252TBM33_CRT_DATETIME ;
   private boolean[] P005733_n252TBM33_CRT_DATETIME ;
   private long[] P005735_A231TBM32_STUDY_ID ;
   private short[] P005735_A232TBM32_CRF_ID ;
   private String[] P005735_A233TBM32_CRF_ITEM_CD ;
   private String[] P005735_A234TBM32_CRF_ITEM_NM ;
   private boolean[] P005735_n234TBM32_CRF_ITEM_NM ;
   private String[] P005735_A235TBM32_CRF_ITEM_DIV ;
   private boolean[] P005735_n235TBM32_CRF_ITEM_DIV ;
   private String[] P005735_A236TBM32_CRF_ITEM_GRP_CD ;
   private boolean[] P005735_n236TBM32_CRF_ITEM_GRP_CD ;
   private short[] P005735_A384TBM32_CRF_ITEM_GRP_ORDER ;
   private boolean[] P005735_n384TBM32_CRF_ITEM_GRP_ORDER ;
   private short[] P005735_A385TBM32_LOCATION_X ;
   private boolean[] P005735_n385TBM32_LOCATION_X ;
   private short[] P005735_A386TBM32_LOCATION_Y ;
   private boolean[] P005735_n386TBM32_LOCATION_Y ;
   private short[] P005735_A387TBM32_LOCATION_X2 ;
   private boolean[] P005735_n387TBM32_LOCATION_X2 ;
   private short[] P005735_A388TBM32_LOCATION_Y2 ;
   private boolean[] P005735_n388TBM32_LOCATION_Y2 ;
   private String[] P005735_A389TBM32_TEXT_ALIGN_DIV ;
   private boolean[] P005735_n389TBM32_TEXT_ALIGN_DIV ;
   private byte[] P005735_A393TBM32_TEXT_MAXROWS ;
   private boolean[] P005735_n393TBM32_TEXT_MAXROWS ;
   private short[] P005735_A394TBM32_TEXT_MAXLENGTH ;
   private boolean[] P005735_n394TBM32_TEXT_MAXLENGTH ;
   private byte[] P005735_A395TBM32_DECIMAL_DIGITS ;
   private boolean[] P005735_n395TBM32_DECIMAL_DIGITS ;
   private String[] P005735_A399TBM32_CHK_TRUE_INNER_VALUE ;
   private boolean[] P005735_n399TBM32_CHK_TRUE_INNER_VALUE ;
   private String[] P005735_A400TBM32_CHK_FALSE_INNER_VALUE ;
   private boolean[] P005735_n400TBM32_CHK_FALSE_INNER_VALUE ;
   private String[] P005735_A404TBM32_FIXED_VALUE ;
   private boolean[] P005735_n404TBM32_FIXED_VALUE ;
   private String[] P005735_A402TBM32_LIST_CD ;
   private boolean[] P005735_n402TBM32_LIST_CD ;
   private String[] P005735_A403TBM32_IMAGE_CD ;
   private boolean[] P005735_n403TBM32_IMAGE_CD ;
   private String[] P005735_A401TBM32_TEXT ;
   private boolean[] P005735_n401TBM32_TEXT ;
   private byte[] P005735_A390TBM32_FONT_SIZE ;
   private boolean[] P005735_n390TBM32_FONT_SIZE ;
   private String[] P005735_A391TBM32_FONT_UL_FLG ;
   private boolean[] P005735_n391TBM32_FONT_UL_FLG ;
   private long[] P005735_A392TBM32_FONT_COLOR_DIV ;
   private boolean[] P005735_n392TBM32_FONT_COLOR_DIV ;
   private byte[] P005735_A398TBM32_LINE_SIZE_DIV ;
   private boolean[] P005735_n398TBM32_LINE_SIZE_DIV ;
   private long[] P005735_A603TBM32_LINE_COLOR_DIV ;
   private boolean[] P005735_n603TBM32_LINE_COLOR_DIV ;
   private String[] P005735_A396TBM32_LINE_START_POINT_DIV ;
   private boolean[] P005735_n396TBM32_LINE_START_POINT_DIV ;
   private String[] P005735_A397TBM32_LINE_END_POINT_DIV ;
   private boolean[] P005735_n397TBM32_LINE_END_POINT_DIV ;
   private short[] P005735_A604TBM32_LINE_ANGLE ;
   private boolean[] P005735_n604TBM32_LINE_ANGLE ;
   private byte[] P005735_A552TBM32_AUTH_LVL_MIN ;
   private boolean[] P005735_n552TBM32_AUTH_LVL_MIN ;
   private short[] P005735_A553TBM32_ZORDER ;
   private boolean[] P005735_n553TBM32_ZORDER ;
   private short[] P005735_A605TBM32_TAB_ORDER ;
   private boolean[] P005735_n605TBM32_TAB_ORDER ;
   private String[] P005735_A606TBM32_TABSTOP_FLG ;
   private boolean[] P005735_n606TBM32_TABSTOP_FLG ;
   private String[] P005735_A607TBM32_REQUIRED_INPUT_FLG ;
   private boolean[] P005735_n607TBM32_REQUIRED_INPUT_FLG ;
   private String[] P005735_A608TBM32_MIN_VALUE ;
   private boolean[] P005735_n608TBM32_MIN_VALUE ;
   private String[] P005735_A609TBM32_MAX_VALUE ;
   private boolean[] P005735_n609TBM32_MAX_VALUE ;
   private String[] P005735_A237TBM32_CRF_ITEM_NOTE ;
   private boolean[] P005735_n237TBM32_CRF_ITEM_NOTE ;
   private short[] P005735_A746TBM32_REF_CRF_ID ;
   private boolean[] P005735_n746TBM32_REF_CRF_ID ;
   private String[] P005735_A747TBM32_REF_CRF_ITEM_CD ;
   private boolean[] P005735_n747TBM32_REF_CRF_ITEM_CD ;
   private String[] P005735_A238TBM32_DEL_FLG ;
   private boolean[] P005735_n238TBM32_DEL_FLG ;
   private long[] P005735_A245TBM32_UPD_CNT ;
   private boolean[] P005735_n245TBM32_UPD_CNT ;
   private String[] P005735_A244TBM32_UPD_PROG_NM ;
   private boolean[] P005735_n244TBM32_UPD_PROG_NM ;
   private String[] P005735_A243TBM32_UPD_USER_ID ;
   private boolean[] P005735_n243TBM32_UPD_USER_ID ;
   private java.util.Date[] P005735_A242TBM32_UPD_DATETIME ;
   private boolean[] P005735_n242TBM32_UPD_DATETIME ;
   private String[] P005735_A241TBM32_CRT_PROG_NM ;
   private boolean[] P005735_n241TBM32_CRT_PROG_NM ;
   private String[] P005735_A240TBM32_CRT_USER_ID ;
   private boolean[] P005735_n240TBM32_CRT_USER_ID ;
   private java.util.Date[] P005735_A239TBM32_CRT_DATETIME ;
   private boolean[] P005735_n239TBM32_CRT_DATETIME ;
   private long[] P005737_A459TBM34_STUDY_ID ;
   private short[] P005737_A460TBM34_CRF_ID ;
   private String[] P005737_A461TBM34_STYDY_AUTH_CD ;
   private String[] P005737_A462TBM34_DISPLAY_FLG ;
   private boolean[] P005737_n462TBM34_DISPLAY_FLG ;
   private String[] P005737_A463TBM34_DEL_FLG ;
   private boolean[] P005737_n463TBM34_DEL_FLG ;
   private long[] P005737_A470TBM34_UPD_CNT ;
   private boolean[] P005737_n470TBM34_UPD_CNT ;
   private String[] P005737_A469TBM34_UPD_PROG_NM ;
   private boolean[] P005737_n469TBM34_UPD_PROG_NM ;
   private String[] P005737_A468TBM34_UPD_USER_ID ;
   private boolean[] P005737_n468TBM34_UPD_USER_ID ;
   private java.util.Date[] P005737_A467TBM34_UPD_DATETIME ;
   private boolean[] P005737_n467TBM34_UPD_DATETIME ;
   private String[] P005737_A466TBM34_CRT_PROG_NM ;
   private boolean[] P005737_n466TBM34_CRT_PROG_NM ;
   private String[] P005737_A465TBM34_CRT_USER_ID ;
   private boolean[] P005737_n465TBM34_CRT_USER_ID ;
   private java.util.Date[] P005737_A464TBM34_CRT_DATETIME ;
   private boolean[] P005737_n464TBM34_CRT_DATETIME ;
   private long[] P005739_A217TBM31_STUDY_ID ;
   private short[] P005739_A218TBM31_CRF_ID ;
   private String[] P005739_A219TBM31_CRF_NM ;
   private boolean[] P005739_n219TBM31_CRF_NM ;
   private String[] P005739_A550TBM31_CRF_SNM ;
   private boolean[] P005739_n550TBM31_CRF_SNM ;
   private short[] P005739_A220TBM31_GRID_SIZE ;
   private boolean[] P005739_n220TBM31_GRID_SIZE ;
   private int[] P005739_A221TBM31_ORDER ;
   private boolean[] P005739_n221TBM31_ORDER ;
   private short[] P005739_A405TBM31_DEF_VISIT_NO ;
   private boolean[] P005739_n405TBM31_DEF_VISIT_NO ;
   private String[] P005739_A406TBM31_DEF_DOMAIN_CD ;
   private boolean[] P005739_n406TBM31_DEF_DOMAIN_CD ;
   private String[] P005739_A551TBM31_STATUS ;
   private boolean[] P005739_n551TBM31_STATUS ;
   private String[] P005739_A222TBM31_NOTE ;
   private boolean[] P005739_n222TBM31_NOTE ;
   private String[] P005739_A223TBM31_DEL_FLG ;
   private boolean[] P005739_n223TBM31_DEL_FLG ;
   private long[] P005739_A230TBM31_UPD_CNT ;
   private boolean[] P005739_n230TBM31_UPD_CNT ;
   private String[] P005739_A229TBM31_UPD_PROG_NM ;
   private boolean[] P005739_n229TBM31_UPD_PROG_NM ;
   private String[] P005739_A228TBM31_UPD_USER_ID ;
   private boolean[] P005739_n228TBM31_UPD_USER_ID ;
   private java.util.Date[] P005739_A227TBM31_UPD_DATETIME ;
   private boolean[] P005739_n227TBM31_UPD_DATETIME ;
   private String[] P005739_A226TBM31_CRT_PROG_NM ;
   private boolean[] P005739_n226TBM31_CRT_PROG_NM ;
   private String[] P005739_A225TBM31_CRT_USER_ID ;
   private boolean[] P005739_n225TBM31_CRT_USER_ID ;
   private java.util.Date[] P005739_A224TBM31_CRT_DATETIME ;
   private boolean[] P005739_n224TBM31_CRT_DATETIME ;
   private GxObjectCollection AV12W_ITEMS ;
   private SdtTBM21_STUDY AV9P_BC_STUDY ;
   private SdtA_LOGIN_SDT AV10W_A_LOGIN_SDT ;
   private SdtA_LOGIN_SDT GXv_SdtA_LOGIN_SDT3[] ;
}

final  class b402_pc19_study_del__default extends DataStoreHelperBase implements ILocalDataStoreHelper
{
   public Cursor[] getCursors( )
   {
      return new Cursor[] {
          new UpdateCursor("P00572", "DELETE FROM `TBT13_CRF_RES_HIS`  WHERE `TBT13_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00573", "DELETE FROM `TBT12_CRF_RESULT`  WHERE `TBT12_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00574", "DELETE FROM `TBT11_CRF_HISTORY`  WHERE `TBT11_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00575", "DELETE FROM `TBT15_CRF_MEMO_LOC`  WHERE `TBT15_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00576", "DELETE FROM `TBT14_CRF_MEMO`  WHERE `TBT14_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00577", "DELETE FROM `TBT02_CRF`  WHERE `TBT02_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new UpdateCursor("P00578", "DELETE FROM `TBT01_SUBJECT`  WHERE `TBT01_STUDY_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P00579", "SELECT `TBM35_STUDY_ID`, `TBM35_CRF_ID`, `TBM35_CRF_ITEM_CD`, `TBM35_STUDY_AUTH_CD`, `TBM35_DISPLAY_FLG`, `TBM35_DEL_FLG`, `TBM35_UPD_CNT`, `TBM35_UPD_PROG_NM`, `TBM35_UPD_USER_ID`, `TBM35_UPD_DATETIME`, `TBM35_CRT_PROG_NM`, `TBM35_CRT_USER_ID`, `TBM35_CRT_DATETIME` FROM `TBM35_CRF_ITEM_AUTH` WHERE `TBM35_STUDY_ID` = ? ORDER BY `TBM35_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005710", "DELETE FROM `TBM35_CRF_ITEM_AUTH`  WHERE `TBM35_STUDY_ID` = ? AND `TBM35_CRF_ID` = ? AND `TBM35_CRF_ITEM_CD` = ? AND `TBM35_STUDY_AUTH_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005711", "SELECT `TBM41_STUDY_ID`, `TBM41_CRF_ID`, `TBM41_CRF_ITEM_GRP_DIV`, `TBM41_CRF_ITEM_GRP_CD`, `TBM41_NCM_METADATA_ID`, `TBM41_DEL_FLG`, `TBM41_UPD_CNT`, `TBM41_UPD_PROG_NM`, `TBM41_UPD_USER_ID`, `TBM41_UPD_DATETIME`, `TBM41_CRT_PROG_NM`, `TBM41_CRT_USER_ID`, `TBM41_CRT_DATETIME` FROM `TBM41_CRF_NCM_MAP` WHERE `TBM41_STUDY_ID` = ? ORDER BY `TBM41_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005712", "DELETE FROM `TBM41_CRF_NCM_MAP`  WHERE `TBM41_STUDY_ID` = ? AND `TBM41_CRF_ID` = ? AND `TBM41_CRF_ITEM_GRP_DIV` = ? AND `TBM41_CRF_ITEM_GRP_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005713", "SELECT `TBM43_STUDY_ID`, `TBM43_DOM_CD`, `TBM43_DOM_VAR_NM`, `TBM43_VAR_DESC`, `TBM43_SDTM_FLG`, `TBM43_CDASH_FLG`, `TBM43_INPUT_TYPE_DIV`, `TBM43_REQUIRED_FLG`, `TBM43_SAS_FIELD_NM`, `TBM43_ODM_DATA_TYPE`, `TBM43_NOTE`, `TBM43_ORDER`, `TBM43_DEL_FLG`, `TBM43_UPD_CNT`, `TBM43_UPD_PROG_NM`, `TBM43_UPD_USER_ID`, `TBM43_UPD_DATETIME`, `TBM43_CRT_PROG_NM`, `TBM43_CRT_USER_ID`, `TBM43_CRT_DATETIME` FROM `TBM43_STUDY_CDISC_ITEM` WHERE `TBM43_STUDY_ID` = ? ORDER BY `TBM43_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005714", "DELETE FROM `TBM43_STUDY_CDISC_ITEM`  WHERE `TBM43_STUDY_ID` = ? AND `TBM43_DOM_CD` = ? AND `TBM43_DOM_VAR_NM` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005715", "SELECT `TBM42_STUDY_ID`, `TBM42_DOM_CD`, `TBM42_DOM_ENM`, `TBM42_DOM_JNM`, `TBM42_DOM_GRP_NM`, `TBM42_NOTE`, `TBM42_ORDER`, `TBM42_DEL_FLG`, `TBM42_UPD_CNT`, `TBM42_UPD_PROG_NM`, `TBM42_UPD_USER_ID`, `TBM42_UPD_DATETIME`, `TBM42_CRT_PROG_NM`, `TBM42_CRT_USER_ID`, `TBM42_CRT_DATETIME` FROM `TBM42_STUDY_CDISC_DOMAIN` WHERE `TBM42_STUDY_ID` = ? ORDER BY `TBM42_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005716", "DELETE FROM `TBM42_STUDY_CDISC_DOMAIN`  WHERE `TBM42_STUDY_ID` = ? AND `TBM42_DOM_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005717", "SELECT `TBM37_STUDY_ID`, `TBM37_CRF_ID`, `TBM37_CRF_ITEM_GRP_DIV`, `TBM37_CRF_ITEM_GRP_CD`, `TBM37_VISIT_NO`, `TBM37_DOM_CD`, `TBM37_DOM_VAR_NM`, `TBM37_DOM_ITM_GRP_OID`, `TBM37_DOM_ITM_GRP_ATTR_SEQ`, `TBM37_DOM_ITM_GRP_ROWNO`, `TBM37_DEL_FLG`, `TBM37_UPD_CNT`, `TBM37_UPD_PROG_NM`, `TBM37_UPD_USER_ID`, `TBM37_UPD_DATETIME`, `TBM37_CRT_PROG_NM`, `TBM37_CRT_USER_ID`, `TBM37_CRT_DATETIME` FROM `TBM37_CRF_DOM_MAP` WHERE `TBM37_STUDY_ID` = ? ORDER BY `TBM37_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005718", "DELETE FROM `TBM37_CRF_DOM_MAP`  WHERE `TBM37_STUDY_ID` = ? AND `TBM37_CRF_ID` = ? AND `TBM37_CRF_ITEM_GRP_DIV` = ? AND `TBM37_CRF_ITEM_GRP_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005719", "SELECT `TBM11_STUDY_ID`, `TBM11_IMAGE_CD`, `TBM11_IMAGE_NM`, `TBM11_FILE_NAME`, `TBM11_DEL_FLG`, `TBM11_UPD_CNT`, `TBM11_UPD_PROG_NM`, `TBM11_UPD_USER_ID`, `TBM11_UPD_DATETIME`, `TBM11_CRT_PROG_NM`, `TBM11_CRT_USER_ID`, `TBM11_CRT_DATETIME` FROM `TBM11_IMAGE` WHERE `TBM11_STUDY_ID` = ? ORDER BY `TBM11_IMAGE_CD`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005720", "DELETE FROM `TBM11_IMAGE`  WHERE `TBM11_IMAGE_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005721", "SELECT `TBM24_STUDY_ID`, `TBM24_DOM_CD`, `TBM24_DOM_VAR_NM`, `TBM24_DOM_ITM_GRP_OID`, `TBM24_DOM_ITM_GRP_ATTR_SEQ`, `TBM24_DOM_ITM_GRP_ROWNO`, `TBM24_CRF_ITEM_NM`, `TBM24_CRF_ITEM_DIV`, `TBM24_IDENTIFICATION_CD`, `TBM24_TEXT_MAXLENGTH`, `TBM24_TEXT_MAXROWS`, `TBM24_DECIMAL_DIGITS`, `TBM24_TEXT`, `TBM24_FIXED_VALUE`, `TBM24_CHK_FALSE_INNER_VALUE`, `TBM24_REQUIRED_INPUT_FLG`, `TBM24_MIN_VALUE`, `TBM24_MAX_VALUE`, `TBM24_ORDER`, `TBM24_DEL_FLG`, `TBM24_UPD_CNT`, `TBM24_UPD_PROG_NM`, `TBM24_UPD_USER_ID`, `TBM24_UPD_DATETIME`, `TBM24_CRT_PROG_NM`, `TBM24_CRT_USER_ID`, `TBM24_CRT_DATETIME` FROM `TBM24_MAP_ITEM` WHERE `TBM24_STUDY_ID` = ? ORDER BY `TBM24_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005722", "DELETE FROM `TBM24_MAP_ITEM`  WHERE `TBM24_STUDY_ID` = ? AND `TBM24_DOM_CD` = ? AND `TBM24_DOM_VAR_NM` = ? AND `TBM24_CRF_ITEM_DIV` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005723", "SELECT `TBM23_STUDY_ID`, `TBM23_USER_ID`, `TBM23_STYDY_AUTH_CD`, `TBM23_DEL_FLG`, `TBM23_UPD_CNT`, `TBM23_UPD_PROG_NM`, `TBM23_UPD_USER_ID`, `TBM23_UPD_DATETIME`, `TBM23_CRT_PROG_NM`, `TBM23_CRT_USER_ID`, `TBM23_CRT_DATETIME` FROM `TBM23_STUDY_STAFF` WHERE `TBM23_STUDY_ID` = ? ORDER BY `TBM23_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005724", "DELETE FROM `TBM23_STUDY_STAFF`  WHERE `TBM23_STUDY_ID` = ? AND `TBM23_USER_ID` = ? AND `TBM23_STYDY_AUTH_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005725", "SELECT `TBM22_STUDY_ID`, `TBM22_SITE_ID`, `TBM22_DEL_FLG`, `TBM22_UPD_CNT`, `TBM22_UPD_PROG_NM`, `TBM22_UPD_USER_ID`, `TBM22_UPD_DATETIME`, `TBM22_CRT_PROG_NM`, `TBM22_CRT_USER_ID`, `TBM22_CRT_DATETIME` FROM `TBM22_STUDY_SITE` WHERE `TBM22_STUDY_ID` = ? ORDER BY `TBM22_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005726", "DELETE FROM `TBM22_STUDY_SITE`  WHERE `TBM22_STUDY_ID` = ? AND `TBM22_SITE_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005727", "SELECT `TBM26_STUDY_ID`, `TBM26_LIST_CD`, `TBM26_LIST_ITEM_NO`, `TBM26_LIST_ITEM_NAME`, `TBM26_INNER_VALUE`, `TBM26_DEL_FLG`, `TBM26_UPD_CNT`, `TBM26_UPD_PROG_NM`, `TBM26_UPD_USER_ID`, `TBM26_UPD_DATETIME`, `TBM26_CRT_PROG_NM`, `TBM26_CRT_USER_ID`, `TBM26_CRT_DATETIME` FROM `TBM26_SEL_LIST_ITEM` WHERE `TBM26_STUDY_ID` = ? ORDER BY `TBM26_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005728", "DELETE FROM `TBM26_SEL_LIST_ITEM`  WHERE `TBM26_STUDY_ID` = ? AND `TBM26_LIST_CD` = ? AND `TBM26_LIST_ITEM_NO` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005729", "SELECT `TBM25_STUDY_ID`, `TBM25_LIST_CD`, `TBM25_LIST_NM`, `TBM25_DEL_FLG`, `TBM25_UPD_CNT`, `TBM25_UPD_PROG_NM`, `TBM25_UPD_USER_ID`, `TBM25_UPD_DATETIME`, `TBM25_CRT_PROG_NM`, `TBM25_CRT_USER_ID`, `TBM25_CRT_DATETIME` FROM `TBM25_SEL_LIST` WHERE `TBM25_STUDY_ID` = ? ORDER BY `TBM25_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005730", "DELETE FROM `TBM25_SEL_LIST`  WHERE `TBM25_STUDY_ID` = ? AND `TBM25_LIST_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005731", "SELECT `TBM36_STUDY_ID`, `TBM36_CRF_ID`, `TBM36_COND_NO`, `TBM36_SELECT_CRF_ID`, `TBM36_DEL_FLG`, `TBM36_UPD_CNT`, `TBM36_UPD_PROG_NM`, `TBM36_UPD_USER_ID`, `TBM36_UPD_DATETIME`, `TBM36_CRT_PROG_NM`, `TBM36_CRT_USER_ID`, `TBM36_CRT_DATETIME` FROM `TBM36_CRF_SELECT` WHERE `TBM36_STUDY_ID` = ? ORDER BY `TBM36_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005732", "DELETE FROM `TBM36_CRF_SELECT`  WHERE `TBM36_STUDY_ID` = ? AND `TBM36_CRF_ID` = ? AND `TBM36_COND_NO` = ? AND `TBM36_SELECT_CRF_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005733", "SELECT `TBM33_STUDY_ID`, `TBM33_CRF_ID`, `TBM33_COND_NO`, `TBM33_COND_NM`, `TBM33_EXPRESSION`, `TBM33_COND_DIV`, `TBM33_CRF_ITEM_CD`, `TBM33_PRIOR_NO`, `TBM33_ERR_DIV`, `TBM33_ERR_MSG`, `TBM33_ENABLED_FLG`, `TBM33_REQUIRED_INPUT_FLG`, `TBM33_NUMERIC_RANGE_FLG`, `TBM33_DEL_FLG`, `TBM33_UPD_CNT`, `TBM33_UPD_PROG_NM`, `TBM33_UPD_USER_ID`, `TBM33_UPD_DATETIME`, `TBM33_CRT_PROG_NM`, `TBM33_CRT_USER_ID`, `TBM33_CRT_DATETIME` FROM `TBM33_CRF_COND` WHERE `TBM33_STUDY_ID` = ? ORDER BY `TBM33_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005734", "DELETE FROM `TBM33_CRF_COND`  WHERE `TBM33_STUDY_ID` = ? AND `TBM33_CRF_ID` = ? AND `TBM33_COND_NO` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005735", "SELECT `TBM32_STUDY_ID`, `TBM32_CRF_ID`, `TBM32_CRF_ITEM_CD`, `TBM32_CRF_ITEM_NM`, `TBM32_CRF_ITEM_DIV`, `TBM32_CRF_ITEM_GRP_CD`, `TBM32_CRF_ITEM_GRP_ORDER`, `TBM32_LOCATION_X`, `TBM32_LOCATION_Y`, `TBM32_LOCATION_X2`, `TBM32_LOCATION_Y2`, `TBM32_TEXT_ALIGN_DIV`, `TBM32_TEXT_MAXROWS`, `TBM32_TEXT_MAXLENGTH`, `TBM32_DECIMAL_DIGITS`, `TBM32_CHK_TRUE_INNER_VALUE`, `TBM32_CHK_FALSE_INNER_VALUE`, `TBM32_FIXED_VALUE`, `TBM32_LIST_CD`, `TBM32_IMAGE_CD`, `TBM32_TEXT`, `TBM32_FONT_SIZE`, `TBM32_FONT_UL_FLG`, `TBM32_FONT_COLOR_DIV`, `TBM32_LINE_SIZE_DIV`, `TBM32_LINE_COLOR_DIV`, `TBM32_LINE_START_POINT_DIV`, `TBM32_LINE_END_POINT_DIV`, `TBM32_LINE_ANGLE`, `TBM32_AUTH_LVL_MIN`, `TBM32_ZORDER`, `TBM32_TAB_ORDER`, `TBM32_TABSTOP_FLG`, `TBM32_REQUIRED_INPUT_FLG`, `TBM32_MIN_VALUE`, `TBM32_MAX_VALUE`, `TBM32_CRF_ITEM_NOTE`, `TBM32_REF_CRF_ID`, `TBM32_REF_CRF_ITEM_CD`, `TBM32_DEL_FLG`, `TBM32_UPD_CNT`, `TBM32_UPD_PROG_NM`, `TBM32_UPD_USER_ID`, `TBM32_UPD_DATETIME`, `TBM32_CRT_PROG_NM`, `TBM32_CRT_USER_ID`, `TBM32_CRT_DATETIME` FROM `TBM32_CRF_ITEM` WHERE `TBM32_STUDY_ID` = ? ORDER BY `TBM32_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005736", "DELETE FROM `TBM32_CRF_ITEM`  WHERE `TBM32_STUDY_ID` = ? AND `TBM32_CRF_ID` = ? AND `TBM32_CRF_ITEM_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005737", "SELECT `TBM34_STUDY_ID`, `TBM34_CRF_ID`, `TBM34_STYDY_AUTH_CD`, `TBM34_DISPLAY_FLG`, `TBM34_DEL_FLG`, `TBM34_UPD_CNT`, `TBM34_UPD_PROG_NM`, `TBM34_UPD_USER_ID`, `TBM34_UPD_DATETIME`, `TBM34_CRT_PROG_NM`, `TBM34_CRT_USER_ID`, `TBM34_CRT_DATETIME` FROM `TBM34_CRF_AUTH` WHERE `TBM34_STUDY_ID` = ? ORDER BY `TBM34_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005738", "DELETE FROM `TBM34_CRF_AUTH`  WHERE `TBM34_STUDY_ID` = ? AND `TBM34_CRF_ID` = ? AND `TBM34_STYDY_AUTH_CD` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
         ,new ForEachCursor("P005739", "SELECT `TBM31_STUDY_ID`, `TBM31_CRF_ID`, `TBM31_CRF_NM`, `TBM31_CRF_SNM`, `TBM31_GRID_SIZE`, `TBM31_ORDER`, `TBM31_DEF_VISIT_NO`, `TBM31_DEF_DOMAIN_CD`, `TBM31_STATUS`, `TBM31_NOTE`, `TBM31_DEL_FLG`, `TBM31_UPD_CNT`, `TBM31_UPD_PROG_NM`, `TBM31_UPD_USER_ID`, `TBM31_UPD_DATETIME`, `TBM31_CRT_PROG_NM`, `TBM31_CRT_USER_ID`, `TBM31_CRT_DATETIME` FROM `TBM31_CRF` WHERE `TBM31_STUDY_ID` = ? ORDER BY `TBM31_STUDY_ID`  FOR UPDATE ",true, GX_NOMASK + GX_MASKLOOPLOCK, false, this,1,0,false )
         ,new UpdateCursor("P005740", "DELETE FROM `TBM31_CRF`  WHERE `TBM31_STUDY_ID` = ? AND `TBM31_CRF_ID` = ?", GX_NOMASK + GX_MASKLOOPLOCK)
      };
   }

   public void getResults( int cursor ,
                           IFieldGetter rslt ,
                           Object[] buf ) throws SQLException
   {
      switch ( cursor )
      {
            case 7 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((String[]) buf[4])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((long[]) buf[8])[0] = rslt.getLong(7) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[14])[0] = rslt.getGXDateTime(10) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((String[]) buf[18])[0] = rslt.getVarchar(12) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[20])[0] = rslt.getGXDateTime(13) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               break;
            case 9 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((String[]) buf[4])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((long[]) buf[8])[0] = rslt.getLong(7) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[14])[0] = rslt.getGXDateTime(10) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((String[]) buf[18])[0] = rslt.getVarchar(12) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[20])[0] = rslt.getGXDateTime(13) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               break;
            case 11 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((String[]) buf[9])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((String[]) buf[11])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((String[]) buf[13])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((String[]) buf[15])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((String[]) buf[17])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((int[]) buf[19])[0] = rslt.getInt(12) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               ((String[]) buf[21])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[22])[0] = rslt.wasNull();
               ((long[]) buf[23])[0] = rslt.getLong(14) ;
               ((boolean[]) buf[24])[0] = rslt.wasNull();
               ((String[]) buf[25])[0] = rslt.getVarchar(15) ;
               ((boolean[]) buf[26])[0] = rslt.wasNull();
               ((String[]) buf[27])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[28])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[29])[0] = rslt.getGXDateTime(17) ;
               ((boolean[]) buf[30])[0] = rslt.wasNull();
               ((String[]) buf[31])[0] = rslt.getVarchar(18) ;
               ((boolean[]) buf[32])[0] = rslt.wasNull();
               ((String[]) buf[33])[0] = rslt.getVarchar(19) ;
               ((boolean[]) buf[34])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[35])[0] = rslt.getGXDateTime(20) ;
               ((boolean[]) buf[36])[0] = rslt.wasNull();
               break;
            case 13 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[3])[0] = rslt.wasNull();
               ((String[]) buf[4])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((String[]) buf[8])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((int[]) buf[10])[0] = rslt.getInt(7) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((long[]) buf[14])[0] = rslt.getLong(9) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((String[]) buf[18])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[20])[0] = rslt.getGXDateTime(12) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               ((String[]) buf[22])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[23])[0] = rslt.wasNull();
               ((String[]) buf[24])[0] = rslt.getVarchar(14) ;
               ((boolean[]) buf[25])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[26])[0] = rslt.getGXDateTime(15) ;
               ((boolean[]) buf[27])[0] = rslt.wasNull();
               break;
            case 15 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((short[]) buf[4])[0] = rslt.getShort(5) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((String[]) buf[8])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((short[]) buf[12])[0] = rslt.getShort(9) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((short[]) buf[14])[0] = rslt.getShort(10) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((long[]) buf[18])[0] = rslt.getLong(12) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((String[]) buf[20])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               ((String[]) buf[22])[0] = rslt.getVarchar(14) ;
               ((boolean[]) buf[23])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[24])[0] = rslt.getGXDateTime(15) ;
               ((boolean[]) buf[25])[0] = rslt.wasNull();
               ((String[]) buf[26])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[27])[0] = rslt.wasNull();
               ((String[]) buf[28])[0] = rslt.getVarchar(17) ;
               ((boolean[]) buf[29])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[30])[0] = rslt.getGXDateTime(18) ;
               ((boolean[]) buf[31])[0] = rslt.wasNull();
               break;
            case 17 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((boolean[]) buf[1])[0] = rslt.wasNull();
               ((String[]) buf[2])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((long[]) buf[9])[0] = rslt.getLong(6) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((String[]) buf[11])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((String[]) buf[13])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[15])[0] = rslt.getGXDateTime(9) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((String[]) buf[17])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((String[]) buf[19])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[21])[0] = rslt.getGXDateTime(12) ;
               ((boolean[]) buf[22])[0] = rslt.wasNull();
               break;
            case 19 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((short[]) buf[5])[0] = rslt.getShort(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((short[]) buf[7])[0] = rslt.getShort(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((String[]) buf[9])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((String[]) buf[11])[0] = rslt.getVarchar(8) ;
               ((String[]) buf[12])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((short[]) buf[14])[0] = rslt.getShort(10) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((byte[]) buf[16])[0] = rslt.getByte(11) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((byte[]) buf[18])[0] = rslt.getByte(12) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((String[]) buf[20])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               ((String[]) buf[22])[0] = rslt.getVarchar(14) ;
               ((boolean[]) buf[23])[0] = rslt.wasNull();
               ((String[]) buf[24])[0] = rslt.getVarchar(15) ;
               ((boolean[]) buf[25])[0] = rslt.wasNull();
               ((String[]) buf[26])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[27])[0] = rslt.wasNull();
               ((String[]) buf[28])[0] = rslt.getVarchar(17) ;
               ((boolean[]) buf[29])[0] = rslt.wasNull();
               ((String[]) buf[30])[0] = rslt.getVarchar(18) ;
               ((boolean[]) buf[31])[0] = rslt.wasNull();
               ((int[]) buf[32])[0] = rslt.getInt(19) ;
               ((boolean[]) buf[33])[0] = rslt.wasNull();
               ((String[]) buf[34])[0] = rslt.getVarchar(20) ;
               ((boolean[]) buf[35])[0] = rslt.wasNull();
               ((long[]) buf[36])[0] = rslt.getLong(21) ;
               ((boolean[]) buf[37])[0] = rslt.wasNull();
               ((String[]) buf[38])[0] = rslt.getVarchar(22) ;
               ((boolean[]) buf[39])[0] = rslt.wasNull();
               ((String[]) buf[40])[0] = rslt.getVarchar(23) ;
               ((boolean[]) buf[41])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[42])[0] = rslt.getGXDateTime(24) ;
               ((boolean[]) buf[43])[0] = rslt.wasNull();
               ((String[]) buf[44])[0] = rslt.getVarchar(25) ;
               ((boolean[]) buf[45])[0] = rslt.wasNull();
               ((String[]) buf[46])[0] = rslt.getVarchar(26) ;
               ((boolean[]) buf[47])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[48])[0] = rslt.getGXDateTime(27) ;
               ((boolean[]) buf[49])[0] = rslt.wasNull();
               break;
            case 21 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((long[]) buf[5])[0] = rslt.getLong(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((String[]) buf[9])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[11])[0] = rslt.getGXDateTime(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((String[]) buf[13])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((String[]) buf[15])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[17])[0] = rslt.getGXDateTime(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               break;
            case 23 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[3])[0] = rslt.wasNull();
               ((long[]) buf[4])[0] = rslt.getLong(4) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((String[]) buf[6])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((String[]) buf[8])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[10])[0] = rslt.getGXDateTime(7) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((String[]) buf[14])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[16])[0] = rslt.getGXDateTime(10) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               break;
            case 25 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((short[]) buf[2])[0] = rslt.getShort(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((long[]) buf[9])[0] = rslt.getLong(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((String[]) buf[11])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((String[]) buf[13])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[15])[0] = rslt.getGXDateTime(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((String[]) buf[17])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((String[]) buf[19])[0] = rslt.getVarchar(12) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[21])[0] = rslt.getGXDateTime(13) ;
               ((boolean[]) buf[22])[0] = rslt.wasNull();
               break;
            case 27 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((String[]) buf[1])[0] = rslt.getVarchar(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[3])[0] = rslt.wasNull();
               ((String[]) buf[4])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((long[]) buf[6])[0] = rslt.getLong(5) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((String[]) buf[8])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[12])[0] = rslt.getGXDateTime(8) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((String[]) buf[14])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[18])[0] = rslt.getGXDateTime(11) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               break;
            case 29 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((short[]) buf[2])[0] = rslt.getShort(3) ;
               ((short[]) buf[3])[0] = rslt.getShort(4) ;
               ((String[]) buf[4])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((long[]) buf[6])[0] = rslt.getLong(6) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((String[]) buf[8])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((String[]) buf[10])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[12])[0] = rslt.getGXDateTime(9) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((String[]) buf[14])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[18])[0] = rslt.getGXDateTime(12) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               break;
            case 31 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((short[]) buf[2])[0] = rslt.getShort(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((String[]) buf[9])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((byte[]) buf[11])[0] = rslt.getByte(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((String[]) buf[13])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((String[]) buf[15])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((String[]) buf[17])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((String[]) buf[19])[0] = rslt.getVarchar(12) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               ((String[]) buf[21])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[22])[0] = rslt.wasNull();
               ((String[]) buf[23])[0] = rslt.getVarchar(14) ;
               ((boolean[]) buf[24])[0] = rslt.wasNull();
               ((long[]) buf[25])[0] = rslt.getLong(15) ;
               ((boolean[]) buf[26])[0] = rslt.wasNull();
               ((String[]) buf[27])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[28])[0] = rslt.wasNull();
               ((String[]) buf[29])[0] = rslt.getVarchar(17) ;
               ((boolean[]) buf[30])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[31])[0] = rslt.getGXDateTime(18) ;
               ((boolean[]) buf[32])[0] = rslt.wasNull();
               ((String[]) buf[33])[0] = rslt.getVarchar(19) ;
               ((boolean[]) buf[34])[0] = rslt.wasNull();
               ((String[]) buf[35])[0] = rslt.getVarchar(20) ;
               ((boolean[]) buf[36])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[37])[0] = rslt.getGXDateTime(21) ;
               ((boolean[]) buf[38])[0] = rslt.wasNull();
               break;
            case 33 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((String[]) buf[7])[0] = rslt.getVarchar(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((short[]) buf[9])[0] = rslt.getShort(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((short[]) buf[11])[0] = rslt.getShort(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((short[]) buf[13])[0] = rslt.getShort(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((short[]) buf[15])[0] = rslt.getShort(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((short[]) buf[17])[0] = rslt.getShort(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((String[]) buf[19])[0] = rslt.getVarchar(12) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               ((byte[]) buf[21])[0] = rslt.getByte(13) ;
               ((boolean[]) buf[22])[0] = rslt.wasNull();
               ((short[]) buf[23])[0] = rslt.getShort(14) ;
               ((boolean[]) buf[24])[0] = rslt.wasNull();
               ((byte[]) buf[25])[0] = rslt.getByte(15) ;
               ((boolean[]) buf[26])[0] = rslt.wasNull();
               ((String[]) buf[27])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[28])[0] = rslt.wasNull();
               ((String[]) buf[29])[0] = rslt.getVarchar(17) ;
               ((boolean[]) buf[30])[0] = rslt.wasNull();
               ((String[]) buf[31])[0] = rslt.getVarchar(18) ;
               ((boolean[]) buf[32])[0] = rslt.wasNull();
               ((String[]) buf[33])[0] = rslt.getVarchar(19) ;
               ((boolean[]) buf[34])[0] = rslt.wasNull();
               ((String[]) buf[35])[0] = rslt.getVarchar(20) ;
               ((boolean[]) buf[36])[0] = rslt.wasNull();
               ((String[]) buf[37])[0] = rslt.getVarchar(21) ;
               ((boolean[]) buf[38])[0] = rslt.wasNull();
               ((byte[]) buf[39])[0] = rslt.getByte(22) ;
               ((boolean[]) buf[40])[0] = rslt.wasNull();
               ((String[]) buf[41])[0] = rslt.getVarchar(23) ;
               ((boolean[]) buf[42])[0] = rslt.wasNull();
               ((long[]) buf[43])[0] = rslt.getLong(24) ;
               ((boolean[]) buf[44])[0] = rslt.wasNull();
               ((byte[]) buf[45])[0] = rslt.getByte(25) ;
               ((boolean[]) buf[46])[0] = rslt.wasNull();
               ((long[]) buf[47])[0] = rslt.getLong(26) ;
               ((boolean[]) buf[48])[0] = rslt.wasNull();
               ((String[]) buf[49])[0] = rslt.getVarchar(27) ;
               ((boolean[]) buf[50])[0] = rslt.wasNull();
               ((String[]) buf[51])[0] = rslt.getVarchar(28) ;
               ((boolean[]) buf[52])[0] = rslt.wasNull();
               ((short[]) buf[53])[0] = rslt.getShort(29) ;
               ((boolean[]) buf[54])[0] = rslt.wasNull();
               ((byte[]) buf[55])[0] = rslt.getByte(30) ;
               ((boolean[]) buf[56])[0] = rslt.wasNull();
               ((short[]) buf[57])[0] = rslt.getShort(31) ;
               ((boolean[]) buf[58])[0] = rslt.wasNull();
               ((short[]) buf[59])[0] = rslt.getShort(32) ;
               ((boolean[]) buf[60])[0] = rslt.wasNull();
               ((String[]) buf[61])[0] = rslt.getVarchar(33) ;
               ((boolean[]) buf[62])[0] = rslt.wasNull();
               ((String[]) buf[63])[0] = rslt.getVarchar(34) ;
               ((boolean[]) buf[64])[0] = rslt.wasNull();
               ((String[]) buf[65])[0] = rslt.getVarchar(35) ;
               ((boolean[]) buf[66])[0] = rslt.wasNull();
               ((String[]) buf[67])[0] = rslt.getVarchar(36) ;
               ((boolean[]) buf[68])[0] = rslt.wasNull();
               ((String[]) buf[69])[0] = rslt.getVarchar(37) ;
               ((boolean[]) buf[70])[0] = rslt.wasNull();
               ((short[]) buf[71])[0] = rslt.getShort(38) ;
               ((boolean[]) buf[72])[0] = rslt.wasNull();
               ((String[]) buf[73])[0] = rslt.getVarchar(39) ;
               ((boolean[]) buf[74])[0] = rslt.wasNull();
               ((String[]) buf[75])[0] = rslt.getVarchar(40) ;
               ((boolean[]) buf[76])[0] = rslt.wasNull();
               ((long[]) buf[77])[0] = rslt.getLong(41) ;
               ((boolean[]) buf[78])[0] = rslt.wasNull();
               ((String[]) buf[79])[0] = rslt.getVarchar(42) ;
               ((boolean[]) buf[80])[0] = rslt.wasNull();
               ((String[]) buf[81])[0] = rslt.getVarchar(43) ;
               ((boolean[]) buf[82])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[83])[0] = rslt.getGXDateTime(44) ;
               ((boolean[]) buf[84])[0] = rslt.wasNull();
               ((String[]) buf[85])[0] = rslt.getVarchar(45) ;
               ((boolean[]) buf[86])[0] = rslt.wasNull();
               ((String[]) buf[87])[0] = rslt.getVarchar(46) ;
               ((boolean[]) buf[88])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[89])[0] = rslt.getGXDateTime(47) ;
               ((boolean[]) buf[90])[0] = rslt.wasNull();
               break;
            case 35 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((String[]) buf[3])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[4])[0] = rslt.wasNull();
               ((String[]) buf[5])[0] = rslt.getVarchar(5) ;
               ((boolean[]) buf[6])[0] = rslt.wasNull();
               ((long[]) buf[7])[0] = rslt.getLong(6) ;
               ((boolean[]) buf[8])[0] = rslt.wasNull();
               ((String[]) buf[9])[0] = rslt.getVarchar(7) ;
               ((boolean[]) buf[10])[0] = rslt.wasNull();
               ((String[]) buf[11])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[12])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[13])[0] = rslt.getGXDateTime(9) ;
               ((boolean[]) buf[14])[0] = rslt.wasNull();
               ((String[]) buf[15])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[16])[0] = rslt.wasNull();
               ((String[]) buf[17])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[18])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[19])[0] = rslt.getGXDateTime(12) ;
               ((boolean[]) buf[20])[0] = rslt.wasNull();
               break;
            case 37 :
               ((long[]) buf[0])[0] = rslt.getLong(1) ;
               ((short[]) buf[1])[0] = rslt.getShort(2) ;
               ((String[]) buf[2])[0] = rslt.getVarchar(3) ;
               ((boolean[]) buf[3])[0] = rslt.wasNull();
               ((String[]) buf[4])[0] = rslt.getVarchar(4) ;
               ((boolean[]) buf[5])[0] = rslt.wasNull();
               ((short[]) buf[6])[0] = rslt.getShort(5) ;
               ((boolean[]) buf[7])[0] = rslt.wasNull();
               ((int[]) buf[8])[0] = rslt.getInt(6) ;
               ((boolean[]) buf[9])[0] = rslt.wasNull();
               ((short[]) buf[10])[0] = rslt.getShort(7) ;
               ((boolean[]) buf[11])[0] = rslt.wasNull();
               ((String[]) buf[12])[0] = rslt.getVarchar(8) ;
               ((boolean[]) buf[13])[0] = rslt.wasNull();
               ((String[]) buf[14])[0] = rslt.getVarchar(9) ;
               ((boolean[]) buf[15])[0] = rslt.wasNull();
               ((String[]) buf[16])[0] = rslt.getVarchar(10) ;
               ((boolean[]) buf[17])[0] = rslt.wasNull();
               ((String[]) buf[18])[0] = rslt.getVarchar(11) ;
               ((boolean[]) buf[19])[0] = rslt.wasNull();
               ((long[]) buf[20])[0] = rslt.getLong(12) ;
               ((boolean[]) buf[21])[0] = rslt.wasNull();
               ((String[]) buf[22])[0] = rslt.getVarchar(13) ;
               ((boolean[]) buf[23])[0] = rslt.wasNull();
               ((String[]) buf[24])[0] = rslt.getVarchar(14) ;
               ((boolean[]) buf[25])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[26])[0] = rslt.getGXDateTime(15) ;
               ((boolean[]) buf[27])[0] = rslt.wasNull();
               ((String[]) buf[28])[0] = rslt.getVarchar(16) ;
               ((boolean[]) buf[29])[0] = rslt.wasNull();
               ((String[]) buf[30])[0] = rslt.getVarchar(17) ;
               ((boolean[]) buf[31])[0] = rslt.wasNull();
               ((java.util.Date[]) buf[32])[0] = rslt.getGXDateTime(18) ;
               ((boolean[]) buf[33])[0] = rslt.wasNull();
               break;
      }
   }

   public void setParameters( int cursor ,
                              IFieldSetter stmt ,
                              Object[] parms ) throws SQLException
   {
      switch ( cursor )
      {
            case 0 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 1 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 2 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 3 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 4 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 5 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 6 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 7 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 8 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setVarchar(3, (String)parms[2], 50, false);
               stmt.setVarchar(4, (String)parms[3], 2, false);
               break;
            case 9 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 10 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setVarchar(3, (String)parms[2], 1, false);
               stmt.setVarchar(4, (String)parms[3], 50, false);
               break;
            case 11 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 12 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 2, false);
               stmt.setVarchar(3, (String)parms[2], 50, false);
               break;
            case 13 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 14 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 2, false);
               break;
            case 15 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 16 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setVarchar(3, (String)parms[2], 1, false);
               stmt.setVarchar(4, (String)parms[3], 50, false);
               break;
            case 17 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 18 :
               stmt.setVarchar(1, (String)parms[0], 50, false);
               break;
            case 19 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 20 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 2, false);
               stmt.setVarchar(3, (String)parms[2], 50, false);
               stmt.setVarchar(4, (String)parms[3], 20, false);
               break;
            case 21 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 22 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 128, false);
               stmt.setVarchar(3, (String)parms[2], 2, false);
               break;
            case 23 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 24 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 20, false);
               break;
            case 25 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 26 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 20, false);
               stmt.setShort(3, ((Number) parms[2]).shortValue());
               break;
            case 27 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 28 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setVarchar(2, (String)parms[1], 20, false);
               break;
            case 29 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 30 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setShort(3, ((Number) parms[2]).shortValue());
               stmt.setShort(4, ((Number) parms[3]).shortValue());
               break;
            case 31 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 32 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setShort(3, ((Number) parms[2]).shortValue());
               break;
            case 33 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 34 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setVarchar(3, (String)parms[2], 50, false);
               break;
            case 35 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 36 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               stmt.setVarchar(3, (String)parms[2], 2, false);
               break;
            case 37 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               break;
            case 38 :
               stmt.setLong(1, ((Number) parms[0]).longValue());
               stmt.setShort(2, ((Number) parms[1]).shortValue());
               break;
      }
   }

}

